SELECT *
FROM ethereum
Query time: 0.000 seconds
Rows returned: 0

Total running time: 0.000 seconds
-- Truncate request table to include only rows with timestamps between:
--   the first response obtained by the last client to obtain a response
--   and
--   the last response obtained by the client first to finish obtaining responses
-- Then, cut off 5 seconds from each end.
-- We could use a view here too, but a physical table is much faster to access.
-- The script processing this file normally makes sure that
-- changes made by this script to the database are rolled back and are not persisted.
CREATE TABLE request_truncated as
SELECT *
FROM request
WHERE
  ts - 5000000 >= (SELECT max(t)
    FROM (SELECT min(ts) as t
      FROM request
      WHERE event = 'REQ_FINISHED'
      GROUP BY nodeId))
  AND ts + 5000000 <= (SELECT min(t)
    FROM (SELECT max(ts) as t
      FROM request
      WHERE event = 'REQ_SEND'
      GROUP BY nodeId))
Query time: 0.000 seconds
Rows returned: 0

-- Do the same as above with the protocol table.
-- Note that the truncation times are still taken from the request table.
CREATE TABLE protocol_truncated as
SELECT *
FROM protocol
WHERE
  ts - 5000000 >= (SELECT max(t)
    FROM (SELECT min(ts) as t
      FROM request
      WHERE event = 'REQ_FINISHED'
      GROUP BY nodeId))
  AND ts + 5000000 <= (SELECT min(t)
    FROM (SELECT max(ts) as t
      FROM request
      WHERE event = 'REQ_SEND'
      GROUP BY nodeId))
Query time: 0.001 seconds
Rows returned: 0

-- Do the same as above with the CPU usage table.
-- Note that the truncation times are still taken from the request table.
CREATE TABLE cpuusage_truncated as
SELECT *
FROM cpuusage
WHERE
            ts - 5000000 >= (SELECT max(t)
                             FROM (SELECT min(ts) as t
                                   FROM request
                                   WHERE event = 'REQ_FINISHED'
                                   GROUP BY nodeId))
  AND ts + 5000000 <= (SELECT min(t)
                       FROM (SELECT max(ts) as t
                             FROM request
                             WHERE event = 'REQ_SEND'
                             GROUP BY nodeId))
Query time: 0.000 seconds
Rows returned: 0

-- Total CPU usage (average over all peers), truncated data
-- export cpu-total.val
SELECT avg(total)
from cpuusage_truncated
WHERE event = 'CPU_USAGE'
-- (totalcpu[%])
Query time: 0.000 seconds
None
Rows returned: 1

-- System CPU usage (average over all peers), truncated data
-- (This is the CPU usage reported under "System" in /proc/stat)
-- export cpu-system.val
SELECT avg(system)
from cpuusage_truncated
WHERE event = 'CPU_USAGE'
-- (systemcpu[%])
Query time: 0.000 seconds
None
Rows returned: 1

-- End-to-end average request latency, all requests
-- export latency-avg-shortened-raw.val
--
SELECT avg(r2.latency)  / 1000.0
FROM request r1 JOIN request r2 ON r1.nodeId = r2.nodeId
                                AND r1.clSn = r2.clSn
                                AND r1.event = 'REQ_SEND'
                                AND r2.event = 'REQ_FINISHED'
   WHERE r1.ts - 30000000 < (SELECT min(r1.ts)
                            FROM request r1
                            WHERE event = 'REQ_SEND')
-- (avg[ms])
Query time: 0.000 seconds
None
Rows returned: 1

-- End-to-end average request latency, all requests
-- export latency-95pctile-shortened-raw.val
--
SELECT r2.latency  / 1000.0
FROM request r1 JOIN request r2 ON r1.nodeId = r2.nodeId
                                AND r1.clSn = r2.clSn
                                AND r1.event = 'REQ_SEND'
                                AND r2.event = 'REQ_FINISHED'
   WHERE r1.ts - 30000000 < (SELECT min(r1.ts)
                            FROM request r1
                            WHERE event = 'REQ_SEND')
ORDER BY r2.latency ASC
LIMIT 1
    OFFSET (SELECT count()
            FROM request r1 JOIN request r2 ON r1.nodeId = r2.nodeId
                                AND r1.clSn = r2.clSn
                                AND r1.event = 'REQ_SEND'
                                AND r2.event = 'REQ_FINISHED'
            WHERE r1.ts - 30000000 < (SELECT min(r1.ts)
                            FROM request r1
                            WHERE event = 'REQ_SEND'))* 95 / 100;
Query time: 0.000 seconds
Rows returned: 0

-- (latency[ms])
Query time: 0.000 seconds
Rows returned: 0

-- End-to-end average request latency, all requests
-- export latency-avg-raw.val
--
SELECT avg(latency) / 1000.0
FROM request
WHERE event = 'REQ_FINISHED'
-- (avg[ms])
Query time: 0.000 seconds
None
Rows returned: 1

-- Latency standard deviation, all requests
-- export latency-stdev-raw.val
--
SELECT stdev(latency) / 1000.0
FROM request
WHERE event = 'REQ_FINISHED'
-- (stdev[ms])
Query time: 0.000 seconds
None
Rows returned: 1

-- End-to-end average request latency, truncated requests
-- export latency-avg-trunc.val
--
SELECT avg(latency) / 1000.0
FROM request_truncated
WHERE event = 'REQ_FINISHED'
-- (avg[ms])
Query time: 0.000 seconds
None
Rows returned: 1

-- Latency standard deviation, truncated requests
-- export latency-stdev-trunc.val
--
SELECT stdev(latency) / 1000.0
FROM request_truncated
WHERE event = 'REQ_FINISHED'
-- (stdev[ms])
Query time: 0.000 seconds
None
Rows returned: 1

-- 95th percentile request latency, all requests
-- export latency-95pctile-raw.val
--
SELECT latency / 1000.0
FROM request
WHERE event = 'REQ_FINISHED'
ORDER BY latency ASC
LIMIT 1
    OFFSET (SELECT count()
            FROM request
            WHERE event = 'REQ_FINISHED') * 95 / 100;
-- (latency[ms])
Query time: 0.000 seconds
Rows returned: 0

-- 95th percentile request latency, truncated requests
-- export latency-95pctile-trunc.val
--
SELECT latency / 1000.0
FROM request_truncated
WHERE event = 'REQ_FINISHED'
ORDER BY latency ASC
LIMIT 1
    OFFSET (SELECT count()
            FROM request_truncated
            WHERE event = 'REQ_FINISHED') * 95 / 100;
-- (latency[ms])
Query time: 0.000 seconds
Rows returned: 0

-- End-to-end average request latency, all requests
-- export latency-avg-raw-nowm.val
--
SELECT avg(latency) / 1000.0
FROM request
WHERE event = 'ENOUGH_RESP'
-- (avg[ms])
Query time: 0.000 seconds
None
Rows returned: 1

-- Latency standard deviation, all requests
-- export latency-stdev-raw-nowm.val
--
SELECT stdev(latency) / 1000.0
FROM request
WHERE event = 'ENOUGH_RESP'
-- (stdev[ms])
Query time: 0.000 seconds
None
Rows returned: 1

-- End-to-end average request latency, truncated requests
-- export latency-avg-trunc-nowm.val
--
SELECT avg(latency) / 1000.0
FROM request_truncated
WHERE event = 'ENOUGH_RESP'
-- (avg[ms])
Query time: 0.000 seconds
None
Rows returned: 1

-- Latency standard deviation, truncated requests
-- export latency-stdev-trunc-nowm.val
--
SELECT stdev(latency) / 1000.0
FROM request_truncated
WHERE event = 'ENOUGH_RESP'
-- (stdev[ms])
Query time: 0.000 seconds
None
Rows returned: 1

-- 95th percentile request latency, all requests
-- export latency-95pctile-raw-nowm.val
--
SELECT latency / 1000.0
FROM request
WHERE event = 'ENOUGH_RESP'
ORDER BY latency ASC
LIMIT 1
    OFFSET (SELECT count()
            FROM request
            WHERE event = 'ENOUGH_RESP') * 95 / 100;
-- (latency[ms])
Query time: 0.000 seconds
Rows returned: 0

-- 95th percentile request latency, truncated requests
-- export latency-95pctile-trunc-nowm.val
--
SELECT latency / 1000.0
FROM request_truncated
WHERE event = 'ENOUGH_RESP'
ORDER BY latency ASC
LIMIT 1
    OFFSET (SELECT count()
            FROM request_truncated
            WHERE event = 'ENOUGH_RESP') * 95 / 100;
-- (latency[ms])
Query time: 0.000 seconds
Rows returned: 0

-- Average client slack per request, all clients
-- export client-slack-avg-raw.val
--
SELECT avg(latency)
FROM request
WHERE event = 'CLIENT_SLACK'
-- (avg[us])
Query time: 0.000 seconds
None
Rows returned: 1

-- Average client slack, truncated requests
-- export client-slack-avg-trunc.val
--
SELECT avg(latency)
FROM request_truncated
WHERE event = 'CLIENT_SLACK'
-- (avg[us])
Query time: 0.000 seconds
None
Rows returned: 1

-- Client slack standard deviation, all requests
-- export client-slack-stdev-raw.val
--
SELECT stdev(latency)
FROM request
WHERE event = 'CLIENT_SLACK'
-- (avg[us])
Query time: 0.000 seconds
None
Rows returned: 1

-- Client slack standard deviation, all requests
-- export client-slack-stdev-trunc.val
--
SELECT stdev(latency)
FROM request_truncated
WHERE event = 'CLIENT_SLACK'
-- (avg[us])
Query time: 0.000 seconds
None
Rows returned: 1

-- 1st percentile client slack, all requests
-- export client-slack-1pctile-raw.val
--
SELECT latency
FROM request
WHERE event = 'CLIENT_SLACK'
ORDER BY latency ASC
LIMIT 1
    OFFSET (SELECT count()
            FROM request
            WHERE event = 'CLIENT_SLACK') * 1 / 100;
-- (slack[us])
Query time: 0.000 seconds
Rows returned: 0

-- 1st percentile client slack, truncated requests
-- export client-slack-1pctile-trunc.val
--
SELECT latency
FROM request_truncated
WHERE event = 'CLIENT_SLACK'
ORDER BY latency ASC
LIMIT 1
    OFFSET (SELECT count()
            FROM request
            WHERE event = 'CLIENT_SLACK') * 1 / 100;
-- (slack[us])
Query time: 0.000 seconds
Rows returned: 0

-- Experiment duration in seconds
-- export duration-raw.val
--
SELECT (max(ts) - min(ts))/1000000.0
FROM request
WHERE event = 'REQ_FINISHED'
-- (duration[sec])
Query time: 0.000 seconds
None
Rows returned: 1

-- Experiment duration in seconds, truncated data
-- export duration-trunc.val
--
SELECT (max(ts) - min(ts))/1000000.0
FROM request_truncated
WHERE event = 'REQ_FINISHED'
-- (duration[sec])
Query time: 0.000 seconds
None
Rows returned: 1

-- Total number of requests (good for sanity checks whether everything has been delivered)
-- export nreq-raw.val
--
SELECT count()
FROM request
WHERE event = 'REQ_FINISHED'
-- (count[req])
Query time: 0.000 seconds
0
Rows returned: 1

-- Number of requests, using truncated request data
-- export nreq-trunc.val
--
SELECT count()
FROM request_truncated
WHERE event = 'REQ_FINISHED'
-- (count[req])
Query time: 0.000 seconds
0
Rows returned: 1

-- Throughput (without cutting off start and end)
-- export throughput-raw.val
--
-- !!!!! Multiplying by 10 for sampling
-- TODO parametrize the sumpling multiplier
SELECT 10 * 1000000.0 * count() / (max(ts) - min(ts))
FROM request
WHERE event = 'REQ_FINISHED'
-- (throughput[req/sec])
Query time: 0.000 seconds
None
Rows returned: 1

-- Throughput, using truncated request data
-- export throughput-trunc.val
--
-- !!!!! Multiplying by 10 for sampling
-- TODO parametrize the sumpling multiplier
SELECT 10 * 1000000.0 * count() / (max(ts) - min(ts))
FROM request_truncated
WHERE event = 'REQ_FINISHED'
-- (throughput[req/sec])
Query time: 0.000 seconds
None
Rows returned: 1

-- Average batch size
-- export batch-size-avg-trunc.val
--
SELECT avg(val)
FROM protocol_truncated
WHERE event = 'PROPOSE'
-- (avg-batch-size[req])
Query time: 0.000 seconds
None
Rows returned: 1

-- 10th percentile batch size
-- export batch-size-10pctile-trunc.val
--
SELECT val
FROM protocol_truncated
WHERE event = 'PROPOSE'
ORDER BY val ASC
LIMIT 1
OFFSET (SELECT count() from protocol_truncated WHERE event = 'PROPOSE') * 10 / 100
-- (10th-pctile[req])
Query time: 0.000 seconds
Rows returned: 0

-- 90th percentile batch size
-- export batch-size-90pctile-trunc.val
--
SELECT val
FROM protocol_truncated
WHERE event = 'PROPOSE'
ORDER BY val ASC
LIMIT 1
    OFFSET (SELECT count() from protocol_truncated WHERE event = 'PROPOSE') * 90 / 100
-- (90th-pctile[req])
Query time: 0.000 seconds
Rows returned: 0

-- average proposal rate
-- export propose-rate-raw.val
SELECT count(*) / ((max(ts) - min(ts))/1000000.0)
FROM protocol
WHERE event = 'PROPOSE'
-- (rate[batches/sec])
Query time: 0.000 seconds
1.496417389716844
Rows returned: 1

-- average proposal rate, truncated data
-- export propose-rate-trunc.val
SELECT count(*) / ((max(ts) - min(ts))/1000000.00)
FROM protocol_truncated
WHERE event = 'PROPOSE'
-- (rate[batches/sec])
Query time: 0.000 seconds
None
Rows returned: 1

-- average commit rate
-- export commit-rate-raw.val
SELECT count(*) / ((max(ts) - min(ts))/1000000.0)
FROM protocol
WHERE event = 'COMMIT'
-- (rate[batches/sec])
Query time: 0.000 seconds
24.06008208949619
Rows returned: 1

-- average commit rate, truncated data
-- export commit-rate-trunc.val
SELECT count(*) / ((max(ts) - min(ts))/1000000.0)
FROM protocol_truncated
WHERE event = 'COMMIT'
-- (rate[batches/sec])
Query time: 0.000 seconds
None
Rows returned: 1

-- average message batch, truncated data
-- export msg-batch-avg-trunc.val
SELECT avg(val)
FROM protocol_truncated
where event = 'MSG_BATCH'
-- (batchsize[msg])
Query time: 0.000 seconds
None
Rows returned: 1

-- minimal number of epochs
-- this is the number of epochs the node with the fewest epochs went through (ideally same for all nodes)
-- export epochs-min.val
SELECT min(lastEpoch)
FROM (SELECT max(seqNr) as lastEpoch
      FROM protocol
      WHERE event = 'NEW_EPOCH'
      GROUP BY nodeId)
Query time: 0.000 seconds
1
Rows returned: 1

-- maximal number of epochs
-- this is the number of epochs the node with the fewest epochs went through (ideally same for all nodes)
-- export epochs-max.val
SELECT max(lastEpoch)
FROM (SELECT max(seqNr) as lastEpoch
      FROM protocol
      WHERE event = 'NEW_EPOCH'
      GROUP BY nodeId)
Query time: 0.000 seconds
1
Rows returned: 1

-- maximal number of epochs
-- this is the number of epochs the node with the fewest epochs went through (ideally same for all nodes)
-- export epochs-avg.val
SELECT avg(lastEpoch)
FROM (SELECT max(seqNr) as lastEpoch
      FROM protocol
      WHERE event = 'NEW_EPOCH'
      GROUP BY nodeId)
Query time: 0.000 seconds
1.0
Rows returned: 1

-- Total number of view changes at all nodes
-- export viewchanges-total.val
SELECT count()
FROM protocol
WHERE event = 'VIEW_CHANGE'
Query time: 0.000 seconds
8
Rows returned: 1

-- Average number of view changes (should be the total number of actual view changes, if every node completes each view change)
-- export viewchanges-avg.val
SELECT count()*1.0 / (SELECT count() from (SELECT DISTINCT nodeId FROM protocol))
FROM protocol
WHERE event = 'VIEW_CHANGE'
Query time: 0.000 seconds
4.0
Rows returned: 1

Total running time: 0.005 seconds
-- Truncate request table to include only rows with timestamps between:
--   the first response obtained by the last client to obtain a response
--   and
--   the last request obtained by the client first to finish sending requests
-- Then, cut off 5 second from each end.
-- We could use a view here too, but a physical table is much faster to access.
-- The script processing this file normally makes sure that
-- changes made by this script to the database are rolled back and are not persisted.
CREATE TABLE request_truncated as
SELECT *
FROM request
WHERE
  ts - 5000000 >= (SELECT max(t)
    FROM (SELECT min(ts) as t
      FROM request
      WHERE event = 'REQ_FINISHED'
      GROUP BY nodeId))
  AND ts + 5000000 <= (SELECT min(t)
    FROM (SELECT max(ts) as t
      FROM request
      WHERE event = 'REQ_SEND'
      GROUP BY nodeId))
Query time: 0.000 seconds
Rows returned: 0

-- Do the same as above with the protocol table.
-- Note that the truncation times are still taken from the request table.
CREATE TABLE protocol_truncated as
SELECT *
FROM protocol
WHERE
  ts - 5000000 >= (SELECT max(t)
    FROM (SELECT min(ts) as t
      FROM request
      WHERE event = 'REQ_FINISHED'
      GROUP BY nodeId))
  AND ts + 5000000 <= (SELECT min(t)
    FROM (SELECT max(ts) as t
      FROM request
      WHERE event = 'REQ_SEND'
      GROUP BY nodeId))
Query time: 0.001 seconds
Rows returned: 0

-- Do the same as above with the CPU usage table.
-- Note that the truncation times are still taken from the request table.
CREATE TABLE cpuusage_truncated as
SELECT *
FROM cpuusage
WHERE
  ts - 5000000 >= (SELECT max(t)
    FROM (SELECT min(ts) as t
      FROM request
      WHERE event = 'REQ_FINISHED'
      GROUP BY nodeId))
  AND ts + 5000000 <= (SELECT min(t)
    FROM (SELECT max(ts) as t
      FROM request
      WHERE event = 'REQ_SEND'
      GROUP BY nodeId))
Query time: 0.000 seconds
Rows returned: 0

-- Total CPU usage in time (peer 0)
-- export timeline-cpu-usage-total-peer-0.csv
SELECT (ts - (SELECT min(ts) FROM cpuusage WHERE event = 'CPU_USAGE' AND nodeId = 0))/1000 as msec, total
from cpuusage
WHERE event = 'CPU_USAGE' AND nodeId = 0
-- (msec, totalcpu[%])
Query time: 0.001 seconds
0, 97
500, 100
1002, 99
1503, 100
2004, 100
2505, 99
3007, 98
3509, 98
4011, 97
4512, 93
5013, 96
5514, 95
6015, 96
6516, 95
7017, 95
7518, 96
8019, 95
8520, 92
9031, 96
9532, 95
10033, 95
10534, 95
11035, 98
11537, 96
12038, 96
12540, 94
13042, 97
13544, 96
14045, 95
14546, 92
15047, 96
15548, 95
16049, 94
16551, 97
17053, 97
17554, 93
18055, 95
18556, 92
19058, 95
19559, 95
20063, 96
20564, 96
21083, 97
21583, 95
22084, 95
22585, 96
23086, 97
23588, 97
24089, 95
24590, 91
25092, 97
25594, 97
26095, 97
26596, 95
27100, 97
27602, 95
28103, 97
28604, 95
29105, 96
29606, 97
30107, 95
30609, 96
31110, 96
31611, 97
32131, 96
32633, 94
33148, 96
33649, 97
34150, 100
34652, 100
35153, 100
35654, 99
36155, 100
36657, 100
37158, 99
37659, 99
38160, 99
38661, 99
39162, 100
39664, 99
40164, 99
40665, 99
41166, 98
41668, 100
42169, 99
42670, 100
43172, 99
43672, 99
44174, 99
44675, 100
45177, 99
45678, 100
46179, 99
46680, 100
47181, 99
47682, 99
48183, 99
48685, 99
49186, 99
49687, 99
50188, 98
50689, 99
51190, 100
51691, 99
52192, 99
52693, 99
53194, 100
53695, 100
54196, 98
54697, 100
55198, 94
55699, 99
56200, 99
56701, 100
57202, 100
57703, 100
58203, 100
58705, 99
59206, 100
59707, 100
60209, 99
60711, 100
61212, 98
61713, 99
62215, 100
62716, 100
63217, 99
63719, 99
64220, 99
64722, 99
65224, 99
65725, 99
66227, 100
66728, 100
67230, 99
67731, 99
68232, 99
68733, 99
69234, 100
69735, 99
70237, 100
70739, 99
71240, 100
71741, 99
72243, 100
72744, 99
73245, 99
73747, 99
74248, 99
74749, 99
75250, 99
75752, 100
76252, 100
76754, 99
77255, 99
77756, 99
78257, 99
78758, 100
79260, 100
79761, 99
80262, 99
80763, 98
81264, 99
81766, 100
82267, 99
82769, 99
83271, 99
83771, 100
84272, 99
84773, 100
85274, 100
85775, 99
86276, 99
86776, 99
87277, 100
87779, 100
88280, 100
88781, 99
89282, 100
89784, 99
90285, 99
90786, 99
91287, 99
91788, 99
92290, 100
92791, 99
93293, 99
93794, 99
94296, 100
94797, 98
95298, 99
95800, 99
96302, 100
96803, 99
97304, 99
97805, 99
98306, 99
98807, 99
99309, 100
99810, 100
100311, 100
100813, 100
101314, 100
101815, 100
102316, 98
102817, 100
103319, 99
103820, 99
104321, 81
104822, 24
105324, 47
105826, 83
106326, 100
106827, 99
107328, 100
107829, 99
108331, 99
108832, 99
109333, 99
109834, 100
110335, 99
110837, 99
111338, 100
111839, 100
112341, 99
112842, 99
113343, 99
113844, 99
114345, 99
114846, 99
115347, 100
115849, 99
116351, 100
116852, 100
117353, 100
117854, 100
118355, 99
118855, 100
119357, 100
119858, 99
120359, 99
120861, 99
121362, 100
121864, 99
122365, 100
122866, 99
123448, 100
123949, 100
124452, 99
124992, 99
125494, 99
125998, 99
126510, 100
127025, 99
127527, 99
128029, 99
128530, 99
129033, 100
129535, 100
130037, 99
130543, 100
131047, 100
131550, 100
132053, 100
132560, 100
133062, 100
133570, 100
134077, 100
134580, 100
135784, 99
136295, 100
136797, 99
137300, 100
137807, 100
138311, 100
138813, 99
139316, 100
139819, 99
140597, 99
141100, 100
141603, 100
142106, 99
142612, 100
143116, 100
143619, 100
144124, 100
144662, 100
145165, 99
145668, 100
146170, 100
146676, 100
147182, 99
147685, 99
148189, 100
148693, 100
149197, 100
149700, 100
150202, 99
150705, 99
151210, 100
151713, 99
152323, 100
152826, 99
153330, 99
153833, 100
154336, 100
154877, 99
155381, 100
155884, 99
156387, 100
156890, 100
157393, 100
157895, 100
158398, 99
158901, 99
159405, 100
159908, 100
160412, 100
161030, 100
161534, 100
162038, 99
162542, 99
163045, 99
163548, 100
164051, 99
164555, 99
165057, 100
165560, 100
166062, 94
166565, 100
167068, 100
167570, 100
168073, 100
168575, 100
169078, 100
169581, 100
170084, 99
170607, 99
171112, 100
171766, 100
172269, 100
172774, 100
173280, 100
173843, 99
175595, 99
176124, 94
176632, 87
177139, 55
177701, 70
178240, 77
178746, 52
179253, 65
179759, 100
180351, 76
180862, 65
181372, 71
181895, 71
182431, 80
182956, 97
183469, 97
183979, 95
184490, 98
184997, 97
185506, 94
186012, 99
186518, 60
187039, 71
187554, 73
188084, 57
188595, 94
189103, 79
189609, 91
190111, 97
190615, 99
191118, 97
191622, 100
192140, 92
192649, 93
193157, 93
193667, 91
194169, 99
194672, 99
195182, 95
195692, 92
196202, 93
196709, 99
197218, 100
197726, 98
198237, 92
198748, 93
199258, 92
199767, 93
200279, 98
200786, 93
201295, 92
201804, 96
202319, 75
202836, 59
203345, 71
203868, 63
204374, 63
204881, 94
205387, 99
205892, 100
206399, 96
206902, 99
207411, 92
207921, 92
208431, 94
208935, 100
209445, 95
209958, 92
210462, 100
210969, 99
211479, 92
211987, 95
212495, 94
213003, 95
213511, 93
214017, 94
214528, 95
215036, 93
215539, 97
216053, 77
216565, 73
217072, 73
217576, 100
218080, 96
218581, 99
219090, 98
219599, 92
220113, 94
220626, 95
221134, 92
221644, 91
222148, 95
222649, 99
223151, 93
223654, 99
224160, 95
224661, 97
225169, 78
225673, 91
226176, 100
226677, 100
227179, 100
227681, 100
228189, 100
228695, 92
229202, 94
229709, 94
230220, 91
230726, 92
231233, 92
231741, 89
232245, 90
232753, 93
233256, 94
233766, 99
234270, 98
234772, 90
235339, 98
235842, 96
236412, 85
237189, 96
237813, 100
238323, 100
238865, 98
239420, 100
239921, 100
240426, 100
240927, 100
241428, 100
241932, 100
242433, 100
242934, 99
243437, 99
243938, 99
244439, 99
244940, 100
245441, 100
Rows returned: 481

-- Total CPU usage in time (peer 1)
-- export timeline-cpu-usage-total-peer-1.csv
SELECT (ts - (SELECT min(ts) FROM cpuusage WHERE event = 'CPU_USAGE' AND nodeId = 1))/1000 as msec, total
from cpuusage
WHERE event = 'CPU_USAGE' AND nodeId = 1
-- (msec, totalcpu[%])
Query time: 0.000 seconds
Rows returned: 0

-- Total CPU usage in time (average over all peers)
-- export timeline-cpu-usage-total.csv
SELECT (ts - (SELECT min(ts) FROM cpuusage WHERE event = 'CPU_USAGE'))/1000 as msec, avg(total)
from cpuusage
WHERE event = 'CPU_USAGE'
GROUP BY msec
-- (msec, totalcpu[%])
Query time: 0.001 seconds
0, 97.0
28, 97.0
500, 100.0
529, 99.0
1002, 99.0
1031, 99.0
1503, 100.0
1532, 100.0
2004, 100.0
2034, 100.0
2505, 99.0
2536, 99.0
3007, 98.0
3338, 98.0
3509, 98.0
3839, 96.0
4011, 97.0
4340, 96.0
4512, 93.0
4862, 95.0
5013, 96.0
5363, 94.0
5514, 95.0
5865, 96.0
6015, 96.0
6366, 93.0
6516, 95.0
6909, 96.0
7017, 95.0
7410, 96.0
7518, 96.0
7911, 96.0
8019, 95.0
8412, 92.0
8520, 92.0
8913, 95.0
9031, 96.0
9414, 96.0
9532, 95.0
9919, 95.0
10033, 95.0
10420, 96.0
10534, 95.0
10926, 96.0
11035, 98.0
11427, 97.0
11537, 96.0
11929, 96.0
12038, 96.0
12430, 94.0
12540, 94.0
12930, 96.0
13042, 97.0
13431, 96.0
13544, 96.0
13933, 96.0
14045, 95.0
14435, 92.0
14546, 92.0
14936, 95.0
15047, 96.0
15437, 96.0
15548, 95.0
15955, 94.0
16049, 94.0
16456, 95.0
16551, 97.0
16959, 97.0
17053, 97.0
17461, 94.0
17554, 93.0
17962, 95.0
18055, 95.0
18463, 93.0
18556, 92.0
18966, 96.0
19058, 95.0
19467, 94.0
19559, 95.0
19971, 95.0
20063, 96.0
20472, 96.0
20564, 96.0
20973, 97.0
21083, 97.0
21474, 96.0
21583, 95.0
21975, 95.0
22084, 95.0
22476, 96.0
22585, 96.0
22980, 96.0
23086, 97.0
23483, 98.0
23588, 97.0
23990, 95.0
24089, 95.0
24491, 92.0
24590, 91.0
25007, 96.0
25092, 97.0
25509, 96.0
25594, 97.0
26013, 97.0
26095, 97.0
26514, 96.0
26596, 95.0
27024, 95.0
27100, 97.0
27526, 96.0
27602, 95.0
28043, 97.0
28103, 97.0
28544, 96.0
28604, 95.0
29067, 95.0
29105, 96.0
29568, 97.0
29606, 97.0
30070, 95.0
30107, 95.0
30571, 96.0
30609, 96.0
31076, 96.0
31110, 96.0
31578, 97.0
31611, 97.0
32082, 96.0
32131, 96.0
32583, 94.0
32633, 94.0
33086, 95.0
33148, 96.0
33587, 97.0
33649, 97.0
34089, 100.0
34150, 100.0
34590, 100.0
34652, 100.0
35091, 99.0
35153, 100.0
35593, 99.0
35654, 99.0
36094, 100.0
36155, 100.0
36596, 100.0
36657, 100.0
37097, 99.0
37158, 99.0
37598, 99.0
37659, 99.0
38100, 99.0
38160, 99.0
38601, 99.0
38661, 99.0
39103, 100.0
39162, 100.0
39604, 99.0
39664, 99.0
40105, 99.0
40164, 99.0
40605, 99.0
40665, 99.0
41107, 99.0
41166, 98.0
41608, 99.0
41668, 100.0
42109, 99.0
42169, 99.0
42609, 99.0
42670, 100.0
43111, 99.0
43172, 99.0
43613, 99.0
43672, 99.0
44114, 99.0
44174, 99.0
44616, 100.0
44675, 100.0
45117, 99.0
45177, 99.0
45618, 100.0
45678, 100.0
46119, 100.0
46179, 99.0
46620, 99.0
46680, 100.0
47121, 99.0
47181, 99.0
47622, 99.0
47682, 99.0
48124, 99.0
48183, 99.0
48625, 99.0
48685, 99.0
49126, 99.0
49186, 99.0
49627, 100.0
49687, 99.0
50129, 99.0
50188, 98.0
50631, 100.0
50689, 99.0
51132, 99.0
51190, 100.0
51632, 100.0
51691, 99.0
52134, 99.0
52192, 99.0
52635, 99.0
52693, 99.0
53136, 99.0
53194, 100.0
53637, 100.0
53695, 100.0
54139, 99.0
54196, 98.0
54640, 100.0
54697, 100.0
55141, 99.0
55198, 94.0
55643, 94.0
55699, 99.0
56144, 99.0
56200, 99.0
56645, 100.0
56701, 100.0
57146, 100.0
57202, 100.0
57648, 99.0
57703, 100.0
58149, 100.0
58203, 100.0
58651, 100.0
58705, 99.0
59152, 99.0
59206, 100.0
59654, 100.0
59707, 100.0
60155, 99.0
60209, 99.0
60657, 100.0
60711, 100.0
61159, 99.0
61212, 98.0
61660, 99.0
61713, 99.0
62161, 100.0
62215, 100.0
62665, 100.0
62716, 100.0
63166, 99.0
63217, 99.0
63667, 100.0
63719, 99.0
64168, 99.0
64220, 99.0
64669, 99.0
64722, 99.0
65170, 99.0
65224, 99.0
65671, 98.0
65725, 99.0
66173, 100.0
66227, 100.0
66673, 100.0
66728, 100.0
67174, 99.0
67230, 99.0
67676, 99.0
67731, 99.0
68176, 99.0
68232, 99.0
68677, 99.0
68733, 99.0
69179, 100.0
69234, 100.0
69680, 99.0
69735, 99.0
70181, 100.0
70237, 100.0
70682, 100.0
70739, 99.0
71184, 100.0
71240, 100.0
71685, 100.0
71741, 99.0
72186, 99.0
72243, 100.0
72688, 99.0
72744, 99.0
73189, 99.0
73245, 99.0
73690, 99.0
73747, 99.0
74192, 100.0
74248, 99.0
74693, 99.0
74749, 99.0
75194, 99.0
75250, 99.0
75695, 99.0
75752, 100.0
76196, 100.0
76252, 100.0
76698, 99.0
76754, 99.0
77199, 99.0
77255, 99.0
77700, 99.0
77756, 99.0
78201, 99.0
78257, 99.0
78702, 100.0
78758, 100.0
79203, 100.0
79260, 100.0
79704, 99.0
79761, 99.0
80205, 99.0
80262, 99.0
80707, 98.0
80763, 98.0
81207, 98.0
81264, 99.0
81709, 100.0
81766, 100.0
82210, 99.0
82267, 99.0
82710, 99.0
82769, 99.0
83212, 99.0
83271, 99.0
83713, 100.0
83771, 100.0
84214, 99.0
84272, 99.0
84715, 100.0
84773, 100.0
85216, 100.0
85274, 100.0
85717, 99.0
85775, 99.0
86218, 99.0
86276, 99.0
86719, 99.0
86776, 99.0
87221, 100.0
87277, 100.0
87722, 100.0
87779, 100.0
88223, 100.0
88280, 100.0
88725, 99.0
88781, 99.0
89226, 99.0
89282, 100.0
89727, 99.0
89784, 99.0
90228, 99.0
90285, 99.0
90730, 99.0
90786, 99.0
91231, 99.0
91287, 99.0
91733, 99.0
91788, 99.0
92233, 100.0
92290, 100.0
92734, 99.0
92791, 99.0
93235, 100.0
93293, 99.0
93737, 99.0
93794, 99.0
94238, 100.0
94296, 100.0
94740, 98.0
94797, 98.0
95241, 98.0
95298, 99.0
95742, 100.0
95800, 99.0
96243, 99.0
96302, 100.0
96745, 99.0
96803, 99.0
97246, 99.0
97304, 99.0
97747, 99.0
97805, 99.0
98248, 99.0
98306, 99.0
98750, 99.0
98807, 99.0
99251, 100.0
99309, 100.0
99752, 100.0
99810, 100.0
100253, 99.0
100311, 100.0
100755, 100.0
100813, 100.0
101256, 100.0
101314, 100.0
101757, 100.0
101815, 100.0
102258, 99.0
102316, 98.0
102759, 100.0
102817, 100.0
103260, 99.0
103319, 99.0
103761, 99.0
103820, 99.0
104262, 89.0
104321, 81.0
104763, 25.0
104822, 24.0
105264, 38.0
105324, 47.0
105766, 83.0
105826, 83.0
106267, 100.0
106326, 100.0
106769, 99.0
106827, 99.0
107269, 99.0
107328, 100.0
107771, 99.0
107829, 99.0
108272, 99.0
108331, 99.0
108774, 99.0
108832, 99.0
109276, 99.0
109333, 99.0
109777, 99.0
109834, 100.0
110278, 99.0
110335, 99.0
110779, 99.0
110837, 99.0
111280, 100.0
111338, 100.0
111781, 100.0
111839, 100.0
112282, 100.0
112341, 99.0
112783, 99.0
112842, 99.0
113285, 99.0
113343, 99.0
113787, 99.0
113844, 99.0
114288, 99.0
114345, 99.0
114789, 99.0
114846, 99.0
115290, 99.0
115347, 100.0
115792, 99.0
115849, 99.0
116293, 99.0
116351, 100.0
116793, 100.0
116852, 100.0
117295, 100.0
117353, 100.0
117796, 100.0
117854, 100.0
118297, 99.0
118355, 99.0
118799, 99.0
118855, 100.0
119300, 100.0
119357, 100.0
119802, 99.0
119858, 99.0
120303, 99.0
120359, 99.0
120804, 99.0
120861, 99.0
121305, 100.0
121362, 100.0
121806, 99.0
121864, 99.0
122307, 100.0
122365, 100.0
122808, 99.0
122866, 99.0
123309, 100.0
123448, 100.0
123811, 100.0
123949, 100.0
124313, 100.0
124452, 99.0
124816, 99.0
124992, 99.0
125319, 99.0
125494, 99.0
125821, 99.0
125998, 99.0
126326, 100.0
126510, 100.0
126834, 99.0
127025, 99.0
127345, 100.0
127527, 99.0
127848, 99.0
128029, 99.0
128354, 99.0
128530, 99.0
128855, 99.0
129033, 100.0
129357, 100.0
129535, 100.0
129859, 100.0
130037, 99.0
130361, 100.0
130543, 100.0
130864, 100.0
131047, 100.0
131395, 99.0
131550, 100.0
131898, 100.0
132053, 100.0
132401, 99.0
132560, 100.0
132902, 100.0
133062, 100.0
133406, 100.0
133570, 100.0
133909, 100.0
134077, 100.0
134411, 100.0
134580, 100.0
134914, 99.0
135417, 100.0
135784, 99.0
135918, 100.0
136295, 100.0
136421, 99.0
136797, 99.0
136924, 99.0
137300, 100.0
137427, 100.0
137807, 100.0
137934, 100.0
138311, 100.0
138436, 100.0
138813, 99.0
138938, 99.0
139316, 100.0
139439, 99.0
139819, 99.0
139941, 100.0
140444, 100.0
140597, 99.0
140948, 100.0
141100, 100.0
141451, 100.0
141603, 100.0
141953, 99.0
142106, 99.0
142455, 100.0
142612, 100.0
142958, 100.0
143116, 100.0
143465, 100.0
143619, 100.0
143967, 100.0
144124, 100.0
144468, 99.0
144662, 100.0
144972, 100.0
145165, 99.0
145475, 99.0
145668, 100.0
145977, 99.0
146170, 100.0
146479, 100.0
146676, 100.0
146981, 99.0
147182, 99.0
147482, 99.0
147685, 99.0
147984, 99.0
148189, 100.0
148486, 100.0
148693, 100.0
148988, 100.0
149197, 100.0
149492, 100.0
149700, 100.0
149995, 99.0
150202, 99.0
150498, 100.0
150705, 99.0
151001, 99.0
151210, 100.0
151504, 100.0
151713, 99.0
152007, 100.0
152323, 100.0
152511, 100.0
152826, 99.0
153017, 99.0
153330, 99.0
153520, 99.0
153833, 100.0
154032, 100.0
154336, 100.0
154556, 100.0
154877, 99.0
155059, 99.0
155381, 100.0
155562, 99.0
155884, 99.0
156064, 99.0
156387, 100.0
156566, 100.0
156890, 100.0
157070, 100.0
157393, 100.0
157574, 100.0
157895, 100.0
158076, 99.0
158398, 99.0
158580, 99.0
158901, 99.0
159084, 99.0
159405, 100.0
159606, 100.0
159908, 100.0
160110, 100.0
160412, 100.0
160613, 99.0
161030, 100.0
161116, 100.0
161534, 100.0
161619, 100.0
162038, 99.0
162123, 99.0
162542, 99.0
162626, 99.0
163045, 99.0
163128, 100.0
163548, 100.0
163631, 100.0
164051, 99.0
164135, 100.0
164555, 99.0
164638, 99.0
165057, 100.0
165282, 100.0
165560, 100.0
165812, 100.0
166062, 94.0
166565, 100.0
166666, 96.0
167068, 100.0
167169, 100.0
167570, 100.0
167672, 100.0
168073, 100.0
168175, 100.0
168575, 100.0
168677, 99.0
169078, 100.0
169180, 100.0
169581, 100.0
169684, 99.0
170084, 99.0
170570, 100.0
170607, 99.0
171111, 100.0
171112, 100.0
171669, 100.0
171766, 100.0
172177, 100.0
172269, 100.0
172683, 100.0
172774, 100.0
173191, 99.0
173280, 100.0
173698, 100.0
173843, 99.0
175594, 99.0
175595, 99.0
176123, 94.0
176124, 94.0
176632, 87.0
177139, 55.0
177141, 56.0
177652, 68.0
177701, 70.0
178240, 77.0
178241, 78.0
178745, 52.0
178746, 52.0
179253, 65.0
179759, 100.0
180270, 76.0
180351, 76.0
180780, 64.0
180862, 65.0
181290, 70.0
181372, 71.0
181804, 72.0
181895, 71.0
182314, 74.0
182431, 80.0
182824, 96.0
182956, 97.0
183333, 96.0
183469, 97.0
183841, 94.0
183979, 95.0
184353, 98.0
184490, 98.0
184864, 98.0
184997, 97.0
185378, 96.0
185506, 94.0
185883, 96.0
186012, 99.0
186389, 72.0
186518, 60.0
186894, 64.0
187039, 71.0
187404, 82.0
187554, 73.0
187961, 61.0
188084, 57.0
188474, 81.0
188595, 94.0
188991, 84.0
189103, 79.0
189501, 85.0
189609, 91.0
190006, 97.0
190111, 97.0
190514, 99.0
190615, 99.0
191019, 97.0
191118, 97.0
191523, 100.0
191622, 100.0
192038, 94.0
192140, 92.0
192549, 94.0
192649, 93.0
193060, 93.0
193157, 93.0
193568, 91.0
193667, 91.0
194072, 98.0
194169, 99.0
194581, 100.0
194672, 99.0
195089, 97.0
195182, 95.0
195597, 91.0
195692, 92.0
196125, 94.0
196202, 93.0
196631, 99.0
196709, 99.0
197135, 99.0
197218, 100.0
197640, 99.0
197726, 98.0
198147, 93.0
198237, 92.0
198653, 91.0
198748, 93.0
199163, 93.0
199258, 92.0
199669, 92.0
199767, 93.0
200174, 98.0
200279, 98.0
200683, 93.0
200786, 93.0
201195, 92.0
201295, 92.0
201705, 95.0
201804, 96.0
202213, 79.0
202319, 75.0
202736, 65.0
202836, 59.0
203256, 61.0
203345, 71.0
203768, 73.0
203868, 63.0
204279, 52.0
204374, 63.0
204787, 94.0
204881, 94.0
205291, 99.0
205387, 99.0
205795, 100.0
205892, 100.0
206304, 96.0
206399, 96.0
206809, 99.0
206902, 99.0
207323, 92.0
207411, 92.0
207838, 92.0
207921, 92.0
208343, 93.0
208431, 94.0
208848, 100.0
208935, 100.0
209358, 96.0
209445, 95.0
209868, 93.0
209958, 92.0
210373, 97.0
210462, 100.0
210877, 100.0
210969, 99.0
211387, 92.0
211479, 92.0
211897, 95.0
211987, 95.0
212405, 95.0
212495, 94.0
212914, 95.0
213003, 95.0
213429, 93.0
213511, 93.0
213938, 94.0
214017, 94.0
214453, 95.0
214528, 95.0
214963, 92.0
215036, 93.0
215467, 97.0
215539, 97.0
215977, 85.0
216053, 77.0
216488, 65.0
216565, 73.0
216997, 74.0
217072, 73.0
217501, 99.0
217576, 100.0
218007, 96.0
218080, 96.0
218511, 99.0
218581, 99.0
219018, 99.0
219090, 98.0
219526, 92.0
219599, 92.0
220044, 93.0
220113, 94.0
220554, 94.0
220626, 95.0
221068, 92.0
221134, 92.0
221575, 91.0
221644, 91.0
222084, 95.0
222148, 95.0
222589, 99.0
222649, 99.0
223096, 93.0
223151, 93.0
223605, 99.0
223654, 99.0
224112, 96.0
224160, 95.0
224616, 97.0
224661, 97.0
225125, 79.0
225169, 78.0
225629, 91.0
225673, 91.0
226132, 100.0
226176, 100.0
226637, 100.0
226677, 100.0
227140, 100.0
227179, 100.0
227644, 100.0
227681, 100.0
228153, 100.0
228189, 100.0
228661, 92.0
228695, 92.0
229171, 94.0
229202, 94.0
229678, 94.0
229709, 94.0
230186, 92.0
230220, 91.0
230697, 92.0
230726, 92.0
231207, 92.0
231233, 92.0
231717, 89.0
231741, 89.0
232224, 89.0
232245, 90.0
232733, 93.0
232753, 93.0
233241, 93.0
233256, 94.0
233750, 99.0
233766, 99.0
234260, 98.0
234270, 98.0
234764, 89.0
234772, 90.0
235269, 99.0
235339, 98.0
235842, 96.0
235901, 95.0
236412, 84.0
237173, 96.0
237189, 96.0
237813, 100.0
237837, 100.0
238323, 100.0
238349, 100.0
238860, 98.0
238865, 98.0
239420, 100.0
239475, 99.0
239921, 100.0
239984, 100.0
240426, 100.0
240549, 100.0
240927, 100.0
241051, 100.0
241428, 100.0
241585, 100.0
241932, 100.0
242088, 100.0
242433, 100.0
242597, 100.0
242934, 99.0
243119, 99.0
243437, 99.0
243622, 99.0
243938, 99.0
244123, 99.0
244439, 99.0
244625, 100.0
244940, 100.0
245126, 100.0
245441, 100.0
245630, 100.0
Rows returned: 958

-- System CPU usage in time (peer 0). This is the CPU usage reported under "System" in /proc/stat
-- export timeline-cpu-usage-system-peer-0.csv
SELECT (ts - (SELECT min(ts) FROM cpuusage WHERE event = 'CPU_USAGE' AND nodeId = 0))/1000 as msec, system
from cpuusage
WHERE event = 'CPU_USAGE' AND nodeId = 0
-- (msec, systemcpu[%])
Query time: 0.000 seconds
0, 85
500, 96
1002, 93
1503, 96
2004, 92
2505, 96
3007, 86
3509, 77
4011, 68
4512, 69
5013, 59
5514, 68
6015, 60
6516, 73
7017, 52
7518, 66
8019, 57
8520, 67
9031, 49
9532, 72
10033, 55
10534, 71
11035, 54
11537, 69
12038, 56
12540, 67
13042, 57
13544, 69
14045, 64
14546, 68
15047, 58
15548, 70
16049, 59
16551, 73
17053, 59
17554, 62
18055, 61
18556, 66
19058, 56
19559, 64
20063, 63
20564, 73
21083, 62
21583, 66
22084, 64
22585, 69
23086, 59
23588, 66
24089, 64
24590, 63
25092, 60
25594, 65
26095, 65
26596, 67
27100, 62
27602, 64
28103, 66
28604, 66
29105, 62
29606, 63
30107, 65
30609, 63
31110, 65
31611, 58
32131, 68
32633, 60
33148, 62
33649, 73
34150, 93
34652, 93
35153, 89
35654, 95
36155, 93
36657, 94
37158, 91
37659, 95
38160, 93
38661, 94
39162, 93
39664, 94
40164, 94
40665, 92
41166, 90
41668, 94
42169, 91
42670, 94
43172, 92
43672, 93
44174, 93
44675, 93
45177, 90
45678, 93
46179, 91
46680, 93
47181, 91
47682, 93
48183, 93
48685, 92
49186, 93
49687, 94
50188, 92
50689, 92
51190, 91
51691, 94
52192, 92
52693, 92
53194, 92
53695, 93
54196, 93
54697, 94
55198, 85
55699, 93
56200, 91
56701, 93
57202, 92
57703, 94
58203, 94
58705, 93
59206, 93
59707, 94
60209, 92
60711, 92
61212, 92
61713, 92
62215, 93
62716, 93
63217, 92
63719, 94
64220, 93
64722, 92
65224, 91
65725, 91
66227, 92
66728, 94
67230, 94
67731, 93
68232, 94
68733, 91
69234, 94
69735, 93
70237, 94
70739, 91
71240, 93
71741, 94
72243, 92
72744, 92
73245, 93
73747, 93
74248, 94
74749, 91
75250, 93
75752, 94
76252, 91
76754, 92
77255, 92
77756, 93
78257, 93
78758, 94
79260, 93
79761, 94
80262, 93
80763, 91
81264, 91
81766, 94
82267, 92
82769, 92
83271, 91
83771, 93
84272, 95
84773, 93
85274, 95
85775, 94
86276, 93
86776, 93
87277, 94
87779, 95
88280, 93
88781, 92
89282, 94
89784, 93
90285, 92
90786, 92
91287, 92
91788, 93
92290, 93
92791, 91
93293, 91
93794, 94
94296, 93
94797, 90
95298, 93
95800, 94
96302, 93
96803, 92
97304, 92
97805, 94
98306, 91
98807, 92
99309, 93
99810, 94
100311, 92
100813, 92
101314, 95
101815, 94
102316, 92
102817, 93
103319, 93
103820, 92
104321, 69
104822, 4
105324, 19
105826, 68
106326, 95
106827, 91
107328, 92
107829, 93
108331, 92
108832, 92
109333, 93
109834, 92
110335, 93
110837, 92
111338, 92
111839, 93
112341, 93
112842, 92
113343, 92
113844, 93
114345, 92
114846, 91
115347, 93
115849, 93
116351, 93
116852, 92
117353, 91
117854, 93
118355, 92
118855, 94
119357, 92
119858, 93
120359, 94
120861, 90
121362, 92
121864, 93
122365, 93
122866, 92
123448, 91
123949, 87
124452, 79
124992, 81
125494, 90
125998, 95
126510, 91
127025, 90
127527, 89
128029, 87
128530, 91
129033, 94
129535, 93
130037, 95
130543, 93
131047, 93
131550, 93
132053, 94
132560, 93
133062, 95
133570, 93
134077, 95
134580, 92
135784, 94
136295, 93
136797, 90
137300, 94
137807, 90
138311, 94
138813, 90
139316, 94
139819, 92
140597, 94
141100, 93
141603, 92
142106, 91
142612, 93
143116, 93
143619, 94
144124, 94
144662, 92
145165, 92
145668, 92
146170, 94
146676, 92
147182, 93
147685, 90
148189, 93
148693, 93
149197, 92
149700, 93
150202, 94
150705, 92
151210, 93
151713, 92
152323, 94
152826, 89
153330, 95
153833, 92
154336, 94
154877, 91
155381, 94
155884, 92
156387, 95
156890, 91
157393, 95
157895, 92
158398, 92
158901, 88
159405, 95
159908, 91
160412, 94
161030, 91
161534, 96
162038, 90
162542, 93
163045, 91
163548, 96
164051, 92
164555, 93
165057, 90
165560, 95
166062, 81
166565, 93
167068, 92
167570, 94
168073, 92
168575, 94
169078, 89
169581, 96
170084, 93
170607, 93
171112, 89
171766, 93
172269, 92
172774, 92
173280, 59
173843, 71
175595, 12
176124, 5
176632, 28
177139, 18
177701, 26
178240, 52
178746, 3
179253, 24
179759, 93
180351, 42
180862, 17
181372, 7
181895, 19
182431, 56
182956, 84
183469, 85
183979, 84
184490, 89
184997, 86
185506, 78
186012, 86
186518, 30
187039, 32
187554, 45
188084, 10
188595, 75
189103, 35
189609, 70
190111, 91
190615, 93
191118, 91
191622, 94
192140, 81
192649, 82
193157, 84
193667, 80
194169, 94
194672, 93
195182, 88
195692, 84
196202, 83
196709, 96
197218, 94
197726, 93
198237, 82
198748, 83
199258, 81
199767, 84
200279, 91
200786, 82
201295, 81
201804, 87
202319, 52
202836, 24
203345, 47
203868, 46
204374, 50
204881, 83
205387, 93
205892, 94
206399, 88
206902, 94
207411, 82
207921, 81
208431, 84
208935, 94
209445, 88
209958, 83
210462, 94
210969, 94
211479, 81
211987, 85
212495, 85
213003, 85
213511, 83
214017, 84
214528, 84
215036, 85
215539, 90
216053, 66
216565, 51
217072, 60
217576, 94
218080, 89
218581, 92
219090, 92
219599, 81
220113, 85
220626, 85
221134, 82
221644, 80
222148, 87
222649, 94
223151, 83
223654, 92
224160, 88
224661, 90
225169, 63
225673, 79
226176, 95
226677, 95
227179, 95
227681, 96
228189, 94
228695, 81
229202, 84
229709, 84
230220, 80
230726, 82
231233, 81
231741, 79
232245, 78
232753, 82
233256, 83
233766, 58
234270, 49
234772, 36
235339, 52
235842, 44
236412, 7
237189, 28
237813, 47
238323, 50
238865, 58
239420, 54
239921, 44
240426, 39
240927, 37
241428, 31
241932, 35
242433, 41
242934, 58
243437, 72
243938, 77
244439, 92
244940, 94
245441, 96
Rows returned: 481

-- System CPU usage in time (peer 1). This is the CPU usage reported under "System" in /proc/stat
-- export timeline-cpu-usage-system-peer-1.csv
SELECT (ts - (SELECT min(ts) FROM cpuusage WHERE event = 'CPU_USAGE' AND nodeId = 1))/1000 as msec, system
from cpuusage
WHERE event = 'CPU_USAGE' AND nodeId = 1
-- (msec, systemcpu[%])
Query time: 0.000 seconds
Rows returned: 0

-- System CPU usage in time (average over all peers). This is the CPU usage reported under "System" in /proc/stat
-- export timeline-cpu-usage-system.csv
SELECT (ts - (SELECT min(ts) FROM cpuusage WHERE event = 'CPU_USAGE'))/1000 as msec, avg(system)
from cpuusage
WHERE event = 'CPU_USAGE'
GROUP BY msec
-- (msec, systemcpu[%])
Query time: 0.001 seconds
0, 85.0
28, 87.0
500, 96.0
529, 96.0
1002, 93.0
1031, 94.0
1503, 96.0
1532, 95.0
2004, 92.0
2034, 93.0
2505, 96.0
2536, 95.0
3007, 86.0
3338, 86.0
3509, 77.0
3839, 67.0
4011, 68.0
4340, 72.0
4512, 69.0
4862, 61.0
5013, 59.0
5363, 67.0
5514, 68.0
5865, 60.0
6015, 60.0
6366, 70.0
6516, 73.0
6909, 59.0
7017, 52.0
7410, 63.0
7518, 66.0
7911, 58.0
8019, 57.0
8412, 66.0
8520, 67.0
8913, 53.0
9031, 49.0
9414, 67.0
9532, 72.0
9919, 56.0
10033, 55.0
10420, 72.0
10534, 71.0
10926, 59.0
11035, 54.0
11427, 63.0
11537, 69.0
11929, 57.0
12038, 56.0
12430, 67.0
12540, 67.0
12930, 60.0
13042, 57.0
13431, 64.0
13544, 69.0
13933, 66.0
14045, 64.0
14435, 67.0
14546, 68.0
14936, 63.0
15047, 58.0
15437, 65.0
15548, 70.0
15955, 62.0
16049, 59.0
16456, 69.0
16551, 73.0
16959, 65.0
17053, 59.0
17461, 58.0
17554, 62.0
17962, 64.0
18055, 61.0
18463, 62.0
18556, 66.0
18966, 62.0
19058, 56.0
19467, 59.0
19559, 64.0
19971, 67.0
20063, 63.0
20472, 68.0
20564, 73.0
20973, 67.0
21083, 62.0
21474, 62.0
21583, 66.0
21975, 67.0
22084, 64.0
22476, 66.0
22585, 69.0
22980, 63.0
23086, 59.0
23483, 63.0
23588, 66.0
23990, 66.0
24089, 64.0
24491, 61.0
24590, 63.0
25007, 65.0
25092, 60.0
25509, 59.0
25594, 65.0
26013, 71.0
26095, 65.0
26514, 64.0
26596, 67.0
27024, 65.0
27100, 62.0
27526, 60.0
27602, 64.0
28043, 68.0
28103, 66.0
28544, 63.0
28604, 66.0
29067, 63.0
29105, 62.0
29568, 62.0
29606, 63.0
30070, 67.0
30107, 65.0
30571, 61.0
30609, 63.0
31076, 67.0
31110, 65.0
31578, 57.0
31611, 58.0
32082, 70.0
32131, 68.0
32583, 58.0
32633, 60.0
33086, 64.0
33148, 62.0
33587, 69.0
33649, 73.0
34089, 92.0
34150, 93.0
34590, 93.0
34652, 93.0
35091, 89.0
35153, 89.0
35593, 95.0
35654, 95.0
36094, 93.0
36155, 93.0
36596, 95.0
36657, 94.0
37097, 91.0
37158, 91.0
37598, 95.0
37659, 95.0
38100, 93.0
38160, 93.0
38601, 94.0
38661, 94.0
39103, 93.0
39162, 93.0
39604, 93.0
39664, 94.0
40105, 94.0
40164, 94.0
40605, 93.0
40665, 92.0
41107, 89.0
41166, 90.0
41608, 94.0
41668, 94.0
42109, 91.0
42169, 91.0
42609, 94.0
42670, 94.0
43111, 92.0
43172, 92.0
43613, 93.0
43672, 93.0
44114, 93.0
44174, 93.0
44616, 94.0
44675, 93.0
45117, 89.0
45177, 90.0
45618, 93.0
45678, 93.0
46119, 92.0
46179, 91.0
46620, 93.0
46680, 93.0
47121, 90.0
47181, 91.0
47622, 93.0
47682, 93.0
48124, 93.0
48183, 93.0
48625, 94.0
48685, 92.0
49126, 91.0
49186, 93.0
49627, 94.0
49687, 94.0
50129, 91.0
50188, 92.0
50631, 94.0
50689, 92.0
51132, 89.0
51190, 91.0
51632, 94.0
51691, 94.0
52134, 92.0
52192, 92.0
52635, 93.0
52693, 92.0
53136, 91.0
53194, 92.0
53637, 94.0
53695, 93.0
54139, 94.0
54196, 93.0
54640, 94.0
54697, 94.0
55141, 92.0
55198, 85.0
55643, 86.0
55699, 93.0
56144, 92.0
56200, 91.0
56645, 94.0
56701, 93.0
57146, 91.0
57202, 92.0
57648, 93.0
57703, 94.0
58149, 94.0
58203, 94.0
58651, 93.0
58705, 93.0
59152, 92.0
59206, 93.0
59654, 94.0
59707, 94.0
60155, 92.0
60209, 92.0
60657, 94.0
60711, 92.0
61159, 91.0
61212, 92.0
61660, 93.0
61713, 92.0
62161, 93.0
62215, 93.0
62665, 93.0
62716, 93.0
63166, 92.0
63217, 92.0
63667, 94.0
63719, 94.0
64168, 93.0
64220, 93.0
64669, 92.0
64722, 92.0
65170, 91.0
65224, 91.0
65671, 91.0
65725, 91.0
66173, 93.0
66227, 92.0
66673, 94.0
66728, 94.0
67174, 94.0
67230, 94.0
67676, 93.0
67731, 93.0
68176, 94.0
68232, 94.0
68677, 91.0
68733, 91.0
69179, 94.0
69234, 94.0
69680, 94.0
69735, 93.0
70181, 94.0
70237, 94.0
70682, 92.0
70739, 91.0
71184, 93.0
71240, 93.0
71685, 94.0
71741, 94.0
72186, 92.0
72243, 92.0
72688, 92.0
72744, 92.0
73189, 93.0
73245, 93.0
73690, 93.0
73747, 93.0
74192, 94.0
74248, 94.0
74693, 91.0
74749, 91.0
75194, 93.0
75250, 93.0
75695, 93.0
75752, 94.0
76196, 92.0
76252, 91.0
76698, 93.0
76754, 92.0
77199, 92.0
77255, 92.0
77700, 93.0
77756, 93.0
78201, 93.0
78257, 93.0
78702, 94.0
78758, 94.0
79203, 93.0
79260, 93.0
79704, 94.0
79761, 94.0
80205, 93.0
80262, 93.0
80707, 91.0
80763, 91.0
81207, 91.0
81264, 91.0
81709, 93.0
81766, 94.0
82210, 92.0
82267, 92.0
82710, 92.0
82769, 92.0
83212, 91.0
83271, 91.0
83713, 93.0
83771, 93.0
84214, 95.0
84272, 95.0
84715, 93.0
84773, 93.0
85216, 94.0
85274, 95.0
85717, 94.0
85775, 94.0
86218, 93.0
86276, 93.0
86719, 93.0
86776, 93.0
87221, 94.0
87277, 94.0
87722, 95.0
87779, 95.0
88223, 93.0
88280, 93.0
88725, 92.0
88781, 92.0
89226, 94.0
89282, 94.0
89727, 94.0
89784, 93.0
90228, 91.0
90285, 92.0
90730, 92.0
90786, 92.0
91231, 93.0
91287, 92.0
91733, 93.0
91788, 93.0
92233, 93.0
92290, 93.0
92734, 91.0
92791, 91.0
93235, 91.0
93293, 91.0
93737, 94.0
93794, 94.0
94238, 93.0
94296, 93.0
94740, 90.0
94797, 90.0
95241, 93.0
95298, 93.0
95742, 94.0
95800, 94.0
96243, 93.0
96302, 93.0
96745, 92.0
96803, 92.0
97246, 92.0
97304, 92.0
97747, 94.0
97805, 94.0
98248, 92.0
98306, 91.0
98750, 91.0
98807, 92.0
99251, 93.0
99309, 93.0
99752, 94.0
99810, 94.0
100253, 92.0
100311, 92.0
100755, 92.0
100813, 92.0
101256, 94.0
101314, 95.0
101757, 94.0
101815, 94.0
102258, 92.0
102316, 92.0
102759, 93.0
102817, 93.0
103260, 93.0
103319, 93.0
103761, 93.0
103820, 92.0
104262, 78.0
104321, 69.0
104763, 5.0
104822, 4.0
105264, 8.0
105324, 19.0
105766, 68.0
105826, 68.0
106267, 95.0
106326, 95.0
106769, 91.0
106827, 91.0
107269, 92.0
107328, 92.0
107771, 93.0
107829, 93.0
108272, 92.0
108331, 92.0
108774, 92.0
108832, 92.0
109276, 93.0
109333, 93.0
109777, 92.0
109834, 92.0
110278, 93.0
110335, 93.0
110779, 92.0
110837, 92.0
111280, 92.0
111338, 92.0
111781, 93.0
111839, 93.0
112282, 93.0
112341, 93.0
112783, 93.0
112842, 92.0
113285, 92.0
113343, 92.0
113787, 93.0
113844, 93.0
114288, 92.0
114345, 92.0
114789, 91.0
114846, 91.0
115290, 92.0
115347, 93.0
115792, 94.0
115849, 93.0
116293, 92.0
116351, 93.0
116793, 92.0
116852, 92.0
117295, 91.0
117353, 91.0
117796, 93.0
117854, 93.0
118297, 92.0
118355, 92.0
118799, 93.0
118855, 94.0
119300, 92.0
119357, 92.0
119802, 93.0
119858, 93.0
120303, 94.0
120359, 94.0
120804, 90.0
120861, 90.0
121305, 92.0
121362, 92.0
121806, 93.0
121864, 93.0
122307, 93.0
122365, 93.0
122808, 91.0
122866, 92.0
123309, 92.0
123448, 91.0
123811, 85.0
123949, 87.0
124313, 85.0
124452, 79.0
124816, 76.0
124992, 81.0
125319, 90.0
125494, 90.0
125821, 92.0
125998, 95.0
126326, 93.0
126510, 91.0
126834, 90.0
127025, 90.0
127345, 88.0
127527, 89.0
127848, 88.0
128029, 87.0
128354, 90.0
128530, 91.0
128855, 91.0
129033, 94.0
129357, 94.0
129535, 93.0
129859, 94.0
130037, 95.0
130361, 95.0
130543, 93.0
130864, 92.0
131047, 93.0
131395, 95.0
131550, 93.0
131898, 92.0
132053, 94.0
132401, 95.0
132560, 93.0
132902, 92.0
133062, 95.0
133406, 95.0
133570, 93.0
133909, 93.0
134077, 95.0
134411, 94.0
134580, 92.0
134914, 92.0
135417, 93.0
135784, 94.0
135918, 92.0
136295, 93.0
136421, 94.0
136797, 90.0
136924, 91.0
137300, 94.0
137427, 93.0
137807, 90.0
137934, 91.0
138311, 94.0
138436, 93.0
138813, 90.0
138938, 92.0
139316, 94.0
139439, 93.0
139819, 92.0
139941, 94.0
140444, 93.0
140597, 94.0
140948, 93.0
141100, 93.0
141451, 94.0
141603, 92.0
141953, 90.0
142106, 91.0
142455, 93.0
142612, 93.0
142958, 93.0
143116, 93.0
143465, 94.0
143619, 94.0
143967, 94.0
144124, 94.0
144468, 94.0
144662, 92.0
144972, 89.0
145165, 92.0
145475, 94.0
145668, 92.0
145977, 91.0
146170, 94.0
146479, 96.0
146676, 92.0
146981, 90.0
147182, 93.0
147482, 93.0
147685, 90.0
147984, 90.0
148189, 93.0
148486, 95.0
148693, 93.0
148988, 90.0
149197, 92.0
149492, 94.0
149700, 93.0
149995, 92.0
150202, 94.0
150498, 95.0
150705, 92.0
151001, 91.0
151210, 93.0
151504, 94.0
151713, 92.0
152007, 91.0
152323, 94.0
152511, 95.0
152826, 89.0
153017, 89.0
153330, 95.0
153520, 95.0
153833, 92.0
154032, 92.0
154336, 94.0
154556, 95.0
154877, 91.0
155059, 90.0
155381, 94.0
155562, 95.0
155884, 92.0
156064, 93.0
156387, 95.0
156566, 95.0
156890, 91.0
157070, 90.0
157393, 95.0
157574, 95.0
157895, 92.0
158076, 92.0
158398, 92.0
158580, 92.0
158901, 88.0
159084, 88.0
159405, 95.0
159606, 94.0
159908, 91.0
160110, 91.0
160412, 94.0
160613, 94.0
161030, 91.0
161116, 90.0
161534, 96.0
161619, 95.0
162038, 90.0
162123, 91.0
162542, 93.0
162626, 93.0
163045, 91.0
163128, 91.0
163548, 96.0
163631, 96.0
164051, 92.0
164135, 92.0
164555, 93.0
164638, 92.0
165057, 90.0
165282, 91.0
165560, 95.0
165812, 93.0
166062, 81.0
166565, 93.0
166666, 87.0
167068, 92.0
167169, 93.0
167570, 94.0
167672, 93.0
168073, 92.0
168175, 93.0
168575, 94.0
168677, 93.0
169078, 89.0
169180, 91.0
169581, 96.0
169684, 94.0
170084, 93.0
170570, 94.0
170607, 93.0
171111, 90.0
171112, 89.0
171669, 93.0
171766, 93.0
172177, 91.0
172269, 92.0
172683, 94.0
172774, 92.0
173191, 65.0
173280, 59.0
173698, 64.0
173843, 71.0
175594, 18.0
175595, 12.0
176123, 5.0
176124, 5.0
176632, 28.0
177139, 18.0
177141, 18.0
177652, 21.0
177701, 26.0
178240, 52.0
178241, 54.0
178745, 3.0
178746, 3.0
179253, 24.0
179759, 93.0
180270, 42.0
180351, 42.0
180780, 17.0
180862, 17.0
181290, 5.0
181372, 7.0
181804, 20.0
181895, 19.0
182314, 45.0
182431, 56.0
182824, 84.0
182956, 84.0
183333, 82.0
183469, 85.0
183841, 83.0
183979, 84.0
184353, 90.0
184490, 89.0
184864, 85.0
184997, 86.0
185378, 85.0
185506, 78.0
185883, 82.0
186012, 86.0
186389, 49.0
186518, 30.0
186894, 22.0
187039, 32.0
187404, 54.0
187554, 45.0
187961, 14.0
188084, 10.0
188474, 58.0
188595, 75.0
188991, 50.0
189103, 35.0
189501, 55.0
189609, 70.0
190006, 88.0
190111, 91.0
190514, 94.0
190615, 93.0
191019, 91.0
191118, 91.0
191523, 95.0
191622, 94.0
192038, 82.0
192140, 81.0
192549, 84.0
192649, 82.0
193060, 83.0
193157, 84.0
193568, 80.0
193667, 80.0
194072, 92.0
194169, 94.0
194581, 94.0
194672, 93.0
195089, 90.0
195182, 88.0
195597, 81.0
195692, 84.0
196125, 85.0
196202, 83.0
196631, 94.0
196709, 96.0
197135, 93.0
197218, 94.0
197640, 94.0
197726, 93.0
198147, 84.0
198237, 82.0
198653, 80.0
198748, 83.0
199163, 83.0
199258, 81.0
199669, 83.0
199767, 84.0
200174, 91.0
200279, 91.0
200683, 82.0
200786, 82.0
201195, 83.0
201295, 81.0
201705, 86.0
201804, 87.0
202213, 56.0
202319, 52.0
202736, 37.0
202836, 24.0
203256, 29.0
203345, 47.0
203768, 57.0
203868, 46.0
204279, 37.0
204374, 50.0
204787, 84.0
204881, 83.0
205291, 94.0
205387, 93.0
205795, 94.0
205892, 94.0
206304, 88.0
206399, 88.0
206809, 94.0
206902, 94.0
207323, 83.0
207411, 82.0
207838, 82.0
207921, 81.0
208343, 82.0
208431, 84.0
208848, 93.0
208935, 94.0
209358, 90.0
209445, 88.0
209868, 84.0
209958, 83.0
210373, 92.0
210462, 94.0
210877, 95.0
210969, 94.0
211387, 81.0
211479, 81.0
211897, 84.0
211987, 85.0
212405, 86.0
212495, 85.0
212914, 86.0
213003, 85.0
213429, 82.0
213511, 83.0
213938, 84.0
214017, 84.0
214453, 84.0
214528, 84.0
214963, 83.0
215036, 85.0
215467, 89.0
215539, 90.0
215977, 76.0
216053, 66.0
216488, 41.0
216565, 51.0
216997, 61.0
217072, 60.0
217501, 93.0
217576, 94.0
218007, 89.0
218080, 89.0
218511, 92.0
218581, 92.0
219018, 93.0
219090, 92.0
219526, 81.0
219599, 81.0
220044, 84.0
220113, 85.0
220554, 86.0
220626, 85.0
221068, 82.0
221134, 82.0
221575, 80.0
221644, 80.0
222084, 86.0
222148, 87.0
222589, 94.0
222649, 94.0
223096, 84.0
223151, 83.0
223605, 93.0
223654, 92.0
224112, 89.0
224160, 88.0
224616, 89.0
224661, 90.0
225125, 64.0
225169, 63.0
225629, 79.0
225673, 79.0
226132, 95.0
226176, 95.0
226637, 95.0
226677, 95.0
227140, 94.0
227179, 95.0
227644, 96.0
227681, 96.0
228153, 95.0
228189, 94.0
228661, 81.0
228695, 81.0
229171, 85.0
229202, 84.0
229678, 84.0
229709, 84.0
230186, 81.0
230220, 80.0
230697, 82.0
230726, 82.0
231207, 82.0
231233, 81.0
231717, 79.0
231741, 79.0
232224, 78.0
232245, 78.0
232733, 82.0
232753, 82.0
233241, 83.0
233256, 83.0
233750, 59.0
233766, 58.0
234260, 49.0
234270, 49.0
234764, 36.0
234772, 36.0
235269, 55.0
235339, 52.0
235842, 44.0
235901, 38.0
236412, 5.5
237173, 28.0
237189, 28.0
237813, 47.0
237837, 47.0
238323, 50.0
238349, 50.0
238860, 57.0
238865, 58.0
239420, 54.0
239475, 55.0
239921, 44.0
239984, 40.0
240426, 39.0
240549, 40.0
240927, 37.0
241051, 35.0
241428, 31.0
241585, 31.0
241932, 35.0
242088, 38.0
242433, 41.0
242597, 43.0
242934, 58.0
243119, 67.0
243437, 72.0
243622, 72.0
243938, 77.0
244123, 81.0
244439, 92.0
244625, 95.0
244940, 94.0
245126, 96.0
245441, 96.0
245630, 95.0
Rows returned: 958

-- Batches committed in time (peer 0)
-- export timeline-commit-peer-0.csv
--
SELECT (ts - (SELECT min(ts) FROM protocol WHERE event = 'COMMIT' AND nodeId = 0))/1000 as msec, count()
FROM protocol
WHERE event = 'COMMIT' AND nodeId = 0
GROUP BY msec
-- (msec, count[req])
Query time: 0.002 seconds
0, 1
4, 1
16, 1
989, 1
990, 1
1004, 1
1005, 1
1006, 1
1018, 3
2114, 2
2115, 1
2145, 2
2146, 1
2169, 1
3028, 2
3035, 1
3249, 2
3268, 1
3301, 1
4173, 2
4239, 1
4250, 1
4251, 1
5061, 1
5062, 1
5063, 1
5257, 1
5313, 2
5329, 1
5330, 1
6216, 2
6292, 1
6327, 1
7062, 1
7063, 2
7311, 2
7351, 1
7370, 1
7371, 1
8262, 1
8263, 1
8277, 1
8299, 1
9061, 1
9062, 1
9063, 1
9356, 2
9384, 2
9412, 1
9413, 1
10257, 1
10260, 1
10334, 1
11054, 1
11055, 1
11056, 1
11318, 2
11362, 1
11363, 1
11418, 1
11419, 1
12239, 1
12258, 1
12342, 1
13051, 1
13052, 2
13356, 1
13357, 1
13372, 1
13373, 1
13402, 2
14266, 1
14298, 1
14377, 1
14378, 1
15050, 1
15051, 1
15055, 2
15363, 1
15364, 2
15455, 2
15456, 1
15491, 2
16318, 1
16370, 1
16480, 1
17053, 1
17054, 2
17365, 2
17391, 1
17392, 1
17488, 1
17489, 1
18386, 1
18401, 1
18487, 1
19051, 1
19052, 1
19053, 1
19354, 2
19400, 1
19401, 1
19505, 1
19506, 2
20396, 1
20397, 1
20414, 1
20415, 1
20615, 1
21052, 1
21053, 2
21054, 1
21429, 1
21430, 1
21433, 2
21590, 1
21591, 1
22446, 1
22450, 1
22568, 1
23052, 1
23055, 2
23507, 3
23513, 1
23645, 1
23646, 1
24473, 2
24606, 1
25050, 1
25065, 1
25069, 1
25497, 2
25502, 1
25503, 1
25612, 1
25616, 1
26474, 1
26483, 1
26636, 1
27050, 1
27051, 2
27504, 1
27505, 1
27516, 2
27708, 1
27709, 1
28529, 1
28586, 1
28735, 1
28736, 1
29056, 1
29076, 3
29524, 2
29525, 1
29622, 2
29623, 1
29774, 1
29775, 2
30600, 2
30618, 1
30628, 1
30804, 1
31049, 1
31050, 1
31051, 2
31573, 2
31596, 1
31601, 1
31731, 1
31732, 2
32399, 2
32432, 3
32632, 2
32633, 1
33047, 1
33048, 1
33049, 1
33052, 2
33053, 1
33399, 1
33400, 1
33401, 2
33431, 1
33432, 2
33433, 1
33635, 1
33636, 3
34401, 1
34402, 2
34435, 1
34436, 2
34642, 1
34643, 2
35048, 1
35049, 1
35050, 1
35051, 1
35052, 3
35404, 1
35405, 1
35406, 2
35437, 2
35438, 2
35637, 1
35638, 3
36407, 3
36441, 2
36442, 1
36640, 2
36641, 1
37048, 1
37049, 1
37050, 2
37051, 3
37408, 1
37409, 2
37410, 1
37440, 1
37441, 2
37442, 1
37642, 1
37643, 1
37644, 2
38409, 2
38410, 1
38441, 3
38645, 1
38646, 2
39047, 1
39048, 2
39050, 1
39051, 3
39411, 1
39424, 3
39444, 1
39445, 1
39446, 2
39647, 2
39648, 2
40415, 3
40447, 2
40448, 1
40651, 3
41046, 1
41047, 1
41048, 1
41049, 1
41051, 2
41052, 1
41415, 1
41416, 2
41417, 1
41449, 1
41450, 1
41451, 2
41650, 1
41651, 2
41652, 1
42417, 1
42418, 2
42449, 3
42654, 3
43047, 1
43048, 1
43049, 1
43050, 1
43051, 2
43052, 1
43418, 1
43419, 1
43420, 2
43451, 1
43452, 3
43655, 1
43656, 2
43657, 1
44423, 3
44454, 3
44658, 3
45050, 2
45051, 1
45052, 2
45053, 2
45435, 2
45436, 2
45462, 2
45463, 2
45660, 1
45661, 3
46425, 3
46455, 1
46456, 2
46662, 2
46663, 1
47045, 1
47046, 1
47047, 1
47048, 3
47049, 1
47426, 1
47427, 3
47459, 1
47460, 2
47461, 1
47666, 1
47667, 3
48430, 1
48431, 2
48462, 2
48463, 1
48665, 1
48666, 2
49044, 1
49046, 1
49047, 1
49048, 2
49049, 2
49431, 1
49432, 2
49433, 1
49462, 1
49463, 3
49668, 2
49669, 2
50436, 3
50465, 1
50466, 2
50670, 3
51044, 2
51045, 1
51046, 2
51047, 2
51438, 2
51440, 2
51466, 1
51467, 2
51468, 1
51674, 1
51675, 3
52440, 2
52441, 1
52467, 1
52468, 2
52678, 3
53046, 1
53047, 1
53048, 2
53049, 3
53442, 1
53443, 1
53444, 2
53470, 1
53471, 1
53472, 1
53473, 1
53683, 1
53684, 3
54445, 2
54446, 1
54473, 2
54474, 1
54681, 2
54682, 1
55046, 2
55047, 1
55048, 3
55049, 1
55446, 2
55447, 2
55473, 1
55474, 2
55475, 1
55697, 2
55698, 2
56450, 2
56451, 1
56477, 3
56687, 1
56688, 2
57044, 1
57045, 1
57046, 1
57047, 3
57048, 1
57448, 1
57449, 2
57450, 1
57477, 1
57478, 1
57479, 2
57686, 1
57687, 2
57688, 1
58450, 2
58451, 1
58485, 3
58691, 3
59044, 1
59045, 1
59046, 2
59047, 3
59452, 2
59453, 2
59481, 1
59482, 3
59689, 1
59690, 1
59691, 2
60454, 3
60484, 2
60485, 1
60694, 3
61045, 1
61046, 1
61047, 1
61048, 4
61456, 1
61457, 1
61458, 2
61485, 1
61486, 1
61487, 2
61708, 1
61709, 3
62458, 2
62459, 1
62490, 3
62697, 1
62698, 2
63044, 1
63045, 1
63046, 1
63047, 3
63048, 1
63461, 1
63462, 2
63463, 1
63489, 1
63490, 2
63491, 1
63704, 1
63705, 3
64462, 1
64465, 2
64492, 3
64702, 2
64703, 1
65044, 1
65045, 2
65046, 1
65047, 3
65464, 2
65465, 2
65493, 1
65494, 1
65495, 2
65702, 1
65703, 3
66468, 2
66469, 1
66496, 2
66497, 1
66705, 1
66706, 2
67044, 1
67045, 1
67046, 1
67047, 2
67048, 2
67468, 2
67469, 2
67497, 1
67498, 1
67499, 2
67706, 2
67707, 2
68470, 3
68500, 1
68501, 2
68708, 1
68709, 2
69048, 2
69049, 1
69050, 2
69051, 2
69471, 2
69472, 2
69501, 1
69502, 2
69503, 1
69725, 1
69726, 2
69727, 1
70473, 2
70474, 1
70513, 2
70514, 1
70713, 1
70714, 2
71044, 1
71045, 1
71046, 2
71047, 3
71475, 2
71476, 2
71515, 1
71516, 3
71715, 1
71716, 1
71717, 2
72479, 2
72480, 1
72519, 3
72718, 1
72719, 2
73043, 1
73044, 1
73045, 1
73046, 1
73047, 3
73480, 1
73482, 3
73519, 1
73520, 1
73521, 2
73718, 1
73719, 3
74481, 3
74532, 2
74533, 1
74724, 3
75042, 1
75043, 1
75044, 1
75045, 1
75047, 3
75484, 1
75485, 3
75534, 1
75535, 3
75724, 1
75725, 3
76485, 2
76486, 1
76536, 3
76732, 3
77047, 1
77048, 1
77049, 1
77050, 3
77051, 1
77488, 1
77489, 3
77537, 1
77538, 2
77539, 1
77730, 1
77731, 3
78490, 3
78538, 2
78539, 1
78734, 3
79042, 1
79043, 2
79044, 1
79045, 3
79496, 1
79497, 2
79498, 1
79542, 2
79543, 2
79734, 1
79735, 1
79736, 2
80495, 1
80496, 2
80545, 3
80734, 2
80735, 1
81045, 1
81046, 1
81048, 2
81049, 3
81498, 2
81499, 2
81546, 1
81547, 2
81548, 1
81737, 1
81738, 2
81739, 1
82501, 1
82502, 2
82550, 3
82741, 2
82742, 1
83042, 1
83044, 1
83045, 1
83046, 2
83047, 2
83502, 1
83503, 1
83504, 2
83551, 1
83552, 3
83742, 2
83743, 2
84505, 2
84506, 1
84552, 1
84553, 2
84746, 3
85046, 1
85047, 2
85048, 1
85049, 3
85506, 1
85507, 1
85508, 2
85554, 1
85555, 1
85556, 2
85745, 1
85746, 3
86510, 2
86511, 1
86554, 2
86555, 1
86768, 3
87044, 1
87045, 2
87046, 1
87047, 3
87512, 1
87513, 3
87562, 2
87563, 2
87754, 2
87755, 2
88515, 3
88566, 1
88567, 2
88754, 1
88755, 2
89043, 1
89044, 2
89045, 1
89046, 3
89516, 1
89517, 3
89562, 1
89563, 2
89564, 1
89755, 1
89759, 3
90518, 2
90519, 1
90564, 3
90758, 2
90759, 1
91043, 1
91044, 1
91049, 1
91050, 2
91051, 2
91525, 1
91526, 3
91566, 2
91567, 2
91759, 1
91760, 3
92525, 1
92526, 1
92527, 1
92567, 1
92568, 2
92765, 3
93046, 2
93047, 1
93048, 1
93049, 3
93526, 1
93527, 3
93573, 1
93574, 1
93575, 2
93764, 1
93766, 2
93767, 1
94529, 1
94530, 2
94574, 2
94575, 1
94766, 3
95044, 1
95045, 1
95046, 1
95047, 2
95048, 2
95533, 1
95534, 2
95535, 1
95584, 1
95585, 3
95767, 1
95768, 3
96535, 1
96536, 2
96578, 3
96770, 1
96771, 2
97045, 2
97046, 1
97047, 2
97048, 2
97533, 1
97535, 3
97580, 1
97581, 2
97582, 1
97772, 1
97773, 2
97774, 1
98537, 3
98581, 1
98582, 2
98772, 1
98773, 2
99044, 1
99045, 1
99046, 1
99047, 3
99048, 1
99539, 1
99540, 2
99541, 1
99582, 1
99583, 3
99775, 1
99776, 3
100544, 1
100545, 2
100586, 3
100778, 2
100779, 1
101042, 1
101043, 1
101044, 1
101045, 1
101046, 3
101547, 1
101548, 1
101549, 2
101586, 1
101587, 1
101588, 2
101784, 1
101786, 3
102550, 3
102590, 3
102781, 1
102782, 2
103043, 1
103044, 1
103045, 1
103046, 1
103047, 3
103549, 1
103550, 1
103551, 2
103590, 1
103591, 2
103592, 1
103784, 1
103785, 3
104552, 2
104553, 1
104593, 2
104594, 1
104785, 3
105043, 1
105044, 1
105045, 2
105046, 3
105554, 1
105555, 1
105556, 2
105594, 1
105596, 1
105597, 2
105788, 1
105789, 3
106558, 2
106559, 1
106599, 1
106600, 2
106792, 1
106793, 1
106794, 1
107046, 1
107047, 2
107048, 1
107049, 3
107558, 1
107559, 2
107560, 1
107600, 1
107601, 2
107602, 1
107791, 1
107792, 2
107793, 1
108561, 3
108603, 3
108793, 1
108794, 2
109045, 1
109046, 1
109047, 1
109048, 3
109049, 1
109564, 1
109565, 3
109601, 1
109602, 2
109603, 1
109797, 1
109798, 2
109799, 1
110566, 2
110567, 1
110603, 3
110799, 1
110800, 2
111044, 2
111045, 1
111046, 2
111047, 2
111568, 1
111569, 2
111570, 1
111606, 1
111607, 1
111608, 2
111803, 1
111805, 2
111806, 1
112570, 2
112571, 1
112608, 1
112609, 2
112802, 1
112803, 2
113043, 1
113044, 2
113045, 2
113046, 2
113570, 1
113571, 2
113572, 1
113609, 1
113610, 2
113611, 1
113806, 1
113807, 3
114574, 2
114575, 1
114611, 3
114807, 1
114808, 2
115042, 2
115043, 1
115044, 2
115045, 2
115574, 1
115575, 3
115614, 1
115615, 2
115616, 1
115809, 1
115810, 2
115811, 1
116577, 3
116618, 3
116814, 3
117041, 1
117042, 2
117043, 1
117044, 3
117579, 1
117580, 1
117581, 2
117618, 1
117619, 2
117620, 1
117813, 2
117814, 2
118580, 1
118581, 2
118619, 1
118620, 2
118818, 2
118819, 1
119042, 1
119043, 2
119044, 1
119045, 3
119583, 1
119584, 3
119623, 2
119625, 2
119818, 1
119819, 3
120614, 3
120623, 2
120624, 1
120821, 2
120822, 1
121041, 1
121042, 1
121043, 1
121044, 3
121045, 1
121612, 1
121613, 1
121614, 2
121626, 1
121627, 1
121628, 2
121892, 1
121893, 3
122699, 1
122701, 2
122732, 1
122733, 2
122847, 2
122848, 1
123062, 1
123066, 1
123069, 1
123080, 1
123144, 1
123145, 1
123146, 1
123681, 1
123683, 1
123684, 2
123714, 1
123718, 1
123720, 2
123844, 1
123845, 1
123846, 1
123847, 1
124685, 1
124686, 1
124687, 1
124714, 2
124715, 1
124848, 1
124849, 1
124850, 1
125053, 1
125055, 1
125058, 1
125059, 1
125060, 1
125061, 2
125720, 1
125722, 1
125723, 1
125724, 1
125807, 1
125809, 1
125811, 1
125849, 1
125851, 1
125852, 1
126722, 1
126723, 1
126812, 1
126813, 2
126862, 1
126863, 1
126865, 1
127056, 1
127059, 1
127063, 1
127066, 1
127067, 1
127068, 1
127725, 1
127727, 1
127729, 2
127816, 1
127819, 1
127820, 1
127824, 1
127858, 1
127860, 1
127861, 2
128740, 1
128741, 1
128783, 1
128834, 1
128841, 1
128876, 1
128878, 1
129168, 1
129170, 1
129176, 1
129178, 1
129179, 1
129237, 1
129730, 1
129731, 2
129838, 1
129840, 1
129854, 1
129855, 1
129866, 1
129869, 1
129872, 1
129873, 1
130742, 1
130743, 1
130744, 1
130838, 1
130839, 1
130840, 1
130864, 1
130865, 1
130866, 1
131052, 1
131055, 1
131058, 1
131061, 1
131063, 2
131064, 1
131737, 1
131739, 1
131740, 2
131850, 1
131853, 1
131854, 1
131855, 1
131869, 1
131870, 1
131871, 2
132747, 2
132748, 1
132866, 1
132867, 1
132868, 1
132873, 2
133055, 1
133057, 1
133059, 1
133061, 1
133062, 1
133063, 1
133746, 1
133748, 1
133750, 1
134241, 1
134257, 1
134258, 1
134262, 1
134264, 1
134279, 1
134749, 1
134750, 1
134888, 1
134889, 1
134893, 1
134894, 1
135055, 1
135057, 1
135058, 1
135059, 2
135753, 1
135756, 1
135758, 1
135885, 1
135886, 2
135897, 1
135899, 2
136757, 2
136888, 1
136889, 1
136900, 1
136901, 1
137053, 1
137055, 1
137058, 1
137061, 1
137062, 1
137761, 1
137762, 1
137763, 1
137904, 2
137905, 1
138040, 1
138043, 1
138107, 1
138767, 1
138768, 1
138911, 1
138912, 1
139046, 2
139047, 1
139056, 1
139058, 1
139061, 1
139063, 2
139065, 1
139771, 1
139773, 1
139774, 2
139912, 1
139913, 2
139914, 1
140072, 1
140073, 1
140074, 2
140771, 1
140772, 2
140916, 2
140917, 1
141051, 1
141052, 1
141054, 1
141059, 1
141061, 1
141062, 1
141064, 1
141065, 2
141777, 1
141778, 1
141780, 1
141919, 1
141920, 1
141921, 1
142054, 1
142055, 2
142924, 2
142925, 1
142945, 1
142946, 1
143059, 1
143061, 1
143064, 1
143065, 1
143067, 2
143070, 1
143930, 1
143932, 1
143937, 1
143938, 1
144068, 1
144069, 1
144938, 2
144948, 1
144949, 1
145057, 1
145059, 1
145060, 1
145061, 1
145080, 1
145081, 1
145083, 1
145937, 1
145938, 1
145939, 1
145946, 1
145948, 2
146084, 2
146940, 1
146942, 1
146947, 2
147055, 1
147056, 1
147058, 1
147060, 2
147086, 1
147088, 2
147950, 1
147951, 2
147964, 1
147965, 1
147967, 1
148092, 1
148093, 1
148954, 1
148955, 1
148969, 1
148970, 2
149056, 1
149057, 1
149058, 1
149060, 2
149061, 1
149096, 1
149097, 1
149098, 2
149955, 1
149956, 1
149957, 1
149958, 1
149972, 1
149973, 1
149974, 2
150099, 1
150100, 2
150961, 1
150962, 2
150975, 2
150976, 1
151056, 1
151058, 1
151059, 1
151060, 1
151061, 1
151062, 2
151103, 1
151105, 1
151106, 2
151984, 1
151985, 2
151987, 1
151989, 1
151990, 1
151991, 1
152108, 2
152986, 1
152987, 1
152992, 1
152994, 1
153057, 1
153059, 1
153060, 1
153062, 2
153110, 1
153111, 1
153112, 1
154007, 1
154008, 2
154011, 1
154016, 1
154018, 1
154118, 2
154998, 2
155011, 2
155057, 1
155059, 1
155060, 1
155061, 1
155062, 1
155115, 1
155116, 1
155117, 1
156003, 1
156006, 2
156016, 1
156017, 1
156018, 1
156120, 1
156121, 1
157007, 2
157023, 1
157024, 1
157025, 1
157057, 1
157060, 1
157061, 1
157062, 1
157063, 2
157124, 1
157126, 1
157128, 2
158014, 2
158015, 1
158016, 1
158023, 1
158025, 1
158026, 2
158127, 2
158128, 1
159018, 2
159019, 1
159030, 1
159031, 1
159032, 1
159056, 1
159058, 1
159060, 1
159061, 1
159063, 2
159064, 1
159179, 1
159181, 1
159182, 1
159183, 1
160021, 1
160022, 1
160023, 2
160035, 1
160037, 1
160038, 2
160183, 1
160184, 1
160185, 1
161024, 1
161025, 2
161040, 1
161041, 2
161054, 1
161056, 1
161057, 1
161058, 1
161059, 2
161060, 1
161186, 1
161188, 1
161189, 2
162027, 1
162028, 3
162042, 1
162043, 3
162194, 2
162195, 1
163032, 1
163033, 2
163044, 1
163045, 2
163056, 1
163057, 1
163058, 1
163060, 1
163061, 1
163062, 2
163203, 1
163205, 1
163210, 2
164037, 1
164038, 1
164039, 2
164077, 1
164079, 1
164080, 2
164199, 1
164201, 2
165039, 2
165040, 1
165058, 1
165060, 1
165061, 1
165062, 2
165063, 1
165080, 1
165081, 1
165082, 2
165201, 1
165203, 1
165205, 2
166042, 1
166043, 2
166044, 1
166081, 1
166082, 2
166204, 2
166205, 1
167049, 2
167050, 1
167059, 1
167060, 1
167061, 1
167063, 1
167064, 3
167085, 1
167087, 2
167088, 1
167210, 1
167212, 1
167213, 2
168058, 1
168060, 1
168062, 1
168063, 1
168092, 1
168093, 2
168212, 3
169059, 3
169208, 1
169210, 1
169212, 1
169213, 1
169214, 2
169222, 1
169223, 1
169404, 1
169405, 1
169408, 1
170062, 2
170224, 1
170225, 1
170406, 3
171059, 1
171062, 1
171063, 1
171065, 1
171066, 1
171068, 1
171071, 2
171235, 1
171237, 2
Rows returned: 1417

-- Batches committed in time (all peers)
-- export timeline-commit-all.csv
--
SELECT (ts - (SELECT min(ts) FROM protocol WHERE event = 'COMMIT'))/1000 as msec, count()
FROM protocol
WHERE event = 'COMMIT'
GROUP BY msec
-- (msec, count[req])
Query time: 0.003 seconds
0, 2
3, 1
4, 1
17, 2
990, 1
991, 3
1005, 2
1006, 3
1007, 1
1018, 1
1019, 2
1021, 3
2114, 1
2115, 2
2145, 1
2146, 2
2151, 1
2152, 2
2158, 1
2164, 1
2167, 1
2168, 1
2170, 1
3025, 1
3026, 2
3028, 1
3029, 1
3035, 1
3244, 2
3249, 1
3250, 1
3269, 1
3272, 1
3302, 1
3303, 1
4173, 1
4174, 1
4179, 2
4239, 2
4251, 2
4275, 2
5056, 1
5057, 1
5058, 1
5062, 1
5063, 2
5248, 1
5258, 1
5313, 2
5324, 1
5325, 1
5329, 1
5330, 1
5338, 1
5350, 1
6216, 1
6217, 1
6220, 1
6222, 1
6293, 1
6294, 1
6327, 1
6328, 1
7054, 1
7055, 1
7056, 1
7062, 1
7063, 1
7064, 1
7311, 1
7312, 1
7317, 2
7336, 1
7337, 2
7352, 1
7371, 2
8246, 1
8247, 1
8263, 1
8264, 1
8278, 1
8300, 1
8313, 1
8332, 1
9062, 1
9063, 3
9064, 1
9065, 1
9356, 1
9357, 1
9367, 2
9384, 1
9385, 1
9389, 1
9390, 1
9413, 1
9414, 1
9432, 1
9433, 1
10254, 1
10257, 1
10261, 1
10269, 1
10332, 1
10335, 1
11052, 1
11053, 2
11055, 1
11056, 2
11282, 2
11318, 1
11319, 1
11363, 1
11364, 1
11367, 1
11368, 1
11419, 2
11421, 1
11422, 1
12240, 1
12250, 1
12258, 1
12289, 1
12343, 1
12355, 1
13051, 2
13052, 3
13053, 1
13353, 2
13357, 2
13368, 1
13369, 1
13372, 1
13373, 1
13402, 1
13403, 2
13404, 1
14266, 1
14269, 1
14298, 1
14299, 1
14378, 2
14395, 1
14396, 1
15050, 2
15051, 2
15052, 2
15055, 2
15361, 2
15362, 1
15364, 2
15365, 1
15455, 1
15456, 2
15460, 1
15461, 1
15462, 1
15491, 3
15492, 1
16319, 1
16322, 1
16370, 1
16371, 1
16465, 1
16481, 1
17052, 2
17053, 2
17054, 1
17055, 1
17362, 2
17365, 1
17366, 1
17392, 1
17393, 1
17396, 2
17489, 2
17490, 2
18382, 1
18387, 1
18400, 1
18402, 1
18487, 1
18488, 1
19052, 2
19053, 3
19054, 1
19330, 1
19331, 1
19354, 2
19401, 2
19410, 1
19411, 1
19506, 1
19507, 2
19512, 1
19526, 2
20394, 2
20397, 2
20415, 2
20418, 1
20419, 1
20609, 1
20616, 1
21051, 1
21052, 2
21053, 3
21054, 1
21055, 1
21430, 2
21431, 2
21433, 1
21434, 1
21438, 1
21439, 1
21591, 2
21592, 1
21593, 1
22446, 1
22450, 1
22452, 1
22457, 1
22568, 1
22569, 1
23052, 2
23053, 1
23054, 1
23055, 1
23056, 1
23504, 2
23507, 1
23508, 2
23510, 1
23511, 1
23513, 1
23645, 1
23646, 1
23652, 1
23656, 1
24473, 1
24474, 2
24489, 1
24607, 1
24614, 1
25050, 1
25052, 1
25053, 1
25054, 1
25066, 1
25070, 1
25497, 3
25498, 1
25502, 1
25503, 1
25506, 1
25507, 1
25605, 2
25613, 1
25617, 1
26474, 1
26478, 1
26482, 1
26484, 1
26613, 1
26636, 1
27051, 2
27052, 1
27056, 2
27066, 1
27505, 2
27506, 2
27516, 2
27517, 2
27703, 2
27709, 2
28522, 1
28529, 1
28585, 1
28587, 1
28732, 2
28736, 2
29056, 2
29057, 2
29058, 1
29076, 1
29077, 2
29525, 3
29548, 2
29549, 1
29622, 2
29623, 2
29624, 2
29757, 1
29758, 2
29775, 2
29776, 1
30599, 2
30600, 1
30601, 1
30619, 1
30629, 1
30644, 2
30804, 1
30816, 1
31050, 2
31051, 2
31052, 3
31053, 1
31573, 1
31574, 1
31577, 1
31578, 1
31597, 2
31598, 1
31601, 1
31731, 1
31732, 3
31733, 2
32399, 1
32400, 1
32403, 2
32432, 4
32433, 2
32633, 3
32635, 3
33047, 1
33048, 2
33049, 3
33050, 3
33052, 1
33053, 2
33400, 1
33401, 3
33402, 4
33432, 3
33433, 4
33434, 1
33635, 1
33636, 2
33637, 1
33638, 1
33639, 3
34402, 3
34403, 3
34434, 1
34435, 2
34436, 2
34437, 1
34643, 3
34644, 3
35049, 2
35050, 3
35051, 2
35052, 4
35053, 3
35404, 1
35405, 2
35406, 3
35407, 2
35437, 1
35438, 2
35439, 1
35441, 1
35442, 3
35637, 2
35638, 5
35639, 1
36407, 4
36408, 2
36441, 2
36442, 3
36443, 1
36641, 5
36642, 1
37048, 1
37049, 2
37050, 1
37051, 3
37052, 2
37053, 1
37055, 1
37056, 2
37057, 1
37409, 2
37410, 6
37440, 2
37441, 2
37442, 3
37443, 1
37643, 2
37644, 6
38410, 3
38412, 2
38413, 1
38441, 1
38442, 2
38443, 3
38646, 6
39048, 3
39049, 2
39050, 1
39051, 4
39052, 4
39411, 1
39421, 1
39422, 3
39424, 1
39425, 2
39445, 1
39446, 5
39447, 2
39647, 1
39648, 4
39649, 3
40414, 2
40415, 2
40416, 2
40447, 1
40448, 4
40449, 1
40651, 2
40652, 4
41047, 2
41048, 4
41049, 3
41050, 2
41051, 1
41052, 2
41415, 2
41416, 3
41417, 3
41449, 1
41450, 3
41451, 4
41650, 1
41651, 4
41652, 3
42417, 2
42418, 4
42449, 3
42450, 3
42654, 1
42655, 5
43048, 2
43049, 3
43050, 1
43051, 4
43052, 4
43418, 1
43419, 3
43420, 4
43451, 2
43452, 2
43453, 4
43655, 3
43656, 2
43657, 3
44423, 2
44424, 1
44425, 3
44453, 1
44454, 4
44455, 1
44658, 1
44659, 4
44660, 1
45050, 1
45051, 2
45052, 4
45053, 4
45054, 3
45435, 1
45436, 2
45437, 1
45439, 1
45440, 1
45441, 2
45461, 1
45462, 3
45463, 3
45464, 1
45659, 1
45660, 2
45661, 3
45662, 2
46425, 1
46426, 5
46455, 1
46456, 4
46457, 1
46663, 6
47046, 2
47047, 3
47048, 3
47049, 6
47426, 1
47427, 3
47428, 4
47459, 1
47460, 3
47461, 4
47665, 1
47666, 3
47667, 2
47668, 2
48431, 4
48432, 2
48461, 1
48462, 2
48463, 3
48666, 5
48667, 1
49045, 1
49046, 2
49047, 2
49048, 2
49049, 5
49050, 2
49432, 3
49433, 5
49462, 2
49463, 2
49464, 4
49668, 2
49669, 5
49670, 1
50434, 2
50435, 1
50436, 2
50437, 1
50466, 4
50467, 2
50670, 1
50671, 3
50672, 2
51044, 1
51045, 2
51046, 3
51047, 5
51048, 3
51437, 1
51438, 1
51439, 1
51440, 2
51466, 3
51467, 3
51468, 2
51496, 2
51497, 1
51674, 1
51675, 3
51676, 1
51698, 3
52440, 3
52441, 3
52468, 5
52469, 1
52677, 1
52678, 3
52679, 1
52682, 1
53045, 1
53047, 2
53048, 1
53049, 3
53050, 1
53052, 1
53053, 1
53054, 2
53055, 2
53440, 1
53441, 1
53442, 2
53443, 1
53444, 3
53470, 1
53471, 3
53472, 2
53473, 2
53680, 1
53681, 3
53683, 1
53684, 2
53685, 1
54444, 2
54445, 2
54446, 2
54473, 3
54474, 3
54680, 1
54681, 2
54682, 3
55045, 1
55046, 2
55047, 3
55048, 4
55049, 4
55446, 1
55447, 2
55448, 1
55449, 1
55450, 3
55473, 1
55474, 3
55475, 3
55476, 1
55697, 1
55698, 3
55701, 3
55702, 1
56449, 3
56450, 1
56451, 2
56477, 2
56478, 4
56686, 2
56687, 1
56688, 3
57045, 1
57046, 3
57047, 2
57048, 4
57050, 3
57051, 1
57449, 3
57450, 3
57451, 2
57477, 1
57478, 1
57479, 2
57480, 4
57687, 3
57688, 5
58451, 4
58452, 2
58481, 3
58485, 2
58486, 1
58691, 1
58692, 2
58694, 3
59044, 1
59045, 3
59046, 3
59047, 5
59048, 2
59451, 1
59452, 2
59453, 4
59454, 1
59481, 1
59482, 1
59483, 2
59484, 1
59485, 2
59486, 1
59690, 2
59691, 5
59692, 1
60454, 1
60455, 4
60456, 1
60485, 3
60487, 1
60488, 2
60694, 4
60695, 2
61044, 1
61045, 1
61046, 3
61047, 5
61048, 2
61049, 2
61456, 1
61457, 4
61458, 2
61459, 1
61486, 1
61487, 3
61488, 2
61489, 2
61695, 1
61696, 3
61709, 2
61710, 2
62458, 2
62459, 1
62460, 3
62488, 3
62490, 2
62491, 1
62698, 3
62700, 2
62701, 1
63045, 1
63046, 2
63047, 2
63048, 3
63049, 1
63051, 1
63052, 1
63053, 1
63054, 2
63458, 1
63461, 2
63462, 3
63463, 2
63490, 2
63491, 2
63493, 1
63494, 1
63495, 2
63701, 2
63702, 2
63705, 2
63706, 2
64463, 2
64464, 2
64465, 1
64466, 1
64492, 2
64493, 1
64494, 1
64495, 2
64701, 2
64702, 1
64703, 3
65044, 1
65045, 2
65046, 2
65047, 3
65048, 2
65049, 1
65050, 1
65051, 2
65464, 2
65465, 5
65466, 1
65494, 2
65495, 6
65703, 5
65704, 3
66468, 3
66469, 3
66496, 3
66497, 3
66706, 3
66707, 3
67044, 1
67045, 2
67046, 2
67047, 3
67048, 6
67468, 1
67469, 2
67470, 2
67471, 1
67472, 2
67497, 1
67498, 4
67499, 3
67706, 1
67707, 4
67708, 2
67709, 1
68470, 4
68471, 2
68499, 1
68500, 2
68501, 2
68502, 1
68709, 2
68710, 1
68714, 3
69048, 2
69049, 3
69050, 3
69051, 5
69052, 1
69471, 1
69472, 4
69473, 1
69475, 1
69476, 1
69502, 4
69503, 4
69715, 2
69716, 2
69726, 1
69727, 3
70474, 6
70513, 1
70514, 5
70714, 5
70715, 1
71043, 1
71044, 1
71045, 3
71046, 3
71047, 4
71048, 2
71475, 1
71476, 1
71477, 3
71478, 2
71479, 1
71515, 1
71516, 3
71517, 4
71716, 1
71717, 4
71718, 3
72480, 3
72483, 3
72519, 2
72520, 2
72521, 2
72718, 1
72719, 5
73044, 1
73045, 1
73046, 1
73047, 3
73048, 1
73053, 1
73054, 1
73055, 2
73056, 3
73481, 2
73482, 2
73483, 4
73520, 2
73521, 5
73522, 1
73719, 3
73720, 4
73721, 1
74481, 1
74482, 2
74483, 2
74484, 1
74533, 3
74534, 1
74535, 2
74723, 3
74724, 2
74725, 1
75043, 1
75044, 3
75045, 1
75047, 3
75048, 3
75049, 3
75484, 2
75485, 2
75486, 4
75535, 3
75536, 4
75537, 1
75725, 4
75726, 4
76486, 5
76487, 1
76536, 2
76537, 1
76539, 3
76731, 1
76732, 2
76733, 2
76735, 1
77043, 1
77044, 2
77045, 1
77048, 4
77049, 2
77050, 1
77051, 3
77488, 2
77489, 3
77490, 3
77537, 1
77538, 3
77539, 4
77730, 1
77731, 3
77732, 4
78490, 3
78491, 3
78539, 6
78734, 2
78735, 1
78736, 3
79042, 1
79043, 1
79044, 1
79045, 3
79046, 2
79047, 1
79048, 2
79049, 3
79494, 2
79495, 2
79496, 1
79497, 1
79498, 2
79542, 2
79543, 2
79544, 4
79733, 1
79734, 3
79735, 1
79736, 3
80495, 1
80496, 5
80544, 1
80545, 3
80546, 2
80735, 3
80738, 3
81043, 1
81044, 1
81045, 2
81046, 3
81047, 2
81048, 1
81049, 2
81050, 2
81498, 2
81499, 4
81500, 2
81546, 1
81547, 2
81548, 3
81549, 2
81738, 3
81739, 5
82501, 3
82502, 3
82548, 1
82549, 2
82550, 1
82551, 2
82741, 1
82742, 5
83043, 2
83044, 2
83045, 2
83046, 2
83047, 6
83503, 1
83504, 4
83506, 1
83507, 2
83551, 1
83552, 1
83553, 3
83554, 1
83555, 2
83742, 1
83743, 5
83744, 2
84505, 2
84506, 4
84553, 5
84554, 1
84745, 3
84746, 2
84747, 1
85044, 1
85045, 1
85046, 1
85047, 1
85048, 1
85049, 4
85050, 1
85052, 1
85053, 2
85054, 1
85507, 1
85508, 4
85509, 2
85510, 1
85555, 4
85556, 2
85557, 2
85745, 1
85746, 4
85747, 3
86510, 2
86511, 4
86555, 5
86556, 1
86749, 3
86768, 1
86769, 2
87044, 1
87045, 1
87046, 1
87047, 3
87048, 1
87049, 1
87050, 1
87051, 2
87052, 3
87512, 2
87513, 3
87514, 3
87559, 1
87560, 1
87561, 2
87562, 1
87563, 2
87564, 1
87751, 1
87752, 2
87753, 1
87754, 1
87755, 3
88515, 4
88516, 2
88565, 3
88567, 2
88568, 1
88754, 1
88755, 4
88756, 1
89043, 2
89044, 3
89045, 2
89046, 5
89047, 2
89516, 2
89517, 2
89518, 4
89563, 2
89564, 3
89565, 2
89566, 1
89755, 1
89756, 1
89757, 3
89759, 2
89760, 1
90519, 4
90520, 2
90564, 2
90565, 4
90759, 6
91043, 2
91044, 1
91045, 1
91046, 1
91047, 2
91048, 2
91049, 1
91050, 1
91051, 3
91525, 2
91526, 2
91527, 4
91566, 2
91567, 2
91568, 4
91759, 1
91760, 3
91761, 4
92525, 1
92526, 3
92527, 2
92568, 3
92583, 2
92584, 1
92765, 1
92766, 4
92767, 1
93046, 1
93047, 1
93048, 1
93049, 4
93050, 2
93051, 1
93052, 3
93053, 1
93526, 1
93527, 1
93528, 3
93529, 1
93530, 2
93572, 1
93573, 1
93574, 3
93575, 2
93576, 1
93765, 2
93766, 3
93767, 3
94529, 1
94530, 5
94573, 3
94575, 3
94766, 3
94767, 3
95045, 1
95046, 3
95047, 2
95048, 4
95049, 1
95050, 3
95532, 1
95533, 3
95534, 2
95535, 2
95575, 1
95576, 1
95577, 2
95584, 1
95585, 1
95586, 2
95767, 1
95768, 2
95769, 1
95770, 1
95771, 3
96534, 1
96535, 2
96536, 2
96537, 1
96578, 4
96579, 2
96771, 2
96772, 3
96773, 1
97044, 1
97045, 2
97046, 3
97047, 2
97048, 3
97049, 3
97534, 1
97535, 1
97536, 4
97537, 2
97580, 2
97581, 1
97582, 2
97584, 2
97585, 1
97773, 2
97774, 6
98537, 3
98538, 3
98581, 1
98582, 5
98773, 3
98774, 2
98775, 1
99044, 1
99045, 2
99046, 3
99047, 3
99048, 5
99539, 1
99540, 4
99541, 3
99582, 1
99583, 3
99584, 4
99775, 2
99776, 2
99777, 4
100545, 2
100546, 4
100586, 1
100587, 2
100591, 3
100778, 1
100779, 5
101043, 1
101044, 3
101045, 2
101046, 4
101047, 4
101547, 1
101548, 2
101549, 4
101550, 1
101587, 2
101588, 4
101589, 2
101779, 1
101780, 2
101781, 1
101785, 1
101786, 2
101787, 1
102550, 2
102551, 4
102590, 4
102591, 2
102780, 1
102781, 2
102782, 3
103043, 1
103044, 1
103045, 2
103046, 3
103047, 4
103048, 3
103550, 1
103551, 3
103553, 2
103554, 2
103591, 2
103592, 2
103594, 1
103595, 2
103596, 1
103783, 1
103784, 2
103785, 3
103786, 2
104552, 4
104553, 2
104593, 2
104594, 4
104785, 2
104786, 4
105044, 4
105045, 1
105046, 3
105047, 3
105048, 3
105555, 3
105556, 5
105594, 2
105595, 2
105596, 2
105597, 2
105788, 1
105789, 4
105790, 3
106557, 1
106558, 2
106559, 3
106598, 3
106600, 2
106601, 1
106792, 1
106793, 4
106794, 1
107044, 1
107045, 1
107046, 2
107047, 2
107048, 4
107049, 3
107050, 1
107558, 2
107559, 3
107560, 3
107600, 1
107601, 2
107602, 5
107792, 2
107793, 6
108561, 1
108562, 4
108563, 1
108601, 1
108603, 2
108604, 3
108793, 1
108794, 4
108795, 1
109046, 2
109047, 2
109048, 2
109049, 4
109050, 3
109051, 1
109564, 2
109565, 4
109566, 2
109602, 2
109603, 2
109604, 1
109605, 2
109606, 1
109797, 2
109798, 2
109799, 4
110566, 1
110567, 2
110569, 1
110570, 2
110603, 1
110604, 2
110605, 2
110606, 1
110798, 3
110800, 2
110801, 1
111044, 1
111045, 1
111046, 2
111047, 2
111048, 1
111049, 1
111050, 2
111051, 1
111052, 3
111568, 2
111569, 2
111570, 4
111607, 1
111608, 3
111610, 1
111611, 1
111612, 2
111801, 1
111802, 2
111803, 1
111804, 1
111806, 3
112570, 1
112571, 5
112609, 4
112610, 2
112803, 3
112805, 3
113043, 1
113044, 3
113045, 3
113046, 5
113047, 2
113571, 4
113572, 4
113610, 3
113611, 4
113612, 1
113806, 2
113807, 5
113808, 1
114575, 5
114576, 1
114611, 1
114612, 2
114613, 3
114808, 3
114809, 3
115042, 2
115043, 3
115044, 2
115045, 3
115046, 1
115047, 2
115048, 1
115574, 1
115575, 1
115576, 2
115577, 1
115578, 3
115615, 2
115616, 4
115617, 2
115809, 2
115810, 2
115811, 4
116577, 1
116578, 2
116580, 3
116618, 3
116619, 3
116812, 1
116813, 2
116814, 1
116815, 2
117041, 1
117042, 2
117043, 2
117044, 4
117045, 4
117046, 1
117579, 1
117580, 4
117581, 3
117618, 1
117619, 2
117620, 4
117621, 1
117813, 2
117814, 4
117815, 2
118581, 2
118582, 1
118583, 3
118620, 3
118621, 1
118622, 2
118816, 1
118817, 2
118818, 1
118819, 2
119042, 1
119043, 3
119044, 2
119045, 5
119046, 3
119583, 1
119584, 5
119585, 2
119622, 2
119623, 3
119624, 1
119625, 1
119626, 1
119819, 5
119820, 3
120614, 5
120615, 1
120623, 1
120624, 3
120625, 1
120626, 1
120821, 3
120822, 3
121042, 1
121043, 2
121044, 2
121045, 4
121046, 1
121047, 1
121048, 3
121613, 2
121614, 1
121615, 4
121616, 1
121627, 2
121628, 6
121892, 1
121893, 1
121894, 2
121896, 1
121897, 1
121898, 2
122700, 1
122701, 1
122702, 3
122703, 1
122727, 1
122728, 2
122733, 2
122734, 1
122848, 3
122854, 1
122855, 2
123063, 1
123066, 1
123069, 1
123078, 1
123080, 1
123094, 1
123118, 1
123121, 1
123123, 1
123124, 1
123125, 1
123144, 1
123145, 1
123147, 1
123680, 1
123681, 1
123682, 1
123683, 3
123684, 1
123685, 1
123714, 1
123715, 1
123717, 1
123718, 1
123719, 1
123720, 2
123721, 1
123844, 1
123845, 1
123846, 1
123847, 2
123849, 2
123850, 1
124683, 1
124684, 1
124685, 2
124686, 1
124687, 1
124714, 1
124715, 3
124716, 1
124717, 1
124848, 1
124850, 4
124851, 1
125054, 2
125056, 1
125057, 1
125058, 1
125059, 1
125060, 1
125061, 3
125062, 2
125063, 2
125720, 1
125722, 2
125723, 1
125724, 2
125725, 1
125726, 1
125807, 1
125808, 1
125810, 2
125811, 1
125812, 1
125849, 1
125850, 1
125852, 3
125853, 1
126720, 1
126721, 1
126722, 1
126723, 1
126813, 4
126814, 2
126862, 2
126863, 2
126864, 1
126865, 1
127056, 1
127057, 1
127059, 1
127061, 1
127064, 1
127065, 1
127066, 1
127067, 1
127068, 2
127069, 2
127725, 1
127727, 1
127728, 1
127729, 3
127730, 2
127815, 1
127816, 1
127817, 1
127819, 2
127820, 1
127821, 1
127825, 1
127858, 1
127859, 1
127860, 2
127861, 3
127862, 1
128738, 1
128739, 2
128740, 1
128741, 1
128783, 1
128833, 1
128835, 2
128842, 1
128876, 1
128877, 1
128878, 2
129115, 1
129119, 1
129121, 1
129125, 1
129126, 1
129148, 1
129168, 1
129170, 1
129177, 1
129178, 1
129179, 1
129238, 1
129729, 1
129730, 1
129731, 3
129732, 1
129836, 1
129838, 1
129839, 1
129840, 2
129846, 1
129854, 1
129855, 1
129866, 2
129867, 1
129868, 2
129869, 1
129872, 1
129873, 1
130742, 1
130744, 2
130750, 1
130751, 2
130839, 3
130840, 3
130864, 1
130865, 2
130866, 2
130867, 1
131053, 1
131055, 1
131058, 1
131062, 1
131063, 1
131064, 2
131072, 1
131074, 1
131081, 1
131083, 1
131085, 1
131086, 2
131737, 1
131738, 1
131739, 1
131740, 2
131741, 3
131851, 2
131853, 2
131854, 1
131855, 3
131869, 2
131871, 2
131872, 1
131874, 2
131875, 1
132747, 2
132748, 1
132749, 1
132752, 2
132867, 2
132869, 1
132873, 2
132874, 2
132875, 1
132876, 1
132877, 1
133053, 1
133055, 1
133056, 1
133058, 2
133060, 2
133061, 2
133062, 1
133063, 2
133746, 1
133749, 1
133750, 1
133890, 1
133893, 1
134070, 1
134071, 1
134073, 1
134171, 1
134242, 1
134243, 1
134250, 1
134258, 2
134259, 1
134262, 1
134265, 1
134280, 1
134750, 1
134751, 1
134758, 1
134759, 1
134883, 1
134885, 1
134889, 1
134890, 1
134892, 1
134893, 2
134895, 1
135056, 1
135057, 1
135059, 1
135060, 3
135062, 1
135065, 1
135066, 2
135753, 1
135754, 1
135756, 1
135757, 2
135758, 1
135885, 1
135886, 2
135887, 1
135888, 1
135889, 1
135897, 2
135899, 4
136757, 1
136758, 3
136888, 1
136889, 3
136899, 1
136900, 2
136901, 1
137053, 1
137054, 1
137055, 1
137056, 3
137057, 1
137059, 1
137061, 1
137062, 1
137760, 1
137761, 2
137762, 1
137763, 2
137903, 3
137904, 1
137905, 1
137906, 1
138041, 2
138042, 1
138043, 1
138045, 1
138108, 1
138768, 4
138909, 1
138910, 1
138911, 1
138913, 1
139044, 3
139046, 1
139047, 2
139056, 2
139059, 1
139060, 1
139062, 2
139063, 1
139064, 3
139065, 2
139771, 2
139773, 1
139774, 1
139775, 1
139776, 1
139777, 1
139778, 1
139912, 2
139913, 3
139914, 3
140072, 2
140073, 1
140074, 4
140075, 1
140771, 1
140772, 4
140773, 1
140915, 1
140916, 1
140917, 4
141052, 1
141053, 2
141054, 1
141055, 1
141056, 1
141058, 1
141059, 1
141061, 1
141062, 1
141063, 2
141064, 1
141065, 1
141066, 1
141067, 1
141068, 1
141069, 1
141778, 1
141779, 2
141780, 1
141781, 1
141782, 1
141919, 1
141920, 2
141921, 3
142054, 1
142055, 4
142056, 1
142925, 4
142926, 2
142946, 3
142947, 1
143056, 1
143058, 1
143059, 4
143061, 1
143065, 1
143066, 2
143067, 1
143068, 2
143070, 1
143931, 1
143932, 2
143933, 3
143937, 1
143939, 1
144068, 2
144069, 1
144070, 1
144937, 1
144938, 2
144939, 1
144949, 2
144950, 2
145057, 1
145058, 2
145060, 2
145061, 3
145080, 2
145081, 1
145082, 2
145083, 1
145937, 1
145939, 2
145940, 1
145946, 1
145947, 3
145948, 1
145949, 2
145950, 1
146084, 2
146085, 2
146941, 1
146942, 2
146943, 1
146948, 3
146949, 1
147055, 1
147057, 2
147058, 1
147059, 1
147060, 2
147061, 2
147062, 1
147087, 2
147088, 2
147089, 2
147950, 1
147951, 2
147952, 2
147953, 1
147965, 2
147966, 2
147967, 2
148093, 1
148094, 1
148095, 2
148954, 1
148955, 3
148968, 1
148969, 1
148970, 3
148971, 1
149056, 2
149057, 1
149059, 1
149060, 3
149061, 2
149062, 1
149063, 2
149096, 1
149097, 1
149098, 1
149099, 3
149100, 2
149956, 2
149957, 2
149958, 3
149959, 1
149971, 1
149972, 2
149973, 1
149974, 4
150099, 1
150100, 2
150101, 3
150961, 2
150962, 3
150963, 1
150975, 1
150976, 4
150977, 1
151056, 2
151058, 2
151059, 1
151060, 2
151061, 2
151062, 4
151063, 1
151103, 1
151104, 1
151105, 1
151106, 2
151107, 2
151108, 1
151984, 1
151985, 2
151986, 4
151987, 2
151988, 1
151989, 1
151990, 1
151991, 1
151992, 1
152108, 2
152109, 2
152986, 1
152987, 1
152988, 2
152993, 3
152994, 1
153058, 2
153059, 1
153060, 1
153061, 3
153062, 2
153063, 1
153111, 2
153112, 1
153113, 3
154002, 3
154004, 1
154005, 1
154006, 1
154008, 1
154009, 2
154011, 1
154017, 1
154019, 1
154117, 1
154118, 2
154119, 1
154997, 2
154999, 2
155010, 2
155011, 1
155012, 1
155057, 1
155058, 2
155059, 2
155060, 1
155061, 2
155062, 2
155115, 2
155116, 1
155117, 3
156003, 2
156004, 2
156006, 2
156015, 1
156016, 1
156017, 2
156018, 2
156120, 2
156121, 2
157008, 4
157024, 2
157025, 4
157057, 1
157058, 1
157060, 2
157061, 1
157062, 2
157063, 4
157064, 1
157124, 1
157125, 1
157126, 2
157127, 2
157128, 1
157129, 1
158013, 1
158014, 1
158015, 4
158016, 2
158024, 2
158025, 1
158026, 2
158027, 3
158127, 2
158128, 4
159017, 1
159018, 2
159019, 3
159031, 2
159032, 3
159033, 1
159056, 1
159057, 1
159059, 2
159060, 1
159061, 1
159062, 1
159063, 1
159064, 3
159065, 3
159179, 1
159180, 1
159181, 1
159182, 3
159183, 2
160021, 1
160022, 3
160023, 3
160024, 1
160035, 1
160036, 1
160037, 2
160038, 1
160039, 3
160184, 1
160185, 3
160186, 2
161025, 4
161026, 2
161040, 3
161041, 3
161054, 2
161056, 2
161057, 1
161058, 2
161059, 3
161060, 4
161187, 1
161188, 1
161189, 3
161190, 3
162028, 3
162029, 4
162030, 1
162042, 1
162043, 2
162044, 2
162045, 1
162046, 2
162194, 2
162195, 3
162196, 1
163033, 5
163034, 1
163044, 3
163045, 2
163046, 1
163056, 1
163057, 1
163058, 2
163059, 1
163060, 2
163061, 2
163062, 3
163063, 2
163202, 1
163203, 2
163204, 1
163205, 2
163211, 2
164036, 2
164037, 2
164038, 2
164039, 1
164040, 1
164078, 2
164080, 3
164081, 3
164200, 2
164201, 2
164202, 2
165039, 1
165040, 3
165041, 2
165058, 1
165059, 1
165060, 2
165061, 1
165062, 1
165063, 3
165064, 2
165065, 1
165079, 1
165080, 1
165081, 3
165082, 2
165083, 1
165202, 1
165203, 1
165204, 2
165205, 3
165206, 1
166043, 2
166044, 3
166045, 2
166046, 1
166082, 3
166083, 2
166084, 1
166205, 3
166208, 2
166209, 1
167048, 2
167049, 2
167050, 2
167059, 1
167061, 2
167062, 1
167063, 2
167064, 3
167065, 2
167066, 1
167067, 2
167086, 2
167087, 2
167088, 3
167089, 1
167211, 2
167212, 2
167213, 1
167214, 3
168055, 1
168058, 1
168059, 1
168060, 1
168061, 1
168062, 1
168063, 2
168093, 4
168094, 2
168212, 2
168213, 4
169058, 2
169059, 3
169060, 1
169065, 1
169066, 1
169068, 1
169070, 1
169072, 1
169073, 1
169208, 1
169211, 1
169212, 1
169213, 1
169214, 1
169215, 1
169223, 3
169224, 1
169404, 1
169405, 1
169406, 2
169409, 2
170062, 2
170063, 2
170224, 1
170225, 3
170406, 4
170407, 2
171059, 1
171062, 2
171064, 1
171065, 2
171066, 1
171069, 2
171071, 2
171072, 2
171073, 1
171074, 2
171232, 1
171234, 2
171236, 1
171237, 2
Rows returned: 2184

-- Client 0 request sending in time
-- export timeline-submit-client-1.csv
--
SELECT (ts - (SELECT min(ts) FROM request WHERE event = 'REQ_SEND' AND nodeId = -1))/1000 as msec, count()
FROM request
WHERE event = 'REQ_SEND' AND nodeId = -1
GROUP BY msec
-- (msec, count[req])
Query time: 0.000 seconds
Rows returned: 0

-- Client 1 request sending in time
-- export timeline-submit-client-2.csv
--
SELECT (ts - (SELECT min(ts) FROM request WHERE event = 'REQ_SEND' AND nodeId = -2))/1000 as msec, count()
FROM request
WHERE event = 'REQ_SEND' AND nodeId = -2
GROUP BY msec
-- (msec, count[req])
Query time: 0.000 seconds
Rows returned: 0

-- Client request sending in time (all clients)
-- export timeline-submit-all.csv
--
SELECT (ts - (SELECT min(ts) FROM request WHERE event = 'REQ_SEND'))/1000 as msec, count()
FROM request
WHERE event = 'REQ_SEND'
GROUP BY msec
-- (msec, count[req])
Query time: 0.000 seconds
Rows returned: 0

-- Latency histogram (by millisecond buckets) for client 0
-- export histogram-latency-client-1.csv
--
SELECT latency/1000 as lat, count()
FROM request
WHERE event = 'REQ_FINISHED' AND nodeId = -1
GROUP BY lat
--(latency[ms], count[req])
Query time: 0.000 seconds
Rows returned: 0

-- Latency histogram (by millisecond buckets), all clients combined
-- export histogram-latency-all.csv
--
SELECT latency/1000 as lat, count()
FROM request
WHERE event = 'REQ_FINISHED'
GROUP BY lat
--(latency[ms], count[req])
Query time: 0.000 seconds
Rows returned: 0

-- Latency histogram (by millisecond buckets) for client 0, not considering watermark blocking
-- export histogram-latency-client-1.csv
--
SELECT latency/1000 as lat, count()
FROM request
WHERE event = 'ENOUGH_RESP' AND nodeId = -1
GROUP BY lat
--(latency[ms], count[req])
Query time: 0.000 seconds
Rows returned: 0

-- Latency histogram (by millisecond buckets), all clients combined, not considering watermark blocking
-- export histogram-latency-all.csv
--
SELECT latency/1000 as lat, count()
FROM request
WHERE event = 'ENOUGH_RESP'
GROUP BY lat
--(latency[ms], count[req])
Query time: 0.000 seconds
Rows returned: 0

-- Throughput in time (per millisecond)
-- export timeline-throughput-commit.csv
--
SELECT (ts - (SELECT min(ts) FROM request WHERE event = 'REQ_FINISHED'))/1000 as msec, count()
FROM request
WHERE event = 'REQ_FINISHED'
GROUP BY msec
-- (msec, count[req])
Query time: 0.000 seconds
Rows returned: 0

-- Throughput in time (per millisecond), in order
-- export timeline-throughput-deliver.csv
--
SELECT (ts - (SELECT min(ts) FROM request WHERE event = 'REQ_DELIVERED'))/1000 as msec, count()
FROM request
WHERE event = 'REQ_DELIVERED'
GROUP BY msec
-- (msec, count[req])
Query time: 0.000 seconds
Rows returned: 0

-- Batch size histogram
-- export batch-sizes.csv
--
SELECT val, count()
FROM protocol
WHERE event = 'PROPOSE'
GROUP BY val
-- (batch-size[req], num-batches)
Query time: 0.000 seconds
0, 226
118, 1
148, 1
152, 1
159, 2
165, 2
167, 1
169, 1
170, 1
172, 1
173, 1
177, 1
178, 1
181, 1
182, 2
183, 1
185, 1
186, 1
187, 1
191, 1
192, 1
193, 1
195, 1
200, 1
201, 1
217, 1
220, 1
230, 1
Rows returned: 28

-- Batch size in time (per millisecond), all peers
-- export timeline-batch-size.csv
--
SELECT (ts - (SELECT min(ts) FROM protocol WHERE event = 'PROPOSE'))/1000 as msec, avg(val)
FROM protocol
WHERE event = 'PROPOSE'
GROUP BY msec
-- (msec, avg[req])
Query time: 0.001 seconds
0, 0.0
1001, 0.0
1019, 0.0
2046, 118.0
3039, 0.0
3176, 191.0
4169, 165.0
5067, 0.0
5210, 185.0
6190, 201.0
7067, 0.0
7168, 220.0
8170, 165.0
9066, 0.0
9218, 230.0
10176, 159.0
11067, 0.0
11216, 217.0
12211, 148.0
13067, 0.0
13223, 182.0
14243, 167.0
15066, 0.0
15263, 178.0
16297, 183.0
17066, 0.0
17285, 187.0
18310, 181.0
19066, 0.0
19339, 152.0
20317, 192.0
21066, 0.0
21319, 170.0
22328, 172.0
23067, 0.0
23366, 200.0
24378, 177.0
25066, 0.0
25390, 169.0
26413, 159.0
27066, 0.0
27418, 186.0
28459, 193.0
29065, 0.0
29495, 182.0
30479, 173.0
31065, 0.0
31451, 195.0
32415, 0.0
33065, 0.0
33417, 0.0
34419, 0.0
35064, 0.0
35421, 0.0
36423, 0.0
37064, 0.0
37425, 0.0
38426, 0.0
39064, 0.0
39428, 0.0
40430, 0.0
41063, 0.0
41432, 0.0
42434, 0.0
43063, 0.0
43436, 0.0
44439, 0.0
45062, 0.0
45441, 0.0
46442, 0.0
47062, 0.0
47444, 0.0
48447, 0.0
49062, 0.0
49449, 0.0
50451, 0.0
51061, 0.0
51453, 0.0
52456, 0.0
53061, 0.0
53457, 0.0
54459, 0.0
55061, 0.0
55461, 0.0
56463, 0.0
57061, 0.0
57464, 0.0
58466, 0.0
59061, 0.0
59468, 0.0
60471, 0.0
61060, 0.0
61473, 0.0
62474, 0.0
63061, 0.0
63476, 0.0
64478, 0.0
65061, 0.0
65481, 0.0
66483, 0.0
67060, 0.0
67485, 0.0
68486, 0.0
69060, 0.0
69488, 0.0
70490, 0.0
71059, 0.0
71492, 0.0
72494, 0.0
73059, 0.0
73496, 0.0
74498, 0.0
75059, 0.0
75500, 0.0
76502, 0.0
77058, 0.0
77504, 0.0
78506, 0.0
79059, 0.0
79509, 0.0
80512, 0.0
81059, 0.0
81514, 0.0
82517, 0.0
83059, 0.0
83519, 0.0
84522, 0.0
85059, 0.0
85523, 0.0
86526, 0.0
87059, 0.0
87528, 0.0
88531, 0.0
89059, 0.0
89533, 0.0
90535, 0.0
91059, 0.0
91537, 0.0
92539, 0.0
93060, 0.0
93541, 0.0
94545, 0.0
95060, 0.0
95547, 0.0
96549, 0.0
97060, 0.0
97551, 0.0
98553, 0.0
99060, 0.0
99555, 0.0
100560, 0.0
101060, 0.0
101563, 0.0
102564, 0.0
103059, 0.0
103566, 0.0
104568, 0.0
105059, 0.0
105570, 0.0
106572, 0.0
107060, 0.0
107574, 0.0
108577, 0.0
109060, 0.0
109579, 0.0
110581, 0.0
111060, 0.0
111583, 0.0
112585, 0.0
113059, 0.0
113587, 0.0
114589, 0.0
115059, 0.0
115592, 0.0
116593, 0.0
117058, 0.0
117595, 0.0
118598, 0.0
119058, 0.0
119599, 0.0
120626, 0.0
121058, 0.0
121628, 0.0
122691, 0.0
123066, 0.0
123693, 0.0
124696, 0.0
125067, 0.0
125731, 0.0
126734, 0.0
127068, 0.0
127736, 0.0
128741, 0.0
129128, 0.0
129743, 0.0
130746, 0.0
131068, 0.0
131750, 0.0
132755, 0.0
133069, 0.0
133759, 0.0
134762, 0.0
135069, 0.0
135767, 0.0
136771, 0.0
137069, 0.0
137774, 0.0
138781, 0.0
139069, 0.0
139785, 0.0
140787, 0.0
141071, 0.0
141792, 0.0
142938, 0.0
143072, 0.0
143943, 0.0
144948, 0.0
145071, 0.0
145952, 0.0
146955, 0.0
147071, 0.0
147979, 0.0
148983, 0.0
149071, 0.0
149987, 0.0
150989, 0.0
151071, 0.0
152000, 0.0
153005, 0.0
153071, 0.0
154016, 0.0
155024, 0.0
155071, 0.0
156028, 0.0
157036, 0.0
157071, 0.0
158039, 0.0
159045, 0.0
159072, 0.0
160049, 0.0
161055, 0.0
161071, 0.0
162057, 0.0
163059, 0.0
163071, 0.0
164093, 0.0
165071, 0.0
165096, 0.0
166097, 0.0
167075, 0.0
167100, 0.0
168105, 0.0
169075, 0.0
169418, 0.0
170421, 0.0
171075, 0.0
Rows returned: 256

-- Proposals in time (per millisecond), all peers
-- export timeline-propose.csv
--
SELECT (ts - (SELECT min(ts) FROM protocol WHERE event = 'PROPOSE'))/1000 as msec, count()
FROM protocol
WHERE event = 'PROPOSE'
GROUP BY msec
-- (msec, avg[req])
Query time: 0.001 seconds
0, 1
1001, 1
1019, 1
2046, 1
3039, 1
3176, 1
4169, 1
5067, 1
5210, 1
6190, 1
7067, 1
7168, 1
8170, 1
9066, 1
9218, 1
10176, 1
11067, 1
11216, 1
12211, 1
13067, 1
13223, 1
14243, 1
15066, 1
15263, 1
16297, 1
17066, 1
17285, 1
18310, 1
19066, 1
19339, 1
20317, 1
21066, 1
21319, 1
22328, 1
23067, 1
23366, 1
24378, 1
25066, 1
25390, 1
26413, 1
27066, 1
27418, 1
28459, 1
29065, 1
29495, 1
30479, 1
31065, 1
31451, 1
32415, 1
33065, 1
33417, 1
34419, 1
35064, 1
35421, 1
36423, 1
37064, 1
37425, 1
38426, 1
39064, 1
39428, 1
40430, 1
41063, 1
41432, 1
42434, 1
43063, 1
43436, 1
44439, 1
45062, 1
45441, 1
46442, 1
47062, 1
47444, 1
48447, 1
49062, 1
49449, 1
50451, 1
51061, 1
51453, 1
52456, 1
53061, 1
53457, 1
54459, 1
55061, 1
55461, 1
56463, 1
57061, 1
57464, 1
58466, 1
59061, 1
59468, 1
60471, 1
61060, 1
61473, 1
62474, 1
63061, 1
63476, 1
64478, 1
65061, 1
65481, 1
66483, 1
67060, 1
67485, 1
68486, 1
69060, 1
69488, 1
70490, 1
71059, 1
71492, 1
72494, 1
73059, 1
73496, 1
74498, 1
75059, 1
75500, 1
76502, 1
77058, 1
77504, 1
78506, 1
79059, 1
79509, 1
80512, 1
81059, 1
81514, 1
82517, 1
83059, 1
83519, 1
84522, 1
85059, 1
85523, 1
86526, 1
87059, 1
87528, 1
88531, 1
89059, 1
89533, 1
90535, 1
91059, 1
91537, 1
92539, 1
93060, 1
93541, 1
94545, 1
95060, 1
95547, 1
96549, 1
97060, 1
97551, 1
98553, 1
99060, 1
99555, 1
100560, 1
101060, 1
101563, 1
102564, 1
103059, 1
103566, 1
104568, 1
105059, 1
105570, 1
106572, 1
107060, 1
107574, 1
108577, 1
109060, 1
109579, 1
110581, 1
111060, 1
111583, 1
112585, 1
113059, 1
113587, 1
114589, 1
115059, 1
115592, 1
116593, 1
117058, 1
117595, 1
118598, 1
119058, 1
119599, 1
120626, 1
121058, 1
121628, 1
122691, 1
123066, 1
123693, 1
124696, 1
125067, 1
125731, 1
126734, 1
127068, 1
127736, 1
128741, 1
129128, 1
129743, 1
130746, 1
131068, 1
131750, 1
132755, 1
133069, 1
133759, 1
134762, 1
135069, 1
135767, 1
136771, 1
137069, 1
137774, 1
138781, 1
139069, 1
139785, 1
140787, 1
141071, 1
141792, 1
142938, 1
143072, 1
143943, 1
144948, 1
145071, 1
145952, 1
146955, 1
147071, 1
147979, 1
148983, 1
149071, 1
149987, 1
150989, 1
151071, 1
152000, 1
153005, 1
153071, 1
154016, 1
155024, 1
155071, 1
156028, 1
157036, 1
157071, 1
158039, 1
159045, 1
159072, 1
160049, 1
161055, 1
161071, 1
162057, 1
163059, 1
163071, 1
164093, 1
165071, 1
165096, 1
166097, 1
167075, 1
167100, 1
168105, 1
169075, 1
169418, 1
170421, 1
171075, 1
Rows returned: 256

-- Proposals in time (per millisecond), all peers
-- export timeline-propose-peer-0.csv
--
SELECT (ts - (SELECT min(ts) FROM protocol WHERE event = 'PROPOSE'))/1000 as msec, count()
FROM protocol
WHERE event = 'PROPOSE' AND nodeId = 0
GROUP BY msec
-- (msec, avg[req])
Query time: 0.001 seconds
0, 1
1001, 1
2046, 1
3176, 1
4169, 1
5210, 1
6190, 1
7168, 1
8170, 1
9218, 1
10176, 1
11216, 1
12211, 1
13223, 1
14243, 1
15263, 1
16297, 1
17285, 1
18310, 1
19339, 1
20317, 1
21319, 1
22328, 1
23366, 1
24378, 1
25390, 1
26413, 1
27418, 1
28459, 1
29495, 1
30479, 1
31451, 1
32415, 1
33417, 1
34419, 1
35421, 1
36423, 1
37425, 1
38426, 1
39428, 1
40430, 1
41432, 1
42434, 1
43436, 1
44439, 1
45441, 1
46442, 1
47444, 1
48447, 1
49449, 1
50451, 1
51453, 1
52456, 1
53457, 1
54459, 1
55461, 1
56463, 1
57464, 1
58466, 1
59468, 1
60471, 1
61473, 1
62474, 1
63476, 1
64478, 1
65481, 1
66483, 1
67485, 1
68486, 1
69488, 1
70490, 1
71492, 1
72494, 1
73496, 1
74498, 1
75500, 1
76502, 1
77504, 1
78506, 1
79509, 1
80512, 1
81514, 1
82517, 1
83519, 1
84522, 1
85523, 1
86526, 1
87528, 1
88531, 1
89533, 1
90535, 1
91537, 1
92539, 1
93541, 1
94545, 1
95547, 1
96549, 1
97551, 1
98553, 1
99555, 1
100560, 1
101563, 1
102564, 1
103566, 1
104568, 1
105570, 1
106572, 1
107574, 1
108577, 1
109579, 1
110581, 1
111583, 1
112585, 1
113587, 1
114589, 1
115592, 1
116593, 1
117595, 1
118598, 1
119599, 1
120626, 1
121628, 1
122691, 1
123693, 1
124696, 1
125731, 1
126734, 1
127736, 1
128741, 1
129743, 1
130746, 1
131750, 1
132755, 1
133759, 1
134762, 1
135767, 1
136771, 1
137774, 1
138781, 1
139785, 1
140787, 1
141792, 1
142938, 1
143943, 1
144948, 1
145952, 1
146955, 1
147979, 1
148983, 1
149987, 1
150989, 1
152000, 1
153005, 1
154016, 1
155024, 1
156028, 1
157036, 1
158039, 1
159045, 1
160049, 1
161055, 1
162057, 1
163059, 1
164093, 1
165096, 1
166097, 1
167100, 1
168105, 1
169418, 1
170421, 1
Rows returned: 170

-- Batch size in time (per millisecond), peer 0
-- export timeline-batch-size-peer-0.csv
--
SELECT (ts - (SELECT min(ts) FROM protocol WHERE event = 'PROPOSE'))/1000 as msec, avg(val)
FROM protocol
WHERE event = 'PROPOSE' AND nodeId = 0
GROUP BY msec
-- (msec, avg[req])
Query time: 0.001 seconds
0, 0.0
1001, 0.0
2046, 118.0
3176, 191.0
4169, 165.0
5210, 185.0
6190, 201.0
7168, 220.0
8170, 165.0
9218, 230.0
10176, 159.0
11216, 217.0
12211, 148.0
13223, 182.0
14243, 167.0
15263, 178.0
16297, 183.0
17285, 187.0
18310, 181.0
19339, 152.0
20317, 192.0
21319, 170.0
22328, 172.0
23366, 200.0
24378, 177.0
25390, 169.0
26413, 159.0
27418, 186.0
28459, 193.0
29495, 182.0
30479, 173.0
31451, 195.0
32415, 0.0
33417, 0.0
34419, 0.0
35421, 0.0
36423, 0.0
37425, 0.0
38426, 0.0
39428, 0.0
40430, 0.0
41432, 0.0
42434, 0.0
43436, 0.0
44439, 0.0
45441, 0.0
46442, 0.0
47444, 0.0
48447, 0.0
49449, 0.0
50451, 0.0
51453, 0.0
52456, 0.0
53457, 0.0
54459, 0.0
55461, 0.0
56463, 0.0
57464, 0.0
58466, 0.0
59468, 0.0
60471, 0.0
61473, 0.0
62474, 0.0
63476, 0.0
64478, 0.0
65481, 0.0
66483, 0.0
67485, 0.0
68486, 0.0
69488, 0.0
70490, 0.0
71492, 0.0
72494, 0.0
73496, 0.0
74498, 0.0
75500, 0.0
76502, 0.0
77504, 0.0
78506, 0.0
79509, 0.0
80512, 0.0
81514, 0.0
82517, 0.0
83519, 0.0
84522, 0.0
85523, 0.0
86526, 0.0
87528, 0.0
88531, 0.0
89533, 0.0
90535, 0.0
91537, 0.0
92539, 0.0
93541, 0.0
94545, 0.0
95547, 0.0
96549, 0.0
97551, 0.0
98553, 0.0
99555, 0.0
100560, 0.0
101563, 0.0
102564, 0.0
103566, 0.0
104568, 0.0
105570, 0.0
106572, 0.0
107574, 0.0
108577, 0.0
109579, 0.0
110581, 0.0
111583, 0.0
112585, 0.0
113587, 0.0
114589, 0.0
115592, 0.0
116593, 0.0
117595, 0.0
118598, 0.0
119599, 0.0
120626, 0.0
121628, 0.0
122691, 0.0
123693, 0.0
124696, 0.0
125731, 0.0
126734, 0.0
127736, 0.0
128741, 0.0
129743, 0.0
130746, 0.0
131750, 0.0
132755, 0.0
133759, 0.0
134762, 0.0
135767, 0.0
136771, 0.0
137774, 0.0
138781, 0.0
139785, 0.0
140787, 0.0
141792, 0.0
142938, 0.0
143943, 0.0
144948, 0.0
145952, 0.0
146955, 0.0
147979, 0.0
148983, 0.0
149987, 0.0
150989, 0.0
152000, 0.0
153005, 0.0
154016, 0.0
155024, 0.0
156028, 0.0
157036, 0.0
158039, 0.0
159045, 0.0
160049, 0.0
161055, 0.0
162057, 0.0
163059, 0.0
164093, 0.0
165096, 0.0
166097, 0.0
167100, 0.0
168105, 0.0
169418, 0.0
170421, 0.0
Rows returned: 170

-- Client slack over time, all clients
-- export client-slack.csv
SELECT (ts - (SELECT min(ts) FROM request WHERE event = 'CLIENT_SLACK'))/1000 as msec, sum(latency)/1000
FROM request
WHERE event = 'CLIENT_SLACK'
GROUP BY msec
-- (msec, slack[ms])
Query time: 0.000 seconds
Rows returned: 0

-- Client slack over time, client 1
-- export client-slack-client-1.csv
SELECT (ts - (SELECT min(ts) FROM request WHERE event = 'CLIENT_SLACK' AND nodeId = -1)) as usec, latency
FROM request
WHERE event = 'CLIENT_SLACK' AND nodeId = -1
-- (usec, slack[us])
Query time: 0.000 seconds
Rows returned: 0

-- Client slack over time, client 2
-- export client-slack-client-2.csv
SELECT (ts - (SELECT min(ts) FROM request WHERE event = 'CLIENT_SLACK' AND nodeId = -2)) as usec, latency
FROM request
WHERE event = 'CLIENT_SLACK' AND nodeId = -2
-- (usec, slack[us])
Query time: 0.000 seconds
Rows returned: 0

-- Message batch size histogram
-- export histogram-msg-batch-size.csv
--
SELECT val, count()
FROM protocol_truncated
WHERE event = 'MSG_BATCH'
GROUP BY val
--(batchsize[req], count[batches])
Query time: 0.000 seconds
Rows returned: 0

-- Message batch sizes over time
-- export timeline-avg-msg-batch.csv
SELECT (ts - (SELECT min(ts) FROM protocol WHERE event = 'MSG_BATCH'))/1000 as msec, avg(val)
from protocol
WHERE event = 'MSG_BATCH'
GROUP BY msec
-- (msec, avgbatch[req])
Query time: 0.001 seconds
0, 1.0
5, 1.0
6, 1.0
8, 2.0
15, 1.0
1021, 1.0
23481, 1.0
23660, 2.0
24482, 2.0
25494, 1.0
25518, 1.0
26497, 2.0
46676, 1.0
47678, 1.0
48478, 1.0
49061, 2.0
49478, 2.0
70526, 1.0
70728, 2.0
71488, 1.0
72534, 1.0
72730, 1.0
73058, 2.0
92779, 1.0
93539, 1.0
93545, 1.0
93777, 1.0
95589, 1.0
96593, 1.0
114586, 1.0
114823, 1.0
116596, 2.0
116630, 1.0
117637, 1.0
119636, 1.0
128754, 1.0
134772, 1.0
134901, 1.0
135910, 1.0
138052, 1.0
139070, 1.0
142067, 1.0
154015, 1.0
155025, 2.0
156030, 1.0
161067, 1.0
162057, 1.0
165074, 1.0
233434, 3.0
233436, 3.0
233479, 3.0
233481, 3.0
234081, 2.0
234851, 1.0
234913, 3.0
234922, 6.0
234925, 3.0
235721, 4.0
235787, 6.0
235855, 4.0
235862, 5.0
235870, 2.0
235891, 5.0
236446, 1.0
236526, 4.0
236650, 6.0
237179, 1.0
237205, 4.0
237238, 6.0
237280, 2.0
237341, 4.0
237530, 8.0
238113, 2.0
238168, 1.0
238226, 5.0
238271, 4.0
238310, 10.0
238548, 2.0
238663, 4.0
238673, 6.0
238846, 8.0
238906, 3.0
239064, 1.0
239095, 4.0
239164, 2.0
239180, 1.0
239493, 10.0
239695, 7.0
239705, 4.0
239710, 1.0
239784, 2.0
240143, 4.0
240231, 2.0
240275, 2.0
240487, 5.0
240615, 2.0
240696, 1.0
241149, 1.0
Rows returned: 98

-- Bandwidths between all pairs of peers.
-- The output of this query is meant for further processing by another scripts that formats the data as a table.
-- export bandwidths-list.csv
SELECT nodeId as sender, seqNr as receiver, val as bandwidth
FROM protocol
WHERE event = 'BANDWIDTH'
-- (sender, receiver, bandwidth[kB/s])
Query time: 0.000 seconds
Rows returned: 0

-- Leaders in epochs.
-- export epoch-leaders.csv
SELECT seqNr as epoch, avg(val) as leaders
FROM protocol
WHERE event = 'NEW_EPOCH'
group by epoch
Query time: 0.000 seconds
0, 4.0
1, 4.0
Rows returned: 2

-- View changes, from view 0 to view 1 only.
-- export timeline-view-change-first.csv
SELECT (ts - (SELECT min(ts) FROM protocol WHERE event = 'NEW_EPOCH'))/1000 as msec, count()
from protocol
WHERE event = 'VIEW_CHANGE' AND val = 1
GROUP BY msec
Query time: 0.001 seconds
234100, 1
234132, 1
234336, 1
234402, 1
235083, 1
235099, 1
235219, 1
235232, 1
Rows returned: 8

-- Cascading view changes.
-- export timeline-view-change-cascade.csv
SELECT (ts - (SELECT min(ts) FROM protocol WHERE event = 'NEW_EPOCH'))/1000 as msec, count()
from protocol
WHERE event = 'VIEW_CHANGE' AND val > 1
GROUP BY msec
Query time: 0.000 seconds
Rows returned: 0

-- All view changes.
-- export timeline-view-change-all.csv
SELECT (ts - (SELECT min(ts) FROM protocol WHERE event = 'NEW_EPOCH'))/1000 as msec, count()
from protocol
WHERE event = 'VIEW_CHANGE'
GROUP BY msec
Query time: 0.001 seconds
234100, 1
234132, 1
234336, 1
234402, 1
235083, 1
235099, 1
235219, 1
235232, 1
Rows returned: 8

Total running time: 0.017 seconds
