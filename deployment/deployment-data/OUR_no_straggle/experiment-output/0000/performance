SELECT *
FROM ethereum
Query time: 0.000 seconds
Rows returned: 0

Total running time: 0.000 seconds
-- Truncate request table to include only rows with timestamps between:
--   the first response obtained by the last client to obtain a response
--   and
--   the last response obtained by the client first to finish obtaining responses
-- Then, cut off 5 seconds from each end.
-- We could use a view here too, but a physical table is much faster to access.
-- The script processing this file normally makes sure that
-- changes made by this script to the database are rolled back and are not persisted.
CREATE TABLE request_truncated as
SELECT *
FROM request
WHERE
  ts - 5000000 >= (SELECT max(t)
    FROM (SELECT min(ts) as t
      FROM request
      WHERE event = 'REQ_FINISHED'
      GROUP BY nodeId))
  AND ts + 5000000 <= (SELECT min(t)
    FROM (SELECT max(ts) as t
      FROM request
      WHERE event = 'REQ_SEND'
      GROUP BY nodeId))
Query time: 0.003 seconds
Rows returned: 0

-- Do the same as above with the protocol table.
-- Note that the truncation times are still taken from the request table.
CREATE TABLE protocol_truncated as
SELECT *
FROM protocol
WHERE
  ts - 5000000 >= (SELECT max(t)
    FROM (SELECT min(ts) as t
      FROM request
      WHERE event = 'REQ_FINISHED'
      GROUP BY nodeId))
  AND ts + 5000000 <= (SELECT min(t)
    FROM (SELECT max(ts) as t
      FROM request
      WHERE event = 'REQ_SEND'
      GROUP BY nodeId))
Query time: 0.001 seconds
Rows returned: 0

-- Do the same as above with the CPU usage table.
-- Note that the truncation times are still taken from the request table.
CREATE TABLE cpuusage_truncated as
SELECT *
FROM cpuusage
WHERE
            ts - 5000000 >= (SELECT max(t)
                             FROM (SELECT min(ts) as t
                                   FROM request
                                   WHERE event = 'REQ_FINISHED'
                                   GROUP BY nodeId))
  AND ts + 5000000 <= (SELECT min(t)
                       FROM (SELECT max(ts) as t
                             FROM request
                             WHERE event = 'REQ_SEND'
                             GROUP BY nodeId))
Query time: 0.001 seconds
Rows returned: 0

-- Total CPU usage (average over all peers), truncated data
-- export cpu-total.val
SELECT avg(total)
from cpuusage_truncated
WHERE event = 'CPU_USAGE'
-- (totalcpu[%])
Query time: 0.000 seconds
63.75
Rows returned: 1

-- System CPU usage (average over all peers), truncated data
-- (This is the CPU usage reported under "System" in /proc/stat)
-- export cpu-system.val
SELECT avg(system)
from cpuusage_truncated
WHERE event = 'CPU_USAGE'
-- (systemcpu[%])
Query time: 0.000 seconds
12.96875
Rows returned: 1

-- End-to-end average request latency, all requests
-- export latency-avg-shortened-raw.val
--
SELECT avg(r2.latency)  / 1000.0
FROM request r1 JOIN request r2 ON r1.nodeId = r2.nodeId
                                AND r1.clSn = r2.clSn
                                AND r1.event = 'REQ_SEND'
                                AND r2.event = 'REQ_FINISHED'
   WHERE r1.ts - 30000000 < (SELECT min(r1.ts)
                            FROM request r1
                            WHERE event = 'REQ_SEND')
-- (avg[ms])
Query time: 0.003 seconds
993.3357518796993
Rows returned: 1

-- End-to-end average request latency, all requests
-- export latency-95pctile-shortened-raw.val
--
SELECT r2.latency  / 1000.0
FROM request r1 JOIN request r2 ON r1.nodeId = r2.nodeId
                                AND r1.clSn = r2.clSn
                                AND r1.event = 'REQ_SEND'
                                AND r2.event = 'REQ_FINISHED'
   WHERE r1.ts - 30000000 < (SELECT min(r1.ts)
                            FROM request r1
                            WHERE event = 'REQ_SEND')
ORDER BY r2.latency ASC
LIMIT 1
    OFFSET (SELECT count()
            FROM request r1 JOIN request r2 ON r1.nodeId = r2.nodeId
                                AND r1.clSn = r2.clSn
                                AND r1.event = 'REQ_SEND'
                                AND r2.event = 'REQ_FINISHED'
            WHERE r1.ts - 30000000 < (SELECT min(r1.ts)
                            FROM request r1
                            WHERE event = 'REQ_SEND'))* 95 / 100;
Query time: 0.007 seconds
1586.052
Rows returned: 1

-- (latency[ms])
Query time: 0.000 seconds
Rows returned: 0

-- End-to-end average request latency, all requests
-- export latency-avg-raw.val
--
SELECT avg(latency) / 1000.0
FROM request
WHERE event = 'REQ_FINISHED'
-- (avg[ms])
Query time: 0.000 seconds
993.3357518796993
Rows returned: 1

-- Latency standard deviation, all requests
-- export latency-stdev-raw.val
--
SELECT stdev(latency) / 1000.0
FROM request
WHERE event = 'REQ_FINISHED'
-- (stdev[ms])
Query time: 0.002 seconds
353.4059024981227
Rows returned: 1

-- End-to-end average request latency, truncated requests
-- export latency-avg-trunc.val
--
SELECT avg(latency) / 1000.0
FROM request_truncated
WHERE event = 'REQ_FINISHED'
-- (avg[ms])
Query time: 0.000 seconds
855.1065305555557
Rows returned: 1

-- Latency standard deviation, truncated requests
-- export latency-stdev-trunc.val
--
SELECT stdev(latency) / 1000.0
FROM request_truncated
WHERE event = 'REQ_FINISHED'
-- (stdev[ms])
Query time: 0.000 seconds
329.7438137872027
Rows returned: 1

-- 95th percentile request latency, all requests
-- export latency-95pctile-raw.val
--
SELECT latency / 1000.0
FROM request
WHERE event = 'REQ_FINISHED'
ORDER BY latency ASC
LIMIT 1
    OFFSET (SELECT count()
            FROM request
            WHERE event = 'REQ_FINISHED') * 95 / 100;
-- (latency[ms])
Query time: 0.001 seconds
1586.052
Rows returned: 1

-- 95th percentile request latency, truncated requests
-- export latency-95pctile-trunc.val
--
SELECT latency / 1000.0
FROM request_truncated
WHERE event = 'REQ_FINISHED'
ORDER BY latency ASC
LIMIT 1
    OFFSET (SELECT count()
            FROM request_truncated
            WHERE event = 'REQ_FINISHED') * 95 / 100;
-- (latency[ms])
Query time: 0.000 seconds
1422.6
Rows returned: 1

-- End-to-end average request latency, all requests
-- export latency-avg-raw-nowm.val
--
SELECT avg(latency) / 1000.0
FROM request
WHERE event = 'ENOUGH_RESP'
-- (avg[ms])
Query time: 0.000 seconds
990.7932249373434
Rows returned: 1

-- Latency standard deviation, all requests
-- export latency-stdev-raw-nowm.val
--
SELECT stdev(latency) / 1000.0
FROM request
WHERE event = 'ENOUGH_RESP'
-- (stdev[ms])
Query time: 0.002 seconds
352.7874282585233
Rows returned: 1

-- End-to-end average request latency, truncated requests
-- export latency-avg-trunc-nowm.val
--
SELECT avg(latency) / 1000.0
FROM request_truncated
WHERE event = 'ENOUGH_RESP'
-- (avg[ms])
Query time: 0.000 seconds
852.291786111111
Rows returned: 1

-- Latency standard deviation, truncated requests
-- export latency-stdev-trunc-nowm.val
--
SELECT stdev(latency) / 1000.0
FROM request_truncated
WHERE event = 'ENOUGH_RESP'
-- (stdev[ms])
Query time: 0.000 seconds
328.5829133431569
Rows returned: 1

-- 95th percentile request latency, all requests
-- export latency-95pctile-raw-nowm.val
--
SELECT latency / 1000.0
FROM request
WHERE event = 'ENOUGH_RESP'
ORDER BY latency ASC
LIMIT 1
    OFFSET (SELECT count()
            FROM request
            WHERE event = 'ENOUGH_RESP') * 95 / 100;
-- (latency[ms])
Query time: 0.001 seconds
1585.715
Rows returned: 1

-- 95th percentile request latency, truncated requests
-- export latency-95pctile-trunc-nowm.val
--
SELECT latency / 1000.0
FROM request_truncated
WHERE event = 'ENOUGH_RESP'
ORDER BY latency ASC
LIMIT 1
    OFFSET (SELECT count()
            FROM request_truncated
            WHERE event = 'ENOUGH_RESP') * 95 / 100;
-- (latency[ms])
Query time: 0.000 seconds
1419.825
Rows returned: 1

-- Average client slack per request, all clients
-- export client-slack-avg-raw.val
--
SELECT avg(latency)
FROM request
WHERE event = 'CLIENT_SLACK'
-- (avg[us])
Query time: 0.000 seconds
-5666137.556390977
Rows returned: 1

-- Average client slack, truncated requests
-- export client-slack-avg-trunc.val
--
SELECT avg(latency)
FROM request_truncated
WHERE event = 'CLIENT_SLACK'
-- (avg[us])
Query time: 0.000 seconds
-6258971.228287841
Rows returned: 1

-- Client slack standard deviation, all requests
-- export client-slack-stdev-raw.val
--
SELECT stdev(latency)
FROM request
WHERE event = 'CLIENT_SLACK'
-- (avg[us])
Query time: 0.002 seconds
3305870.130962513
Rows returned: 1

-- Client slack standard deviation, all requests
-- export client-slack-stdev-trunc.val
--
SELECT stdev(latency)
FROM request_truncated
WHERE event = 'CLIENT_SLACK'
-- (avg[us])
Query time: 0.000 seconds
816807.0213173854
Rows returned: 1

-- 1st percentile client slack, all requests
-- export client-slack-1pctile-raw.val
--
SELECT latency
FROM request
WHERE event = 'CLIENT_SLACK'
ORDER BY latency ASC
LIMIT 1
    OFFSET (SELECT count()
            FROM request
            WHERE event = 'CLIENT_SLACK') * 1 / 100;
-- (slack[us])
Query time: 0.001 seconds
-11072049
Rows returned: 1

-- 1st percentile client slack, truncated requests
-- export client-slack-1pctile-trunc.val
--
SELECT latency
FROM request_truncated
WHERE event = 'CLIENT_SLACK'
ORDER BY latency ASC
LIMIT 1
    OFFSET (SELECT count()
            FROM request
            WHERE event = 'CLIENT_SLACK') * 1 / 100;
-- (slack[us])
Query time: 0.001 seconds
-7385808
Rows returned: 1

-- Experiment duration in seconds
-- export duration-raw.val
--
SELECT (max(ts) - min(ts))/1000000.0
FROM request
WHERE event = 'REQ_FINISHED'
-- (duration[sec])
Query time: 0.000 seconds
14.314059
Rows returned: 1

-- Experiment duration in seconds, truncated data
-- export duration-trunc.val
--
SELECT (max(ts) - min(ts))/1000000.0
FROM request_truncated
WHERE event = 'REQ_FINISHED'
-- (duration[sec])
Query time: 0.000 seconds
3.081144
Rows returned: 1

-- Total number of requests (good for sanity checks whether everything has been delivered)
-- export nreq-raw.val
--
SELECT count()
FROM request
WHERE event = 'REQ_FINISHED'
-- (count[req])
Query time: 0.000 seconds
1596
Rows returned: 1

-- Number of requests, using truncated request data
-- export nreq-trunc.val
--
SELECT count()
FROM request_truncated
WHERE event = 'REQ_FINISHED'
-- (count[req])
Query time: 0.000 seconds
360
Rows returned: 1

-- Throughput (without cutting off start and end)
-- export throughput-raw.val
--
-- !!!!! Multiplying by 10 for sampling
-- TODO parametrize the sumpling multiplier
SELECT 10 * 1000000.0 * count() / (max(ts) - min(ts))
FROM request
WHERE event = 'REQ_FINISHED'
-- (throughput[req/sec])
Query time: 0.000 seconds
1114.9877194162746
Rows returned: 1

-- Throughput, using truncated request data
-- export throughput-trunc.val
--
-- !!!!! Multiplying by 10 for sampling
-- TODO parametrize the sumpling multiplier
SELECT 10 * 1000000.0 * count() / (max(ts) - min(ts))
FROM request_truncated
WHERE event = 'REQ_FINISHED'
-- (throughput[req/sec])
Query time: 0.000 seconds
1168.3971927310115
Rows returned: 1

-- Average batch size
-- export batch-size-avg-trunc.val
--
SELECT avg(val)
FROM protocol_truncated
WHERE event = 'PROPOSE'
-- (avg-batch-size[req])
Query time: 0.000 seconds
253.75
Rows returned: 1

-- 10th percentile batch size
-- export batch-size-10pctile-trunc.val
--
SELECT val
FROM protocol_truncated
WHERE event = 'PROPOSE'
ORDER BY val ASC
LIMIT 1
OFFSET (SELECT count() from protocol_truncated WHERE event = 'PROPOSE') * 10 / 100
-- (10th-pctile[req])
Query time: 0.000 seconds
231
Rows returned: 1

-- 90th percentile batch size
-- export batch-size-90pctile-trunc.val
--
SELECT val
FROM protocol_truncated
WHERE event = 'PROPOSE'
ORDER BY val ASC
LIMIT 1
    OFFSET (SELECT count() from protocol_truncated WHERE event = 'PROPOSE') * 90 / 100
-- (90th-pctile[req])
Query time: 0.000 seconds
288
Rows returned: 1

-- average proposal rate
-- export propose-rate-raw.val
SELECT count(*) / ((max(ts) - min(ts))/1000000.0)
FROM protocol
WHERE event = 'PROPOSE'
-- (rate[batches/sec])
Query time: 0.000 seconds
4.131620153412492
Rows returned: 1

-- average proposal rate, truncated data
-- export propose-rate-trunc.val
SELECT count(*) / ((max(ts) - min(ts))/1000000.00)
FROM protocol_truncated
WHERE event = 'PROPOSE'
-- (rate[batches/sec])
Query time: 0.000 seconds
5.306728932286139
Rows returned: 1

-- average commit rate
-- export commit-rate-raw.val
SELECT count(*) / ((max(ts) - min(ts))/1000000.0)
FROM protocol
WHERE event = 'COMMIT'
-- (rate[batches/sec])
Query time: 0.000 seconds
27.41549106883263
Rows returned: 1

-- average commit rate, truncated data
-- export commit-rate-trunc.val
SELECT count(*) / ((max(ts) - min(ts))/1000000.0)
FROM protocol_truncated
WHERE event = 'COMMIT'
-- (rate[batches/sec])
Query time: 0.000 seconds
18.476683250589687
Rows returned: 1

-- average message batch, truncated data
-- export msg-batch-avg-trunc.val
SELECT avg(val)
FROM protocol_truncated
where event = 'MSG_BATCH'
-- (batchsize[msg])
Query time: 0.000 seconds
None
Rows returned: 1

-- minimal number of epochs
-- this is the number of epochs the node with the fewest epochs went through (ideally same for all nodes)
-- export epochs-min.val
SELECT min(lastEpoch)
FROM (SELECT max(seqNr) as lastEpoch
      FROM protocol
      WHERE event = 'NEW_EPOCH'
      GROUP BY nodeId)
Query time: 0.000 seconds
0
Rows returned: 1

-- maximal number of epochs
-- this is the number of epochs the node with the fewest epochs went through (ideally same for all nodes)
-- export epochs-max.val
SELECT max(lastEpoch)
FROM (SELECT max(seqNr) as lastEpoch
      FROM protocol
      WHERE event = 'NEW_EPOCH'
      GROUP BY nodeId)
Query time: 0.000 seconds
0
Rows returned: 1

-- maximal number of epochs
-- this is the number of epochs the node with the fewest epochs went through (ideally same for all nodes)
-- export epochs-avg.val
SELECT avg(lastEpoch)
FROM (SELECT max(seqNr) as lastEpoch
      FROM protocol
      WHERE event = 'NEW_EPOCH'
      GROUP BY nodeId)
Query time: 0.000 seconds
0.0
Rows returned: 1

-- Total number of view changes at all nodes
-- export viewchanges-total.val
SELECT count()
FROM protocol
WHERE event = 'VIEW_CHANGE'
Query time: 0.000 seconds
0
Rows returned: 1

-- Average number of view changes (should be the total number of actual view changes, if every node completes each view change)
-- export viewchanges-avg.val
SELECT count()*1.0 / (SELECT count() from (SELECT DISTINCT nodeId FROM protocol))
FROM protocol
WHERE event = 'VIEW_CHANGE'
Query time: 0.000 seconds
0.0
Rows returned: 1

Total running time: 0.031 seconds
-- Truncate request table to include only rows with timestamps between:
--   the first response obtained by the last client to obtain a response
--   and
--   the last request obtained by the client first to finish sending requests
-- Then, cut off 5 second from each end.
-- We could use a view here too, but a physical table is much faster to access.
-- The script processing this file normally makes sure that
-- changes made by this script to the database are rolled back and are not persisted.
CREATE TABLE request_truncated as
SELECT *
FROM request
WHERE
  ts - 5000000 >= (SELECT max(t)
    FROM (SELECT min(ts) as t
      FROM request
      WHERE event = 'REQ_FINISHED'
      GROUP BY nodeId))
  AND ts + 5000000 <= (SELECT min(t)
    FROM (SELECT max(ts) as t
      FROM request
      WHERE event = 'REQ_SEND'
      GROUP BY nodeId))
Query time: 0.003 seconds
Rows returned: 0

-- Do the same as above with the protocol table.
-- Note that the truncation times are still taken from the request table.
CREATE TABLE protocol_truncated as
SELECT *
FROM protocol
WHERE
  ts - 5000000 >= (SELECT max(t)
    FROM (SELECT min(ts) as t
      FROM request
      WHERE event = 'REQ_FINISHED'
      GROUP BY nodeId))
  AND ts + 5000000 <= (SELECT min(t)
    FROM (SELECT max(ts) as t
      FROM request
      WHERE event = 'REQ_SEND'
      GROUP BY nodeId))
Query time: 0.001 seconds
Rows returned: 0

-- Do the same as above with the CPU usage table.
-- Note that the truncation times are still taken from the request table.
CREATE TABLE cpuusage_truncated as
SELECT *
FROM cpuusage
WHERE
  ts - 5000000 >= (SELECT max(t)
    FROM (SELECT min(ts) as t
      FROM request
      WHERE event = 'REQ_FINISHED'
      GROUP BY nodeId))
  AND ts + 5000000 <= (SELECT min(t)
    FROM (SELECT max(ts) as t
      FROM request
      WHERE event = 'REQ_SEND'
      GROUP BY nodeId))
Query time: 0.001 seconds
Rows returned: 0

-- Total CPU usage in time (peer 0)
-- export timeline-cpu-usage-total-peer-0.csv
SELECT (ts - (SELECT min(ts) FROM cpuusage WHERE event = 'CPU_USAGE' AND nodeId = 0))/1000 as msec, total
from cpuusage
WHERE event = 'CPU_USAGE' AND nodeId = 0
-- (msec, totalcpu[%])
Query time: 0.000 seconds
0, 28
500, 6
1001, 7
1503, 4
2004, 9
2505, 5
3006, 49
3507, 49
4008, 89
4509, 46
5011, 67
5512, 44
6014, 69
6514, 48
7015, 81
7517, 47
8018, 68
8519, 46
9020, 83
9521, 43
10022, 74
10523, 48
11024, 81
11525, 47
12027, 79
12528, 55
13036, 81
13537, 51
14038, 72
14539, 50
15053, 78
15554, 56
16055, 79
16556, 56
17060, 73
17561, 45
18065, 62
18566, 21
19066, 22
19568, 7
20069, 18
Rows returned: 41

-- Total CPU usage in time (peer 1)
-- export timeline-cpu-usage-total-peer-1.csv
SELECT (ts - (SELECT min(ts) FROM cpuusage WHERE event = 'CPU_USAGE' AND nodeId = 1))/1000 as msec, total
from cpuusage
WHERE event = 'CPU_USAGE' AND nodeId = 1
-- (msec, totalcpu[%])
Query time: 0.000 seconds
0, 27
501, 6
1003, 7
1504, 4
2006, 9
2507, 5
3007, 51
3508, 49
4010, 89
4511, 46
5012, 67
5513, 44
6015, 68
6515, 48
7016, 81
7518, 46
8019, 69
8520, 46
9021, 84
9523, 43
10024, 74
10525, 48
11027, 82
11528, 46
12029, 78
12530, 55
13032, 82
13532, 50
14033, 72
14534, 50
15035, 78
15536, 56
16036, 78
16537, 56
17038, 72
17539, 45
18040, 61
18542, 22
19043, 22
19544, 7
20046, 18
Rows returned: 41

-- Total CPU usage in time (average over all peers)
-- export timeline-cpu-usage-total.csv
SELECT (ts - (SELECT min(ts) FROM cpuusage WHERE event = 'CPU_USAGE'))/1000 as msec, avg(total)
from cpuusage
WHERE event = 'CPU_USAGE'
GROUP BY msec
-- (msec, totalcpu[%])
Query time: 0.000 seconds
0, 29.0
1, 28.0
4, 28.0
16, 27.0
500, 6.0
502, 6.0
505, 6.0
518, 6.0
1001, 7.0
1003, 7.0
1006, 7.0
1019, 7.0
1502, 4.0
1504, 4.0
1507, 4.0
1521, 4.0
2004, 9.0
2006, 9.0
2009, 9.0
2023, 9.0
2505, 5.0
2507, 5.0
2510, 5.0
2523, 5.0
3006, 49.0
3007, 49.0
3012, 49.0
3024, 51.0
3507, 49.0
3508, 49.0
3513, 49.0
3525, 49.0
4009, 89.0
4010, 89.0
4014, 89.0
4027, 89.0
4509, 46.0
4511, 46.0
4515, 46.0
4527, 46.0
5011, 67.0
5012, 67.0
5017, 67.0
5028, 67.0
5512, 44.0
5514, 44.0
5518, 44.0
5529, 44.0
6014, 69.0
6015, 69.0
6019, 68.0
6031, 68.0
6515, 48.0
6516, 48.0
6520, 48.0
6532, 48.0
7017, 81.0
7018, 81.0
7022, 81.0
7033, 81.0
7519, 47.0
7523, 46.0
7534, 46.0
8019, 68.0
8020, 68.0
8025, 68.0
8036, 69.0
8520, 46.0
8521, 47.0
8526, 47.0
8537, 46.0
9021, 83.0
9023, 83.0
9028, 84.0
9038, 84.0
9523, 43.0
9524, 43.0
9529, 42.0
9540, 43.0
10024, 74.0
10025, 74.0
10031, 74.0
10041, 74.0
10525, 48.0
10526, 48.0
10532, 48.0
10542, 48.0
11025, 81.0
11027, 81.0
11035, 82.0
11044, 82.0
11527, 47.0
11529, 47.0
11536, 46.0
11545, 46.0
12028, 79.0
12030, 79.0
12037, 79.0
12046, 78.0
12529, 55.0
12530, 55.0
12538, 55.0
12547, 55.0
13031, 81.0
13038, 81.0
13042, 81.0
13048, 82.0
13532, 52.0
13539, 51.0
13544, 50.0
13549, 50.0
14033, 72.0
14040, 72.0
14045, 72.0
14050, 72.0
14534, 49.0
14540, 50.0
14546, 50.0
14551, 50.0
15035, 77.0
15052, 78.0
15055, 78.0
15058, 78.0
15536, 57.0
15552, 56.0
15556, 56.0
15560, 56.0
16039, 77.0
16053, 78.0
16056, 79.0
16061, 79.0
16540, 57.0
16554, 56.0
16557, 56.0
16563, 56.0
17041, 72.0
17055, 72.0
17061, 73.0
17063, 73.0
17542, 45.0
17556, 45.0
17562, 45.0
17564, 45.0
18044, 60.0
18057, 61.0
18066, 61.5
18545, 24.0
18559, 22.0
18567, 21.0
19046, 22.0
19060, 22.0
19068, 22.0
19547, 6.0
19560, 7.0
19569, 6.0
19570, 7.0
20049, 18.0
20062, 18.0
20070, 18.0
Rows returned: 159

-- System CPU usage in time (peer 0). This is the CPU usage reported under "System" in /proc/stat
-- export timeline-cpu-usage-system-peer-0.csv
SELECT (ts - (SELECT min(ts) FROM cpuusage WHERE event = 'CPU_USAGE' AND nodeId = 0))/1000 as msec, system
from cpuusage
WHERE event = 'CPU_USAGE' AND nodeId = 0
-- (msec, systemcpu[%])
Query time: 0.000 seconds
0, 14
500, 2
1001, 3
1503, 1
2004, 3
2505, 1
3006, 14
3507, 12
4008, 21
4509, 9
5011, 13
5512, 9
6014, 14
6514, 10
7015, 14
7517, 8
8018, 14
8519, 12
9020, 18
9521, 9
10022, 15
10523, 9
11024, 15
11525, 12
12027, 15
12528, 11
13036, 13
13537, 7
14038, 11
14539, 9
15053, 12
15554, 8
16055, 14
16556, 8
17060, 10
17561, 7
18065, 12
18566, 2
19066, 2
19568, 2
20069, 6
Rows returned: 41

-- System CPU usage in time (peer 1). This is the CPU usage reported under "System" in /proc/stat
-- export timeline-cpu-usage-system-peer-1.csv
SELECT (ts - (SELECT min(ts) FROM cpuusage WHERE event = 'CPU_USAGE' AND nodeId = 1))/1000 as msec, system
from cpuusage
WHERE event = 'CPU_USAGE' AND nodeId = 1
-- (msec, systemcpu[%])
Query time: 0.000 seconds
0, 13
501, 2
1003, 3
1504, 1
2006, 3
2507, 1
3007, 14
3508, 12
4010, 22
4511, 9
5012, 13
5513, 9
6015, 14
6515, 10
7016, 14
7518, 8
8019, 14
8520, 11
9021, 18
9523, 9
10024, 15
10525, 9
11027, 16
11528, 11
12029, 15
12530, 11
13032, 13
13532, 8
14033, 11
14534, 9
15035, 12
15536, 8
16036, 14
16537, 8
17038, 10
17539, 6
18040, 12
18542, 3
19043, 2
19544, 2
20046, 5
Rows returned: 41

-- System CPU usage in time (average over all peers). This is the CPU usage reported under "System" in /proc/stat
-- export timeline-cpu-usage-system.csv
SELECT (ts - (SELECT min(ts) FROM cpuusage WHERE event = 'CPU_USAGE'))/1000 as msec, avg(system)
from cpuusage
WHERE event = 'CPU_USAGE'
GROUP BY msec
-- (msec, systemcpu[%])
Query time: 0.000 seconds
0, 14.0
1, 14.0
4, 14.0
16, 13.0
500, 2.0
502, 2.0
505, 2.0
518, 2.0
1001, 3.0
1003, 3.0
1006, 3.0
1019, 3.0
1502, 1.0
1504, 1.0
1507, 1.0
1521, 1.0
2004, 3.0
2006, 3.0
2009, 3.0
2023, 3.0
2505, 1.0
2507, 1.0
2510, 1.0
2523, 1.0
3006, 14.0
3007, 14.0
3012, 14.0
3024, 14.0
3507, 12.0
3508, 12.0
3513, 12.0
3525, 12.0
4009, 21.0
4010, 21.0
4014, 21.0
4027, 22.0
4509, 9.0
4511, 9.0
4515, 9.0
4527, 9.0
5011, 13.0
5012, 13.0
5017, 13.0
5028, 13.0
5512, 9.0
5514, 9.0
5518, 9.0
5529, 9.0
6014, 14.0
6015, 14.0
6019, 14.0
6031, 14.0
6515, 10.0
6516, 10.0
6520, 10.0
6532, 10.0
7017, 14.0
7018, 13.0
7022, 13.0
7033, 14.0
7519, 8.0
7523, 8.0
7534, 8.0
8019, 14.0
8020, 14.0
8025, 14.0
8036, 14.0
8520, 12.0
8521, 12.0
8526, 12.0
8537, 11.0
9021, 18.0
9023, 19.0
9028, 18.0
9038, 18.0
9523, 9.0
9524, 8.0
9529, 8.0
9540, 9.0
10024, 15.0
10025, 15.0
10031, 15.0
10041, 15.0
10525, 9.0
10526, 9.0
10532, 9.0
10542, 9.0
11025, 15.0
11027, 15.0
11035, 16.0
11044, 16.0
11527, 12.0
11529, 12.0
11536, 11.0
11545, 11.0
12028, 15.0
12030, 15.0
12037, 15.0
12046, 15.0
12529, 11.0
12530, 11.0
12538, 11.0
12547, 11.0
13031, 13.0
13038, 13.0
13042, 13.0
13048, 13.0
13532, 8.0
13539, 7.0
13544, 7.0
13549, 8.0
14033, 11.0
14040, 11.0
14045, 11.0
14050, 11.0
14534, 9.0
14540, 9.0
14546, 9.0
14551, 9.0
15035, 12.0
15052, 12.0
15055, 12.0
15058, 12.0
15536, 8.0
15552, 8.0
15556, 8.0
15560, 8.0
16039, 14.0
16053, 14.0
16056, 14.0
16061, 14.0
16540, 8.0
16554, 8.0
16557, 8.0
16563, 8.0
17041, 10.0
17055, 10.0
17061, 10.0
17063, 10.0
17542, 6.0
17556, 6.0
17562, 7.0
17564, 6.0
18044, 11.0
18057, 12.0
18066, 12.0
18545, 4.0
18559, 3.0
18567, 2.0
19046, 2.0
19060, 2.0
19068, 2.0
19547, 2.0
19560, 2.0
19569, 2.0
19570, 2.0
20049, 5.0
20062, 5.0
20070, 6.0
Rows returned: 159

-- Batches committed in time (peer 0)
-- export timeline-commit-peer-0.csv
--
SELECT (ts - (SELECT min(ts) FROM protocol WHERE event = 'COMMIT' AND nodeId = 0))/1000 as msec, count()
FROM protocol
WHERE event = 'COMMIT' AND nodeId = 0
GROUP BY msec
-- (msec, count[req])
Query time: 0.000 seconds
0, 1
5, 2
6, 1
991, 1
992, 1
993, 2
1001, 2
1002, 1
2392, 2
2414, 1
2415, 1
2417, 1
2421, 1
2426, 1
2429, 1
2431, 1
3247, 1
3248, 1
3266, 1
3268, 1
4113, 1
4173, 1
4216, 1
4235, 1
5275, 1
5303, 1
5363, 1
5368, 1
6183, 1
6265, 1
6286, 1
6298, 1
7233, 1
7299, 1
7416, 1
7457, 1
8225, 1
8321, 1
8328, 1
8377, 1
9240, 1
9390, 1
9458, 1
9459, 1
10213, 1
10360, 1
10365, 1
10457, 2
11317, 1
11318, 1
11423, 1
11424, 1
11482, 1
11483, 1
11553, 1
12230, 1
12329, 1
12422, 1
12423, 1
12433, 1
12434, 1
13257, 2
13386, 1
13387, 1
13526, 1
13527, 1
13543, 1
13544, 1
14319, 1
14320, 1
14470, 1
14471, 1
14564, 1
14621, 2
15267, 1
15268, 1
15339, 2
15442, 1
15447, 1
15448, 1
15473, 2
16263, 1
16264, 1
16396, 1
16397, 1
16515, 2
16525, 1
16526, 1
17174, 2
17245, 1
17246, 2
17356, 2
17357, 1
17379, 3
17380, 1
18177, 1
18178, 1
18179, 2
18248, 2
18249, 2
18359, 1
18360, 2
18361, 1
18380, 3
18381, 1
Rows returned: 105

-- Batches committed in time (all peers)
-- export timeline-commit-all.csv
--
SELECT (ts - (SELECT min(ts) FROM protocol WHERE event = 'COMMIT'))/1000 as msec, count()
FROM protocol
WHERE event = 'COMMIT'
GROUP BY msec
-- (msec, count[req])
Query time: 0.000 seconds
0, 2
1, 3
2, 2
3, 2
6, 2
7, 2
8, 2
10, 1
989, 1
991, 2
993, 2
994, 5
995, 5
996, 1
1002, 1
1003, 3
1004, 5
1005, 3
2347, 1
2353, 2
2359, 2
2360, 1
2361, 2
2362, 2
2363, 1
2365, 1
2367, 3
2368, 3
2393, 1
2394, 2
2397, 2
2399, 2
2402, 1
2403, 1
2405, 1
2406, 1
2416, 2
2419, 1
2422, 1
2427, 1
2430, 1
2432, 1
3238, 1
3243, 1
3244, 1
3247, 1
3249, 2
3251, 1
3260, 1
3266, 1
3267, 1
3268, 1
3270, 3
3274, 1
3290, 1
4114, 1
4115, 1
4116, 1
4142, 1
4155, 1
4172, 1
4175, 2
4216, 2
4217, 2
4219, 1
4223, 1
4226, 1
4237, 1
5260, 1
5261, 1
5276, 1
5304, 2
5306, 1
5321, 1
5337, 1
5338, 2
5353, 1
5364, 1
5369, 1
5370, 1
5371, 1
5386, 1
6182, 2
6184, 1
6185, 1
6265, 1
6266, 1
6270, 1
6285, 1
6287, 1
6288, 1
6295, 1
6299, 1
6300, 1
6301, 1
6302, 1
6313, 1
7233, 1
7235, 1
7249, 1
7271, 1
7299, 1
7300, 1
7323, 1
7345, 1
7417, 3
7418, 1
7443, 1
7445, 1
7448, 1
7458, 1
8226, 1
8243, 1
8245, 1
8248, 1
8286, 2
8290, 1
8322, 1
8328, 1
8330, 1
8331, 1
8346, 1
8371, 1
8372, 1
8374, 1
8378, 1
9241, 2
9242, 1
9271, 1
9390, 2
9391, 1
9396, 1
9436, 3
9444, 1
9446, 1
9460, 2
9476, 1
10214, 1
10219, 2
10240, 1
10361, 1
10362, 2
10365, 1
10366, 1
10368, 1
10393, 1
10405, 1
10455, 1
10456, 1
10458, 3
10459, 1
10473, 1
10474, 1
11296, 1
11297, 1
11302, 1
11303, 1
11305, 2
11319, 2
11424, 1
11426, 5
11463, 2
11468, 1
11469, 1
11479, 1
11480, 1
11481, 1
11482, 1
11483, 1
11484, 1
11535, 1
11536, 1
11539, 1
11554, 1
12231, 3
12232, 1
12330, 2
12331, 1
12333, 1
12414, 1
12415, 4
12416, 1
12419, 1
12420, 2
12421, 1
12422, 1
12423, 1
12424, 2
12434, 1
12435, 1
13258, 2
13259, 3
13260, 1
13265, 1
13266, 1
13385, 2
13386, 4
13387, 1
13388, 1
13523, 2
13524, 2
13527, 1
13528, 3
13531, 2
13532, 3
13533, 1
13545, 2
14313, 1
14314, 1
14321, 2
14324, 1
14326, 1
14330, 1
14331, 1
14451, 2
14452, 1
14455, 1
14472, 2
14473, 2
14523, 2
14526, 1
14565, 1
14622, 3
14623, 3
14626, 1
14627, 1
15268, 3
15269, 3
15290, 2
15340, 5
15341, 1
15351, 1
15352, 1
15443, 4
15444, 3
15445, 3
15448, 1
15449, 1
15473, 1
15474, 3
15475, 2
15509, 1
15510, 1
16264, 1
16265, 3
16268, 1
16269, 1
16306, 1
16307, 1
16396, 1
16397, 1
16398, 1
16401, 2
16409, 2
16410, 1
16502, 1
16503, 2
16504, 1
16506, 1
16507, 1
16516, 1
16517, 1
16526, 4
16527, 3
16528, 1
17175, 4
17176, 3
17177, 1
17246, 3
17247, 6
17248, 3
17354, 1
17355, 4
17356, 1
17357, 3
17358, 3
17379, 1
17380, 10
17381, 5
18179, 4
18180, 5
18181, 4
18182, 2
18183, 1
18246, 1
18247, 3
18248, 5
18249, 4
18250, 2
18251, 1
18356, 1
18357, 3
18358, 5
18359, 3
18360, 1
18361, 2
18362, 1
18381, 3
18382, 7
18383, 6
Rows returned: 300

-- Client 0 request sending in time
-- export timeline-submit-client-1.csv
--
SELECT (ts - (SELECT min(ts) FROM request WHERE event = 'REQ_SEND' AND nodeId = -1))/1000 as msec, count()
FROM request
WHERE event = 'REQ_SEND' AND nodeId = -1
GROUP BY msec
-- (msec, count[req])
Query time: 0.000 seconds
Rows returned: 0

-- Client 1 request sending in time
-- export timeline-submit-client-2.csv
--
SELECT (ts - (SELECT min(ts) FROM request WHERE event = 'REQ_SEND' AND nodeId = -2))/1000 as msec, count()
FROM request
WHERE event = 'REQ_SEND' AND nodeId = -2
GROUP BY msec
-- (msec, count[req])
Query time: 0.000 seconds
Rows returned: 0

-- Client request sending in time (all clients)
-- export timeline-submit-all.csv
--
SELECT (ts - (SELECT min(ts) FROM request WHERE event = 'REQ_SEND'))/1000 as msec, count()
FROM request
WHERE event = 'REQ_SEND'
GROUP BY msec
-- (msec, count[req])
Query time: 0.002 seconds
0, 1
6, 1
17, 1
24, 1
30, 1
35, 1
41, 1
57, 1
64, 1
73, 1
81, 1
90, 1
96, 1
105, 1
112, 1
119, 1
127, 1
133, 1
139, 1
147, 1
153, 1
159, 1
165, 1
171, 1
176, 1
182, 1
188, 1
194, 1
199, 1
204, 1
211, 1
217, 1
224, 1
229, 1
235, 1
241, 1
261, 1
267, 1
274, 1
280, 1
285, 1
293, 1
299, 1
304, 1
311, 1
317, 1
323, 1
328, 1
334, 1
341, 1
346, 1
352, 1
358, 1
364, 1
370, 1
376, 1
382, 1
389, 1
396, 1
401, 1
406, 1
413, 1
419, 1
424, 1
431, 1
436, 1
442, 1
448, 1
454, 1
459, 1
464, 1
471, 1
477, 1
483, 1
490, 1
495, 1
501, 1
506, 1
511, 1
517, 1
522, 1
528, 1
534, 1
540, 1
545, 1
551, 1
556, 1
561, 1
570, 1
576, 1
583, 1
588, 1
593, 1
598, 1
604, 1
609, 1
615, 1
621, 1
626, 1
632, 1
637, 1
642, 1
648, 1
654, 1
659, 1
664, 1
670, 1
675, 1
684, 1
691, 1
697, 1
702, 1
707, 1
712, 1
718, 1
723, 1
728, 1
733, 1
739, 1
744, 1
750, 1
755, 1
761, 1
768, 1
775, 1
781, 1
786, 1
792, 1
797, 1
802, 1
807, 1
814, 1
820, 1
826, 1
831, 1
836, 1
842, 1
847, 1
852, 1
857, 1
864, 1
870, 1
875, 1
880, 1
885, 1
891, 1
896, 1
907, 1
913, 1
921, 1
935, 1
940, 1
945, 1
957, 1
965, 1
972, 1
982, 1
994, 1
1000, 1
1006, 1
1014, 1
1021, 1
1029, 1
1035, 1
1044, 1
1052, 1
1077, 1
1084, 1
1108, 1
1130, 1
1163, 1
1187, 1
1199, 1
1228, 1
1233, 1
1239, 1
1245, 1
1251, 1
1260, 1
1268, 1
1273, 1
1278, 1
1284, 1
1290, 1
1300, 1
1307, 1
1317, 1
1332, 1
1361, 1
1372, 1
1382, 1
1390, 1
1404, 1
1414, 1
1429, 1
1437, 1
1451, 1
1457, 1
1467, 1
1475, 1
1487, 1
1504, 1
1518, 1
1526, 1
1540, 1
1549, 1
1560, 1
1576, 1
1602, 1
1614, 1
1625, 1
1636, 1
1645, 1
1664, 1
1677, 1
1696, 1
1703, 1
1710, 1
1719, 1
1725, 1
1739, 1
1750, 1
1764, 1
1769, 1
1786, 1
1798, 1
1811, 1
1819, 1
1829, 1
1835, 1
1847, 1
1859, 1
1870, 1
1897, 1
1918, 1
1928, 1
1944, 1
1980, 1
2009, 1
2056, 1
2086, 1
2102, 1
2113, 1
2119, 1
2135, 1
2142, 1
2210, 1
2311, 1
2319, 1
2328, 1
2340, 1
2346, 1
2353, 1
2362, 1
2376, 1
2385, 1
2399, 1
2412, 1
2428, 1
2434, 1
2441, 1
2457, 1
2464, 1
2473, 1
2487, 1
2496, 1
2507, 1
2521, 1
2530, 1
2536, 1
2545, 1
2560, 1
2572, 1
2578, 1
2585, 1
2611, 1
2621, 1
2633, 1
2644, 1
2653, 1
2664, 1
2673, 1
2696, 1
2704, 1
2727, 1
2735, 1
2746, 1
2811, 1
2849, 1
2855, 1
2864, 1
2870, 1
2875, 1
2882, 1
2887, 1
2892, 1
2898, 1
2905, 1
2914, 1
2925, 1
2932, 1
2939, 1
2946, 1
2951, 1
2956, 1
2961, 1
2989, 1
2999, 1
3005, 1
3011, 1
3047, 1
3092, 1
3117, 1
3124, 1
3143, 1
3161, 1
3170, 1
3176, 1
3186, 1
3210, 1
3217, 1
3223, 1
3234, 1
3242, 1
3250, 1
3260, 1
3268, 1
3279, 1
3290, 1
3305, 1
3313, 1
3335, 1
3354, 1
3427, 1
3434, 1
3439, 1
3444, 1
3450, 1
3458, 1
3464, 1
3471, 1
3477, 1
3483, 1
3488, 1
3494, 1
3498, 1
3503, 1
3510, 1
3515, 1
3520, 1
3524, 1
3534, 1
3539, 1
3544, 1
3549, 1
3554, 1
3559, 1
3564, 1
3569, 1
3574, 1
3579, 1
3584, 1
3589, 1
3593, 1
3599, 1
3604, 1
3610, 1
3615, 1
3620, 1
3625, 1
3630, 1
3635, 1
3641, 1
3646, 1
3651, 1
3656, 1
3661, 1
3666, 1
3671, 1
3676, 1
3681, 1
3686, 1
3691, 1
3697, 1
3702, 1
3707, 1
3711, 1
3716, 1
3722, 1
3728, 1
3735, 1
3740, 1
3746, 1
3752, 1
3756, 1
3761, 1
3767, 1
3773, 1
3779, 1
3785, 1
3791, 1
3798, 1
3804, 1
3810, 1
3816, 1
3821, 1
3827, 1
3832, 1
3837, 1
3842, 1
3847, 1
3852, 1
3857, 1
3862, 1
3867, 1
3872, 1
3877, 1
3883, 1
3889, 1
3894, 1
3900, 1
3905, 1
3910, 1
3915, 1
3921, 1
3926, 1
3931, 1
3937, 1
3942, 1
3951, 1
3958, 1
3966, 1
3980, 1
3986, 1
4004, 1
4009, 1
4021, 1
4043, 1
4056, 1
4074, 1
4084, 1
4093, 1
4116, 1
4123, 1
4128, 1
4133, 1
4139, 1
4144, 1
4154, 1
4165, 1
4175, 1
4197, 1
4206, 1
4247, 1
4253, 1
4286, 1
4292, 1
4302, 1
4316, 1
4321, 1
4326, 1
4330, 1
4347, 1
4360, 1
4366, 1
4377, 1
4386, 1
4401, 1
4413, 1
4418, 1
4432, 1
4445, 1
4457, 1
4466, 1
4474, 1
4496, 1
4506, 1
4523, 1
4534, 1
4549, 1
4556, 1
4565, 1
4573, 1
4578, 1
4583, 1
4593, 1
4603, 1
4616, 1
4634, 1
4650, 1
4667, 1
4681, 1
4691, 1
4700, 1
4709, 1
4718, 1
4728, 1
4737, 1
4742, 1
4763, 1
4775, 1
4789, 1
4800, 1
4809, 1
4819, 1
4847, 1
4962, 1
4967, 1
4975, 1
4980, 1
5000, 1
5010, 1
5017, 1
5027, 1
5043, 1
5059, 1
5065, 1
5071, 1
5076, 1
5085, 1
5104, 1
5110, 1
5141, 1
5155, 1
5162, 1
5177, 1
5211, 1
5218, 1
5233, 1
5245, 1
5261, 1
5269, 1
5279, 1
5298, 1
5308, 1
5318, 1
5327, 1
5336, 1
5359, 1
5365, 1
5370, 1
5382, 1
5399, 1
5409, 1
5420, 1
5429, 1
5436, 1
5441, 1
5450, 1
5467, 1
5489, 1
5497, 1
5505, 1
5519, 1
5572, 1
5577, 1
5618, 1
5625, 1
5631, 1
5637, 1
5643, 1
5648, 1
5654, 1
5659, 1
5665, 1
5670, 1
5676, 1
5681, 1
5686, 1
5691, 1
5697, 1
5703, 1
5707, 1
5712, 1
5720, 1
5725, 1
5731, 1
5736, 1
5741, 1
5746, 1
5751, 1
5756, 1
5762, 1
5767, 1
5772, 1
5777, 1
5781, 1
5787, 1
5792, 1
5797, 1
5804, 1
5810, 1
5815, 1
5820, 1
5826, 1
5832, 1
5837, 1
5842, 1
5847, 1
5852, 1
5857, 1
5862, 1
5867, 1
5873, 1
5878, 1
5883, 1
5888, 1
5893, 1
5898, 1
5904, 1
5909, 1
5914, 1
5919, 1
5923, 1
5928, 1
5933, 1
5938, 1
5943, 1
5948, 1
5954, 1
5958, 1
5964, 1
5969, 1
5974, 1
5978, 1
5984, 1
6006, 1
6025, 1
6031, 1
6040, 1
6049, 1
6056, 1
6062, 1
6068, 1
6082, 1
6090, 1
6096, 1
6104, 1
6112, 1
6134, 1
6160, 1
6175, 1
6183, 1
6189, 1
6194, 1
6204, 1
6227, 1
6243, 1
6269, 1
6282, 1
6287, 1
6307, 1
6311, 1
6329, 1
6335, 1
6353, 1
6366, 1
6373, 1
6380, 1
6393, 1
6399, 1
6406, 1
6415, 1
6424, 1
6433, 1
6439, 1
6449, 1
6453, 1
6460, 1
6468, 1
6473, 1
6479, 1
6486, 1
6496, 1
6509, 1
6520, 1
6529, 1
6539, 1
6558, 1
6578, 1
6593, 1
6601, 1
6607, 1
6626, 1
6632, 1
6645, 1
6670, 1
6697, 1
6717, 1
6730, 1
6753, 1
6859, 1
6864, 1
6869, 1
6874, 1
6879, 1
6887, 1
6892, 1
6899, 1
6905, 1
6911, 1
6917, 1
6924, 1
6929, 1
6935, 1
6940, 1
6945, 1
6950, 1
6955, 1
6962, 1
6968, 1
6973, 1
6984, 1
6989, 1
6995, 1
7001, 1
7006, 1
7010, 1
7015, 1
7020, 1
7032, 1
7037, 1
7042, 1
7047, 1
7056, 1
7077, 1
7087, 1
7094, 1
7126, 1
7151, 1
7168, 1
7181, 1
7193, 1
7227, 1
7247, 1
7257, 1
7279, 1
7286, 1
7293, 1
7310, 1
7321, 1
7331, 1
7339, 1
7354, 1
7366, 1
7373, 1
7380, 1
7394, 1
7399, 1
7407, 1
7416, 1
7428, 1
7435, 1
7444, 1
7456, 1
7465, 1
7473, 1
7483, 1
7501, 1
7511, 1
7518, 1
7527, 1
7543, 1
7549, 1
7561, 1
7567, 1
7573, 1
7580, 1
7589, 1
7595, 1
7602, 1
7610, 1
7625, 1
7713, 1
7719, 1
7725, 1
7732, 1
7739, 1
7745, 1
7751, 1
7756, 1
7762, 1
7766, 1
7773, 1
7778, 1
7782, 1
7787, 1
7792, 1
7797, 1
7802, 1
7806, 1
7811, 1
7816, 1
7822, 1
7827, 1
7832, 1
7837, 1
7842, 1
7847, 1
7852, 1
7858, 1
7863, 1
7868, 1
7872, 1
7878, 1
7883, 1
7887, 1
7892, 1
7897, 1
7902, 1
7907, 1
7911, 1
7916, 1
7921, 1
7926, 1
7935, 1
7940, 1
7946, 1
7951, 1
7956, 1
7961, 1
7967, 1
7974, 1
7982, 1
7987, 1
7992, 1
7999, 1
8004, 1
8009, 1
8014, 1
8019, 1
8024, 1
8031, 1
8037, 1
8059, 1
8065, 1
8074, 1
8081, 1
8093, 1
8106, 1
8111, 1
8116, 1
8120, 1
8130, 1
8138, 1
8172, 1
8197, 1
8208, 1
8215, 1
8220, 1
8262, 1
8287, 1
8337, 1
8346, 1
8351, 1
8360, 1
8379, 1
8389, 1
8401, 1
8414, 1
8428, 1
8437, 1
8454, 1
8463, 1
8477, 1
8487, 1
8502, 1
8509, 1
8517, 1
8525, 1
8531, 1
8539, 1
8546, 1
8552, 1
8592, 1
8607, 1
8614, 1
8625, 1
8633, 1
8638, 1
8647, 1
8655, 1
8669, 1
8674, 1
8684, 1
8698, 1
8708, 1
8715, 1
8772, 1
8830, 1
8835, 1
8840, 1
8846, 1
8852, 1
8858, 1
8864, 1
8870, 1
8876, 1
8881, 1
8886, 1
8891, 1
8896, 1
8901, 1
8906, 1
8911, 1
8916, 1
8921, 1
8926, 1
8932, 1
8937, 1
8942, 1
8947, 1
8952, 1
8957, 1
8970, 1
8976, 1
8986, 1
8990, 1
8995, 1
9001, 1
9006, 1
9011, 1
9017, 1
9023, 1
9028, 1
9032, 1
9037, 1
9042, 1
9046, 1
9068, 1
9073, 1
9078, 1
9084, 1
9091, 1
9099, 1
9107, 1
9127, 1
9137, 1
9145, 1
9151, 1
9163, 1
9176, 1
9182, 1
9189, 1
9202, 1
9232, 1
9239, 1
9253, 1
9268, 1
9279, 1
9285, 1
9332, 1
9348, 1
9359, 1
9372, 1
9380, 1
9393, 1
9407, 1
9424, 1
9439, 1
9445, 1
9471, 1
9480, 1
9487, 1
9494, 1
9503, 1
9511, 1
9518, 1
9525, 1
9533, 1
9545, 1
9550, 1
9554, 1
9559, 1
9576, 1
9582, 1
9587, 1
9593, 1
9599, 1
9605, 1
9611, 1
9615, 1
9620, 1
9625, 1
9630, 1
9635, 1
9640, 1
9645, 1
9650, 1
9655, 1
9661, 1
9666, 1
9670, 1
9675, 1
9680, 1
9684, 1
9689, 1
9694, 1
9699, 1
9703, 1
9708, 1
9721, 1
9725, 1
9730, 1
9735, 1
9740, 1
9746, 1
9753, 1
9758, 1
9763, 1
9768, 1
9772, 1
9777, 1
9782, 1
9791, 1
9796, 1
9800, 1
9805, 1
9810, 1
9815, 1
9821, 1
9826, 1
9831, 1
9839, 1
9843, 1
9848, 1
9852, 1
9857, 1
9862, 1
9866, 1
9871, 1
9876, 1
9881, 1
9887, 1
9891, 1
9896, 1
9901, 1
9905, 1
9910, 1
9915, 1
9920, 1
9924, 1
9929, 1
9934, 1
9938, 1
9943, 1
9948, 1
9953, 1
9957, 1
9962, 1
9967, 1
9972, 1
9976, 1
9981, 1
9986, 1
9990, 1
9995, 1
9999, 1
10006, 1
10011, 1
10016, 1
10021, 1
10026, 1
10031, 1
10036, 1
10040, 1
10046, 1
10050, 1
10055, 1
10061, 1
10066, 1
10072, 1
10083, 1
10089, 1
10095, 1
10101, 1
10111, 1
10119, 1
10127, 1
10137, 1
10141, 1
10150, 1
10167, 1
10173, 1
10178, 1
10182, 1
10187, 1
10192, 1
10196, 1
10212, 1
10225, 1
10235, 1
10243, 1
10253, 1
10266, 1
10276, 1
10292, 1
10301, 1
10309, 1
10319, 1
10351, 1
10360, 1
10368, 1
10397, 1
10427, 1
10433, 1
10461, 1
10468, 1
10476, 1
10486, 1
10492, 1
10571, 1
10579, 1
10586, 1
10597, 1
10604, 1
10610, 1
10617, 1
10627, 1
10637, 1
10655, 1
10664, 1
10671, 1
10682, 1
10693, 1
10708, 1
10733, 1
10738, 1
10744, 1
10754, 1
10760, 1
10767, 1
10773, 1
10799, 1
10815, 1
10829, 1
10837, 1
10846, 1
10854, 1
10863, 1
10877, 1
10883, 1
10894, 1
10902, 1
10916, 1
10946, 1
10958, 1
10982, 1
11004, 1
11018, 1
11035, 1
11052, 1
11061, 1
11073, 1
11102, 1
11138, 1
11143, 1
11156, 1
11172, 1
11176, 1
11199, 1
11213, 1
11253, 1
11269, 1
11276, 1
11290, 1
11299, 1
11319, 1
11373, 1
11443, 1
11447, 1
11453, 1
11466, 1
11479, 1
11486, 1
11493, 1
11501, 1
11516, 1
11538, 1
11544, 1
11558, 1
11589, 1
11594, 1
11604, 1
11612, 1
11619, 1
11624, 1
11629, 1
11637, 1
11641, 1
11651, 1
11658, 1
11665, 1
11673, 1
11678, 1
11684, 1
11688, 1
11693, 1
11700, 1
11704, 1
11712, 1
11718, 1
11723, 1
11727, 1
11732, 1
11736, 1
11740, 1
11745, 1
11750, 1
11754, 1
11759, 1
11763, 1
11768, 1
11774, 1
11778, 1
11782, 1
11789, 1
11796, 1
11800, 1
11805, 1
11810, 1
11815, 1
11823, 1
11828, 1
11832, 1
11837, 1
11842, 1
11846, 1
11851, 1
11855, 1
11861, 1
11866, 1
11871, 1
11875, 1
11881, 1
11885, 1
11890, 1
11897, 1
11903, 1
11909, 1
11916, 1
11922, 1
11926, 1
11931, 1
11935, 1
11940, 1
11944, 1
11949, 1
11953, 1
11957, 1
11962, 1
11966, 1
11971, 1
11975, 1
11981, 1
11985, 1
11989, 1
11994, 1
11999, 1
12003, 1
12007, 1
12012, 1
12016, 1
12021, 1
12025, 1
12029, 1
12035, 1
12040, 1
12044, 1
12048, 1
12056, 1
12061, 1
12065, 1
12070, 1
12074, 1
12081, 1
12088, 1
12092, 1
12097, 1
12107, 1
12125, 1
12133, 1
12138, 1
12146, 1
12155, 1
12179, 1
12200, 1
12219, 1
12223, 1
12232, 1
12239, 1
12250, 1
12255, 1
12273, 1
12278, 1
12284, 1
12298, 1
12303, 1
12307, 1
12312, 1
12392, 1
12426, 1
12431, 1
12479, 1
12491, 1
12501, 1
12510, 1
12518, 1
12526, 1
12538, 1
12546, 1
12560, 1
12567, 1
12578, 1
12587, 1
12599, 1
12605, 1
12612, 1
12618, 1
12624, 1
12645, 1
12659, 1
12667, 1
12676, 1
12683, 1
12692, 1
12698, 1
12703, 1
12708, 1
12713, 1
12718, 1
12723, 1
12736, 1
12742, 1
12746, 1
12751, 1
12756, 1
12761, 1
12765, 1
12770, 1
12774, 1
12784, 1
12789, 1
12794, 1
12799, 1
12806, 1
12811, 1
12816, 1
12820, 1
12825, 1
12830, 1
12836, 1
12841, 1
12846, 1
12850, 1
12855, 1
12860, 1
12864, 1
12869, 1
12874, 1
12879, 1
12883, 1
12889, 1
12894, 1
12899, 1
12903, 1
12908, 1
12912, 1
12916, 1
12921, 1
12925, 1
12930, 1
12934, 1
12939, 1
12943, 1
12948, 1
12952, 1
12957, 1
12961, 1
12967, 1
12971, 1
12977, 1
12982, 1
12987, 1
12991, 1
12995, 1
13000, 1
13004, 1
13009, 1
13014, 1
13019, 1
13024, 1
13029, 1
13033, 1
13050, 1
13055, 1
13060, 1
13065, 1
13069, 1
13075, 1
13081, 1
13086, 1
13090, 1
13095, 1
13099, 1
13108, 1
13113, 1
13117, 1
13122, 1
13127, 1
13132, 1
13136, 1
13142, 1
13148, 1
13152, 1
13157, 1
13171, 1
13175, 1
13180, 1
13190, 1
13197, 1
13207, 1
13220, 1
13231, 1
13249, 1
13300, 1
13314, 1
13318, 1
13352, 1
13362, 1
13366, 1
13395, 1
13400, 1
13404, 1
13411, 1
13454, 1
13459, 1
13465, 1
13484, 1
13490, 1
13497, 1
13503, 1
13509, 1
13514, 1
13542, 1
13548, 1
13564, 1
13573, 1
13583, 1
13618, 1
13686, 1
13700, 1
13716, 1
13731, 1
13736, 1
13746, 1
13751, 1
13760, 1
13767, 1
13777, 1
13787, 1
13795, 1
13803, 1
13815, 1
13823, 1
13833, 1
13846, 1
13857, 1
13863, 1
13876, 1
13883, 1
13893, 1
13898, 1
13917, 1
13926, 1
13934, 1
13947, 1
13953, 1
13958, 1
13966, 1
13973, 1
13984, 1
13994, 1
14002, 1
14007, 1
14012, 1
14017, 1
14023, 1
14051, 1
14060, 1
14071, 1
14078, 1
14116, 1
14127, 1
14133, 1
14138, 1
14146, 1
14150, 1
14159, 1
14166, 1
14174, 1
14179, 1
14206, 1
14213, 1
14218, 1
14223, 1
14227, 1
14240, 1
14253, 1
14257, 1
14262, 1
14269, 1
14274, 1
14278, 1
14283, 1
14287, 1
14292, 1
14299, 1
14307, 1
14311, 1
14327, 1
14331, 1
14339, 1
14381, 1
14387, 1
14398, 1
14406, 1
14412, 1
14421, 1
14436, 1
14441, 1
14452, 1
14466, 1
14473, 1
14480, 1
14582, 1
14592, 1
14598, 1
14607, 1
14611, 1
14618, 1
14625, 1
14637, 1
14646, 1
14652, 1
14668, 1
14684, 1
14698, 1
14722, 1
14737, 1
14746, 1
14754, 1
14758, 1
14763, 1
14769, 1
14777, 1
14789, 1
14808, 1
14813, 1
14817, 1
14824, 1
14830, 1
14836, 1
14840, 1
14845, 1
14849, 1
14856, 1
14861, 1
14865, 1
14870, 1
14875, 1
14880, 1
14884, 1
14889, 1
14893, 1
14898, 1
14904, 1
14910, 1
14915, 1
14919, 1
14924, 1
14929, 1
14934, 1
14938, 1
14944, 1
14948, 1
14952, 1
14956, 1
14961, 1
14965, 1
14969, 1
14974, 1
14979, 1
14984, 1
14988, 1
14993, 1
Rows returned: 1596

-- Latency histogram (by millisecond buckets) for client 0
-- export histogram-latency-client-1.csv
--
SELECT latency/1000 as lat, count()
FROM request
WHERE event = 'REQ_FINISHED' AND nodeId = -1
GROUP BY lat
--(latency[ms], count[req])
Query time: 0.000 seconds
Rows returned: 0

-- Latency histogram (by millisecond buckets), all clients combined
-- export histogram-latency-all.csv
--
SELECT latency/1000 as lat, count()
FROM request
WHERE event = 'REQ_FINISHED'
GROUP BY lat
--(latency[ms], count[req])
Query time: 0.001 seconds
147, 1
175, 1
185, 1
207, 1
219, 1
222, 1
241, 1
249, 1
256, 1
260, 1
265, 1
269, 1
281, 2
286, 1
294, 1
295, 2
303, 1
306, 2
315, 1
320, 1
323, 1
327, 1
329, 1
331, 2
332, 1
333, 2
338, 1
340, 1
341, 1
344, 3
347, 1
349, 1
351, 2
353, 1
357, 1
363, 1
364, 2
365, 1
368, 1
373, 3
376, 1
378, 1
379, 1
381, 1
383, 1
384, 1
394, 1
395, 1
399, 1
400, 1
404, 2
407, 1
409, 2
415, 1
416, 1
419, 2
422, 2
428, 2
433, 1
436, 1
438, 1
440, 1
441, 1
444, 1
445, 1
450, 1
451, 2
454, 1
456, 1
464, 1
465, 1
466, 1
467, 1
470, 1
474, 1
477, 2
478, 1
484, 2
487, 1
489, 2
491, 3
493, 1
494, 1
496, 1
497, 1
499, 3
500, 2
503, 1
504, 1
510, 2
511, 1
513, 1
514, 1
515, 1
518, 1
520, 1
521, 1
522, 1
524, 2
525, 1
526, 2
527, 1
530, 3
533, 1
534, 3
535, 2
536, 3
537, 2
538, 2
539, 3
540, 1
543, 2
545, 1
546, 1
549, 1
552, 1
553, 1
556, 1
557, 2
558, 1
560, 2
561, 1
562, 2
563, 1
564, 3
566, 2
567, 1
568, 2
570, 2
571, 4
572, 1
573, 1
575, 1
577, 2
578, 1
579, 2
580, 3
581, 3
582, 1
583, 1
585, 1
587, 1
588, 1
590, 2
592, 1
593, 2
594, 1
595, 1
596, 2
597, 1
598, 1
601, 4
602, 2
603, 2
604, 1
605, 1
608, 2
612, 2
613, 2
614, 3
615, 1
618, 2
619, 3
620, 3
621, 2
622, 2
624, 2
625, 2
626, 5
627, 1
628, 2
629, 2
630, 3
632, 3
633, 2
634, 4
635, 2
638, 3
639, 1
640, 2
641, 1
644, 2
645, 4
646, 2
647, 3
648, 3
649, 2
650, 1
651, 2
654, 1
655, 1
656, 1
657, 2
658, 1
659, 1
660, 1
661, 1
663, 2
664, 1
665, 3
666, 2
667, 4
668, 1
669, 4
671, 3
672, 1
673, 2
675, 1
676, 2
678, 2
679, 1
680, 2
681, 3
682, 4
684, 2
685, 3
686, 2
687, 2
688, 1
689, 2
690, 1
694, 1
695, 3
696, 3
697, 2
698, 3
699, 1
700, 2
701, 1
702, 1
704, 1
706, 1
707, 3
709, 1
710, 1
711, 1
712, 1
713, 1
714, 2
716, 1
717, 3
718, 4
720, 1
721, 1
722, 2
723, 4
724, 2
725, 1
726, 2
727, 2
729, 1
731, 3
732, 1
733, 5
735, 1
736, 2
738, 1
739, 3
740, 2
741, 2
742, 2
743, 4
744, 1
745, 2
746, 1
748, 4
749, 1
750, 4
751, 1
753, 1
754, 2
755, 2
756, 2
757, 3
758, 2
759, 3
761, 3
762, 3
763, 4
764, 2
765, 2
767, 3
768, 3
769, 3
770, 3
771, 1
772, 3
773, 4
774, 1
777, 2
779, 3
780, 2
781, 2
782, 2
783, 1
785, 2
787, 1
788, 3
789, 1
790, 1
791, 1
793, 1
794, 2
795, 1
797, 3
798, 5
800, 5
801, 2
802, 3
803, 3
804, 2
805, 2
806, 4
808, 2
809, 1
810, 1
811, 1
812, 2
813, 2
816, 1
819, 3
820, 3
822, 1
823, 2
826, 2
827, 1
828, 3
829, 1
830, 4
831, 2
833, 2
835, 2
836, 1
837, 3
838, 2
841, 2
842, 1
844, 3
845, 1
846, 1
847, 3
848, 1
849, 2
850, 3
851, 3
852, 2
853, 2
854, 3
856, 4
857, 2
858, 2
859, 1
861, 1
862, 2
863, 3
866, 4
867, 1
868, 2
869, 2
870, 3
871, 1
872, 2
873, 1
875, 2
877, 1
882, 4
883, 3
885, 1
886, 3
887, 1
888, 1
891, 1
892, 3
893, 4
894, 3
895, 2
896, 4
900, 2
901, 2
902, 2
903, 2
904, 2
905, 2
906, 2
907, 2
910, 4
911, 3
912, 2
914, 1
915, 1
916, 1
918, 1
919, 1
921, 3
922, 1
923, 4
924, 1
925, 2
926, 1
929, 1
930, 1
931, 2
932, 1
934, 2
935, 1
936, 3
937, 1
939, 1
940, 1
941, 2
942, 3
944, 1
945, 4
946, 1
947, 1
949, 2
950, 1
951, 1
952, 3
953, 2
954, 4
955, 1
956, 2
957, 2
958, 1
959, 1
960, 3
962, 2
963, 1
965, 2
966, 3
967, 1
969, 1
970, 2
971, 1
972, 2
976, 3
977, 1
978, 2
979, 1
980, 3
982, 4
983, 3
984, 2
986, 3
987, 3
988, 3
990, 3
991, 1
992, 3
993, 3
994, 2
996, 2
997, 2
998, 1
999, 1
1000, 2
1001, 4
1002, 3
1006, 3
1008, 1
1009, 4
1010, 1
1011, 1
1012, 1
1013, 2
1015, 1
1016, 4
1018, 2
1020, 2
1022, 3
1023, 3
1024, 1
1025, 3
1027, 3
1029, 1
1030, 1
1031, 2
1032, 4
1033, 1
1034, 2
1035, 1
1036, 1
1037, 2
1038, 2
1040, 1
1041, 1
1043, 2
1045, 1
1046, 1
1048, 1
1049, 3
1050, 3
1052, 1
1055, 1
1056, 1
1057, 1
1058, 1
1059, 2
1062, 3
1063, 2
1064, 2
1065, 4
1066, 2
1067, 1
1068, 1
1069, 3
1070, 1
1071, 2
1072, 3
1073, 2
1074, 1
1075, 2
1076, 1
1077, 1
1081, 2
1082, 1
1083, 2
1084, 2
1085, 1
1086, 3
1087, 1
1088, 1
1090, 2
1091, 3
1092, 1
1094, 1
1095, 2
1096, 2
1097, 1
1098, 2
1100, 2
1101, 2
1102, 2
1103, 4
1104, 3
1105, 5
1107, 1
1108, 1
1111, 2
1113, 1
1114, 3
1116, 2
1117, 3
1118, 3
1120, 3
1121, 2
1122, 3
1123, 1
1125, 1
1126, 2
1127, 1
1129, 1
1130, 1
1131, 3
1133, 2
1134, 2
1135, 1
1136, 1
1138, 2
1140, 1
1141, 1
1142, 3
1143, 1
1144, 1
1145, 1
1146, 3
1147, 4
1148, 1
1149, 3
1150, 1
1151, 1
1152, 2
1154, 2
1155, 2
1156, 2
1157, 2
1158, 1
1159, 1
1160, 1
1161, 1
1162, 2
1165, 1
1167, 1
1168, 1
1169, 3
1172, 1
1173, 4
1174, 1
1175, 2
1176, 1
1177, 4
1178, 1
1179, 2
1180, 1
1181, 5
1182, 3
1183, 3
1184, 2
1185, 3
1186, 2
1187, 1
1188, 2
1191, 2
1192, 2
1193, 1
1194, 2
1195, 1
1196, 1
1197, 2
1198, 1
1199, 1
1200, 1
1201, 1
1202, 1
1204, 3
1205, 1
1206, 1
1213, 1
1214, 2
1216, 3
1218, 3
1219, 3
1220, 2
1221, 1
1222, 1
1223, 1
1224, 3
1226, 2
1227, 3
1230, 2
1231, 1
1232, 2
1233, 1
1234, 2
1238, 1
1240, 2
1241, 2
1242, 1
1243, 1
1244, 1
1245, 3
1246, 1
1247, 3
1248, 3
1251, 2
1253, 1
1254, 1
1255, 3
1256, 5
1257, 3
1259, 2
1260, 1
1265, 2
1267, 2
1268, 2
1269, 2
1270, 2
1271, 3
1272, 1
1273, 1
1276, 1
1277, 2
1278, 1
1280, 1
1282, 2
1283, 2
1284, 2
1285, 2
1286, 5
1287, 1
1288, 1
1290, 3
1291, 1
1293, 1
1294, 3
1298, 1
1299, 2
1300, 1
1301, 1
1302, 1
1303, 2
1304, 1
1305, 1
1308, 2
1309, 2
1310, 2
1311, 2
1312, 1
1315, 1
1317, 1
1318, 2
1319, 2
1321, 1
1322, 1
1323, 2
1324, 1
1325, 5
1327, 1
1328, 3
1329, 1
1332, 1
1333, 3
1335, 1
1336, 1
1337, 1
1339, 3
1340, 1
1343, 3
1344, 3
1345, 1
1347, 2
1348, 1
1351, 2
1352, 2
1353, 2
1355, 1
1357, 2
1358, 1
1360, 1
1361, 4
1362, 1
1363, 2
1364, 1
1367, 2
1368, 1
1370, 1
1372, 2
1373, 1
1374, 1
1379, 3
1380, 1
1381, 1
1382, 2
1385, 2
1387, 1
1390, 1
1391, 2
1392, 3
1393, 1
1394, 3
1395, 1
1397, 1
1400, 2
1403, 3
1404, 2
1405, 2
1406, 1
1407, 1
1408, 3
1410, 1
1411, 1
1413, 2
1414, 1
1416, 1
1417, 1
1418, 3
1419, 3
1420, 1
1421, 1
1422, 1
1423, 1
1425, 2
1427, 1
1429, 2
1430, 1
1433, 1
1438, 1
1439, 2
1440, 3
1442, 1
1443, 4
1444, 1
1447, 1
1448, 2
1449, 1
1450, 3
1455, 1
1457, 3
1458, 1
1459, 2
1460, 1
1462, 2
1463, 1
1465, 3
1466, 1
1467, 1
1469, 1
1471, 1
1472, 1
1475, 2
1476, 1
1477, 1
1478, 1
1479, 1
1480, 1
1481, 3
1483, 1
1484, 1
1485, 2
1488, 1
1489, 1
1490, 1
1491, 2
1492, 2
1493, 1
1494, 1
1496, 1
1498, 1
1500, 1
1501, 1
1503, 1
1506, 1
1507, 1
1509, 1
1510, 1
1512, 1
1513, 1
1515, 2
1517, 2
1518, 1
1524, 3
1527, 1
1528, 1
1530, 2
1531, 2
1535, 1
1537, 2
1544, 1
1545, 2
1546, 1
1549, 2
1550, 1
1551, 1
1552, 1
1560, 1
1562, 1
1564, 2
1568, 1
1569, 1
1570, 1
1571, 1
1572, 1
1573, 1
1574, 1
1576, 1
1577, 3
1578, 1
1581, 1
1585, 1
1586, 1
1592, 2
1598, 1
1599, 1
1602, 1
1604, 1
1605, 1
1606, 2
1608, 1
1610, 1
1612, 1
1617, 2
1618, 1
1623, 3
1624, 1
1629, 1
1634, 2
1636, 2
1639, 1
1643, 1
1649, 1
1652, 1
1659, 1
1662, 1
1670, 1
1671, 1
1672, 1
1676, 1
1677, 1
1682, 2
1683, 3
1684, 1
1698, 1
1702, 1
1708, 1
1710, 1
1711, 2
1713, 1
1714, 1
1716, 1
1726, 1
1727, 2
1729, 1
1735, 1
1746, 1
1748, 1
1755, 1
1762, 1
1785, 1
1787, 1
1792, 1
1799, 1
1806, 1
1811, 1
1816, 1
1835, 1
1844, 1
1851, 1
1867, 1
1881, 1
1889, 1
1895, 1
1908, 1
1919, 1
1940, 1
1954, 1
1976, 1
2021, 1
Rows returned: 918

-- Latency histogram (by millisecond buckets) for client 0, not considering watermark blocking
-- export histogram-latency-client-1.csv
--
SELECT latency/1000 as lat, count()
FROM request
WHERE event = 'ENOUGH_RESP' AND nodeId = -1
GROUP BY lat
--(latency[ms], count[req])
Query time: 0.000 seconds
Rows returned: 0

-- Latency histogram (by millisecond buckets), all clients combined, not considering watermark blocking
-- export histogram-latency-all.csv
--
SELECT latency/1000 as lat, count()
FROM request
WHERE event = 'ENOUGH_RESP'
GROUP BY lat
--(latency[ms], count[req])
Query time: 0.001 seconds
146, 1
175, 1
185, 1
207, 1
219, 1
220, 1
241, 1
249, 1
255, 1
259, 1
265, 1
269, 1
280, 1
281, 1
284, 1
294, 1
295, 2
302, 1
305, 1
306, 1
315, 1
320, 2
323, 1
328, 1
329, 1
330, 1
332, 2
333, 1
338, 1
340, 1
341, 1
343, 3
346, 2
351, 2
353, 1
357, 1
363, 2
364, 2
368, 1
372, 3
376, 1
378, 2
381, 1
382, 1
384, 1
394, 1
395, 1
397, 1
399, 2
401, 2
404, 1
409, 1
414, 1
415, 1
416, 1
418, 1
421, 1
422, 1
425, 1
428, 1
433, 1
436, 1
438, 1
439, 1
440, 1
442, 1
445, 1
448, 1
450, 1
451, 2
454, 2
462, 1
464, 2
466, 1
467, 1
469, 1
470, 1
474, 1
476, 1
483, 1
484, 1
487, 1
488, 1
489, 1
490, 1
491, 3
492, 1
494, 1
496, 1
498, 1
499, 2
500, 1
502, 1
503, 1
509, 1
510, 2
513, 1
514, 1
515, 1
518, 1
520, 2
522, 1
524, 3
525, 2
526, 1
527, 1
528, 1
529, 1
530, 1
531, 1
532, 1
533, 2
534, 2
535, 2
536, 1
537, 2
538, 2
539, 4
542, 1
543, 2
546, 1
549, 1
550, 1
552, 1
556, 1
557, 3
559, 1
560, 4
561, 4
562, 1
565, 2
566, 2
568, 2
569, 1
570, 3
571, 1
572, 1
575, 2
577, 4
578, 1
579, 3
580, 2
582, 2
583, 1
586, 2
587, 1
590, 1
591, 1
593, 2
594, 2
595, 2
596, 1
597, 1
598, 1
599, 1
600, 1
601, 1
602, 3
603, 1
605, 1
607, 2
608, 1
609, 1
612, 3
614, 4
615, 2
618, 3
619, 2
620, 3
621, 1
622, 3
624, 4
625, 2
626, 1
627, 2
628, 1
629, 3
630, 2
631, 3
633, 4
634, 3
635, 2
638, 4
640, 2
641, 1
644, 3
645, 3
646, 4
647, 4
650, 3
651, 1
653, 1
654, 1
655, 1
656, 1
657, 2
658, 1
660, 1
661, 1
662, 1
663, 2
664, 2
665, 2
666, 5
667, 1
668, 2
669, 2
670, 2
671, 2
673, 2
674, 1
675, 2
676, 1
677, 1
678, 3
679, 2
680, 1
681, 5
682, 2
684, 4
685, 1
686, 1
687, 1
688, 2
689, 2
690, 1
692, 1
694, 3
695, 2
696, 2
697, 1
698, 1
699, 2
700, 1
701, 2
702, 1
704, 1
706, 2
707, 1
709, 1
710, 2
713, 1
714, 2
715, 1
717, 4
718, 3
720, 2
721, 3
722, 2
723, 6
725, 1
726, 2
727, 1
730, 2
731, 1
732, 1
733, 6
735, 2
736, 2
737, 1
738, 3
739, 1
740, 4
741, 1
742, 2
743, 2
744, 1
745, 2
746, 3
747, 1
748, 2
749, 1
750, 3
751, 4
753, 3
754, 2
757, 1
758, 3
759, 2
760, 2
761, 4
762, 2
763, 4
765, 2
766, 3
767, 3
768, 1
769, 3
770, 3
771, 3
772, 2
773, 2
776, 1
777, 4
779, 3
780, 1
781, 1
782, 2
784, 2
785, 1
786, 1
788, 1
789, 3
793, 2
794, 3
795, 2
796, 2
797, 3
798, 2
799, 2
800, 4
801, 1
802, 5
804, 3
805, 4
806, 2
808, 2
809, 1
811, 1
812, 2
813, 1
816, 2
817, 2
819, 3
820, 1
821, 2
822, 2
823, 1
825, 2
826, 2
827, 2
828, 2
829, 2
830, 1
831, 1
832, 1
833, 2
834, 1
835, 2
836, 3
837, 1
838, 1
839, 1
841, 2
842, 1
843, 1
844, 2
846, 1
847, 2
848, 3
849, 3
851, 3
852, 1
853, 1
854, 3
855, 4
856, 3
857, 1
858, 2
859, 2
861, 1
862, 4
865, 3
866, 5
867, 2
869, 4
870, 2
873, 1
875, 1
876, 1
877, 1
881, 2
882, 4
883, 1
885, 2
886, 2
887, 2
888, 1
889, 1
891, 2
892, 2
893, 4
894, 1
895, 2
896, 2
899, 2
901, 6
902, 3
903, 2
904, 2
905, 1
907, 3
909, 4
910, 2
912, 1
913, 1
916, 1
918, 3
919, 1
920, 1
921, 3
922, 1
923, 3
924, 3
925, 1
928, 2
929, 2
932, 1
933, 1
934, 2
936, 3
938, 1
939, 3
941, 3
942, 1
944, 3
945, 5
946, 1
947, 1
948, 1
949, 2
950, 2
951, 2
952, 3
953, 2
954, 1
957, 5
959, 3
962, 4
963, 2
965, 4
966, 2
969, 2
970, 1
972, 2
975, 2
976, 2
977, 2
978, 1
979, 1
980, 1
981, 1
982, 3
983, 4
984, 3
985, 1
986, 2
987, 2
988, 2
990, 4
992, 3
993, 2
994, 3
996, 3
997, 1
998, 2
1000, 4
1001, 1
1002, 2
1005, 3
1006, 1
1008, 1
1009, 5
1011, 1
1012, 1
1015, 4
1016, 2
1017, 2
1018, 1
1019, 1
1020, 2
1021, 1
1023, 3
1024, 2
1025, 3
1026, 2
1027, 1
1028, 1
1030, 1
1031, 3
1032, 1
1033, 1
1034, 2
1035, 1
1036, 3
1037, 1
1038, 2
1040, 2
1042, 1
1047, 2
1048, 1
1049, 3
1050, 2
1051, 1
1054, 1
1055, 1
1056, 1
1057, 4
1058, 2
1059, 1
1060, 2
1061, 2
1062, 1
1063, 3
1064, 1
1065, 2
1066, 1
1068, 1
1069, 3
1070, 4
1071, 2
1072, 2
1073, 1
1074, 1
1075, 1
1077, 1
1080, 4
1081, 3
1083, 1
1084, 5
1088, 2
1089, 1
1090, 2
1091, 3
1093, 1
1094, 2
1095, 3
1096, 3
1097, 1
1098, 1
1100, 1
1101, 2
1102, 4
1103, 3
1104, 2
1105, 3
1109, 1
1110, 1
1112, 1
1113, 2
1114, 2
1115, 1
1116, 3
1117, 2
1118, 2
1119, 3
1120, 2
1121, 2
1122, 1
1124, 2
1126, 3
1127, 1
1128, 1
1129, 2
1130, 1
1134, 2
1135, 1
1136, 3
1138, 1
1139, 2
1140, 1
1141, 3
1142, 1
1143, 4
1145, 1
1146, 5
1147, 2
1148, 1
1149, 1
1150, 1
1151, 2
1152, 2
1153, 3
1154, 1
1155, 1
1157, 1
1158, 2
1160, 2
1161, 1
1162, 3
1163, 1
1165, 1
1168, 2
1169, 2
1170, 1
1172, 2
1173, 2
1174, 3
1175, 2
1176, 1
1177, 2
1178, 2
1179, 1
1181, 6
1182, 3
1184, 4
1185, 1
1186, 2
1187, 2
1190, 3
1191, 2
1192, 1
1193, 2
1194, 1
1195, 3
1196, 1
1198, 2
1199, 1
1201, 2
1202, 1
1204, 2
1207, 1
1208, 1
1209, 1
1213, 1
1214, 3
1215, 1
1216, 2
1217, 1
1218, 4
1219, 1
1221, 2
1222, 1
1223, 6
1225, 1
1226, 4
1230, 1
1231, 2
1232, 1
1233, 2
1234, 1
1236, 1
1238, 1
1240, 1
1241, 3
1242, 1
1243, 1
1244, 4
1245, 2
1246, 1
1247, 3
1248, 2
1250, 1
1251, 2
1252, 2
1253, 2
1254, 1
1257, 2
1258, 1
1259, 1
1260, 1
1261, 1
1265, 3
1267, 2
1268, 4
1269, 1
1270, 1
1271, 1
1272, 1
1273, 1
1275, 1
1276, 1
1277, 2
1278, 1
1279, 1
1280, 1
1281, 1
1282, 1
1283, 4
1285, 4
1287, 3
1288, 1
1289, 1
1290, 2
1291, 2
1293, 1
1294, 1
1296, 1
1298, 1
1299, 2
1300, 1
1301, 1
1303, 2
1304, 1
1305, 2
1307, 1
1309, 2
1310, 2
1311, 1
1312, 1
1313, 1
1314, 2
1315, 1
1316, 3
1318, 2
1319, 2
1320, 1
1322, 2
1323, 1
1324, 2
1325, 3
1326, 1
1329, 2
1331, 1
1332, 1
1333, 1
1334, 2
1336, 2
1337, 2
1338, 1
1339, 2
1341, 1
1342, 1
1343, 1
1344, 3
1345, 1
1346, 2
1347, 1
1349, 1
1350, 1
1352, 2
1355, 2
1358, 2
1359, 1
1361, 2
1362, 1
1363, 3
1364, 1
1365, 1
1366, 1
1367, 3
1369, 1
1371, 1
1372, 1
1373, 2
1375, 1
1376, 1
1378, 2
1380, 1
1381, 1
1382, 1
1383, 1
1384, 1
1386, 1
1389, 1
1391, 4
1392, 2
1393, 1
1394, 1
1395, 1
1397, 1
1398, 2
1400, 2
1402, 2
1403, 1
1404, 1
1406, 2
1407, 3
1408, 2
1409, 1
1410, 2
1412, 2
1413, 1
1414, 1
1415, 1
1416, 3
1417, 1
1419, 1
1421, 1
1422, 1
1423, 1
1424, 1
1425, 1
1429, 1
1430, 2
1433, 2
1434, 1
1438, 1
1439, 3
1440, 2
1442, 1
1443, 2
1444, 2
1447, 3
1448, 1
1449, 1
1453, 1
1455, 1
1456, 3
1457, 2
1458, 1
1459, 2
1462, 2
1463, 1
1464, 1
1465, 2
1466, 1
1467, 1
1469, 2
1470, 1
1471, 1
1474, 2
1475, 2
1478, 1
1479, 3
1480, 3
1481, 1
1482, 2
1484, 1
1487, 1
1488, 1
1491, 2
1494, 1
1495, 2
1500, 2
1503, 1
1505, 2
1506, 1
1510, 1
1512, 2
1513, 1
1514, 1
1515, 3
1516, 1
1523, 2
1524, 1
1527, 1
1528, 1
1529, 1
1530, 2
1534, 1
1535, 1
1536, 3
1537, 1
1542, 1
1545, 1
1547, 1
1549, 2
1550, 1
1559, 1
1560, 1
1562, 1
1564, 1
1566, 1
1567, 1
1570, 2
1571, 2
1573, 1
1576, 3
1577, 2
1581, 1
1583, 1
1585, 2
1588, 1
1591, 1
1598, 1
1599, 1
1600, 1
1603, 1
1604, 1
1606, 2
1607, 1
1610, 1
1614, 1
1615, 1
1617, 1
1623, 4
1629, 1
1633, 1
1634, 1
1636, 2
1637, 1
1643, 1
1647, 1
1648, 1
1652, 1
1662, 1
1666, 1
1667, 1
1670, 1
1675, 1
1677, 1
1680, 1
1681, 1
1682, 2
1683, 2
1684, 1
1700, 1
1702, 1
1705, 1
1706, 2
1711, 1
1713, 1
1714, 1
1723, 1
1724, 1
1725, 1
1727, 1
1728, 1
1746, 2
1748, 1
1752, 1
1783, 1
1785, 1
1786, 1
1790, 1
1796, 1
1806, 1
1811, 1
1833, 1
1839, 1
1851, 1
1853, 1
1865, 1
1881, 1
1888, 1
1907, 1
1919, 1
1939, 1
1953, 1
1970, 1
2014, 1
Rows returned: 922

-- Throughput in time (per millisecond)
-- export timeline-throughput-commit.csv
--
SELECT (ts - (SELECT min(ts) FROM request WHERE event = 'REQ_FINISHED'))/1000 as msec, count()
FROM request
WHERE event = 'REQ_FINISHED'
GROUP BY msec
-- (msec, count[req])
Query time: 0.002 seconds
0, 1
2, 1
5, 1
10, 1
12, 1
14, 1
16, 1
17, 1
18, 1
20, 1
21, 1
22, 1
32, 1
34, 1
36, 1
38, 1
40, 1
42, 1
45, 1
47, 1
52, 1
54, 2
57, 1
58, 1
63, 1
66, 1
68, 1
69, 1
71, 1
73, 1
74, 1
80, 1
82, 1
84, 1
88, 1
89, 1
97, 1
99, 1
101, 1
103, 1
104, 1
106, 1
107, 2
109, 1
110, 1
114, 1
120, 1
124, 1
125, 1
127, 1
133, 1
136, 1
138, 1
139, 1
142, 1
146, 1
147, 1
154, 1
156, 1
157, 1
158, 1
160, 1
164, 1
165, 2
167, 1
176, 1
179, 1
181, 1
183, 1
353, 1
354, 1
362, 1
364, 1
370, 1
371, 1
391, 1
392, 1
394, 2
396, 1
397, 1
400, 1
401, 1
404, 1
405, 1
407, 1
408, 1
410, 1
411, 1
413, 1
414, 1
417, 1
420, 1
424, 1
426, 1
430, 1
432, 1
434, 1
435, 1
445, 2
447, 1
449, 1
451, 1
455, 1
456, 1
462, 1
466, 1
467, 1
469, 1
472, 1
477, 1
481, 1
483, 1
485, 1
486, 1
488, 1
493, 1
495, 1
496, 1
497, 1
502, 1
503, 1
504, 1
516, 1
520, 1
524, 1
526, 1
529, 1
531, 1
532, 1
540, 1
543, 1
545, 1
548, 1
549, 1
550, 1
551, 1
553, 1
554, 1
555, 1
988, 1
990, 1
991, 1
992, 1
993, 1
996, 2
998, 1
1003, 1
1006, 1
1008, 1
1010, 1
1012, 1
1014, 1
1015, 1
1019, 1
1021, 1
1023, 1
1026, 1
1030, 1
1032, 1
1034, 1
1035, 1
1037, 1
1039, 1
1042, 1
1044, 1
1046, 1
1047, 1
1049, 1
1057, 1
1058, 1
1059, 1
1061, 1
1063, 1
1064, 1
1066, 1
1068, 1
1070, 1
1071, 1
1076, 1
1078, 1
1080, 1
1081, 1
1084, 1
1204, 1
1207, 1
1216, 1
1217, 1
1219, 1
1220, 1
1222, 1
1223, 1
1225, 1
1227, 1
1230, 1
1232, 1
1233, 1
1235, 1
1241, 1
1243, 1
1249, 1
1250, 1
1260, 1
1265, 1
1266, 1
1267, 1
1268, 1
1270, 1
1274, 1
1275, 1
1277, 2
1278, 1
1280, 1
1287, 1
1288, 1
1291, 1
1294, 1
1297, 1
1298, 1
1299, 1
1302, 1
1303, 1
1305, 1
1307, 1
1308, 1
1310, 1
1312, 1
1314, 1
1698, 1
1700, 1
1701, 1
1702, 1
1704, 1
1705, 1
1706, 1
1709, 1
1711, 1
1720, 1
1722, 1
1724, 1
1725, 1
1727, 1
1735, 1
1741, 1
1742, 1
1743, 1
1749, 1
1750, 1
1756, 1
1758, 1
1759, 1
1765, 1
1766, 1
1767, 1
1768, 1
1770, 1
1771, 1
1773, 1
1777, 1
1784, 1
1902, 1
1905, 1
1907, 1
1909, 1
1910, 1
1913, 1
1914, 1
1917, 1
1919, 1
1927, 1
1928, 1
1930, 1
1934, 1
1937, 1
1939, 1
1940, 1
1941, 1
1944, 1
1946, 1
1948, 1
1950, 1
1951, 1
1953, 1
1955, 1
1958, 1
1961, 1
1962, 1
1964, 1
1966, 1
1967, 1
1969, 1
1973, 1
2894, 1
2896, 1
2897, 1
2900, 1
2901, 1
2902, 1
2904, 1
2906, 1
2907, 1
2908, 1
2909, 1
2910, 1
2911, 1
2915, 1
2917, 1
2919, 1
2923, 1
2930, 1
2932, 1
2941, 1
2942, 1
2944, 1
2945, 1
2946, 1
2947, 1
2964, 1
2965, 1
2967, 1
2969, 1
2970, 1
2972, 1
2975, 1
2976, 1
2978, 1
2981, 1
2982, 1
2985, 1
2987, 1
3013, 1
3016, 1
3019, 1
3023, 1
3029, 1
3030, 1
3032, 1
3033, 1
3034, 1
3038, 1
3040, 1
3042, 1
3043, 1
3045, 1
3047, 1
3049, 1
3050, 1
3051, 1
3054, 1
3056, 1
3060, 1
3064, 1
3067, 1
3070, 1
3075, 1
3077, 1
3215, 1
3218, 1
3220, 1
3222, 1
3226, 1
3227, 1
3229, 1
3231, 1
3234, 1
3236, 1
3238, 1
3241, 1
3243, 1
3245, 1
3250, 1
3254, 1
3255, 1
3258, 1
3259, 1
3260, 1
3265, 1
3266, 1
3268, 1
3271, 1
3275, 1
3276, 1
3284, 1
3286, 1
3288, 1
3289, 1
3290, 1
3292, 1
3294, 1
3295, 1
3296, 1
3298, 1
3302, 1
3305, 1
3306, 1
3307, 1
3309, 1
3310, 1
3311, 1
3318, 1
3320, 1
3321, 1
3324, 1
3327, 1
3328, 1
3341, 1
3343, 1
3344, 1
3347, 1
3348, 1
3349, 1
3350, 1
3352, 1
3356, 1
3358, 1
3360, 1
3362, 1
3363, 1
3366, 1
3369, 1
3765, 1
3767, 1
3768, 1
3769, 1
3782, 1
3784, 1
3788, 2
3789, 1
3790, 1
3805, 1
3808, 1
3810, 1
3811, 1
3819, 1
3820, 1
3822, 1
3825, 1
3848, 1
3850, 1
3853, 1
3854, 1
3877, 1
3880, 1
3882, 1
3884, 1
3888, 1
3889, 1
3894, 1
3896, 1
3897, 1
3903, 1
3905, 2
3907, 1
3909, 1
3911, 1
3912, 1
3915, 1
3917, 1
4017, 1
4019, 1
4020, 1
4023, 1
4024, 1
4026, 1
4028, 1
4030, 1
4031, 1
4033, 1
4034, 1
4045, 2
4046, 1
4048, 1
4049, 1
4051, 1
4054, 1
4058, 1
4065, 1
4068, 1
4070, 1
4071, 1
4074, 1
4076, 1
4077, 1
4078, 1
4079, 1
4081, 1
4083, 1
4087, 1
4089, 1
4091, 1
4094, 1
4095, 1
4102, 1
4106, 1
4108, 1
4110, 1
4117, 1
4818, 1
4820, 1
4821, 1
4823, 2
4825, 1
4826, 1
4828, 1
4829, 1
4831, 1
4832, 1
4840, 1
4841, 1
4842, 1
4844, 1
4845, 1
4846, 1
4848, 1
4850, 1
4852, 1
4853, 2
4883, 1
4885, 1
4886, 1
4888, 1
4889, 1
4890, 1
4892, 1
4893, 1
4909, 1
4912, 1
4913, 1
4921, 1
4922, 1
4924, 1
4925, 1
4926, 2
4933, 1
4934, 1
4936, 1
4937, 1
4939, 1
4940, 1
4942, 1
4943, 1
4947, 1
4948, 1
4949, 1
4951, 1
4952, 1
4954, 1
4955, 1
4957, 1
5162, 1
5166, 1
5168, 1
5171, 1
5173, 1
5175, 1
5176, 1
5177, 1
5179, 1
5183, 1
5187, 1
5188, 1
5189, 1
5191, 1
5192, 1
5197, 1
5199, 1
5201, 1
5204, 1
5205, 1
5207, 1
5210, 1
5211, 1
5217, 1
5219, 2
5220, 1
5221, 1
5223, 1
5231, 1
5233, 1
5235, 1
5236, 1
5237, 1
5238, 1
5241, 1
5243, 1
5244, 1
5246, 1
5257, 1
5258, 1
5259, 1
5261, 2
5263, 1
5268, 1
5269, 1
5270, 1
5272, 1
5273, 1
5275, 1
5276, 1
5278, 1
5280, 1
5283, 1
5285, 1
5287, 1
5288, 1
5289, 1
5827, 1
5828, 1
5830, 1
5833, 1
5835, 1
5839, 1
5842, 1
5844, 1
5845, 1
5848, 1
5862, 1
5866, 1
5867, 1
5870, 1
5871, 1
5880, 1
5884, 1
5886, 1
5890, 1
5892, 1
5893, 1
5896, 1
5897, 1
5899, 1
5903, 1
5916, 1
5917, 1
5928, 1
5930, 1
5935, 1
5939, 1
5944, 1
5946, 1
5950, 1
5952, 1
5953, 1
5966, 1
5967, 1
5970, 1
5971, 1
5972, 1
5974, 1
5977, 1
5985, 1
5990, 1
5993, 1
5994, 1
6089, 1
6092, 1
6096, 1
6097, 1
6099, 1
6100, 1
6102, 1
6104, 1
6105, 1
6107, 1
6110, 2
6112, 1
6115, 1
6119, 1
6121, 1
6126, 1
6128, 1
6131, 1
6132, 1
6135, 1
6140, 2
6143, 1
6144, 1
6146, 1
6147, 1
6152, 1
6153, 1
6155, 1
6158, 1
6161, 1
6163, 1
6165, 1
6166, 1
6171, 1
6172, 1
6174, 1
6175, 1
6176, 1
6177, 1
6180, 1
6181, 1
6182, 1
6184, 1
6186, 1
6825, 1
6827, 1
6828, 1
6830, 1
6831, 1
6832, 1
6834, 1
6835, 1
6836, 1
6837, 1
6840, 1
6841, 1
6842, 2
6844, 1
6851, 1
6853, 1
6855, 1
6857, 1
6858, 1
6861, 1
6862, 1
6863, 1
6865, 1
6874, 1
6875, 1
6888, 1
6890, 1
6891, 1
6896, 1
6897, 1
6902, 1
6905, 1
6925, 1
6927, 1
6928, 1
6929, 1
6935, 1
6937, 1
6938, 1
6940, 1
6941, 1
6942, 1
6958, 1
6959, 1
6961, 1
6963, 1
6967, 1
6968, 1
6969, 1
6978, 1
6987, 1
6989, 1
6990, 1
6991, 1
7152, 1
7153, 1
7154, 1
7156, 1
7159, 1
7161, 1
7164, 1
7165, 1
7167, 1
7168, 1
7169, 1
7170, 1
7172, 1
7173, 1
7174, 1
7175, 1
7176, 1
7177, 1
7178, 1
7179, 1
7180, 1
7183, 1
7185, 1
7187, 1
7189, 1
7191, 1
7197, 1
7199, 1
7202, 1
7204, 1
7205, 1
7211, 1
7212, 1
7214, 1
7219, 1
7221, 1
7222, 1
7224, 1
7225, 1
7226, 1
7231, 1
7233, 1
7234, 1
7236, 1
7237, 1
7239, 1
7240, 1
7241, 1
7242, 1
7243, 1
7244, 1
7246, 1
7247, 1
7248, 1
7259, 1
7262, 1
7264, 1
7265, 1
7797, 1
7799, 1
7800, 1
7802, 1
7803, 1
7805, 1
7806, 1
7813, 1
7814, 1
7828, 1
7834, 1
7836, 1
7841, 1
7846, 1
7847, 1
7849, 1
7851, 1
7857, 1
7859, 1
7864, 1
7868, 1
7875, 1
7880, 1
7882, 1
7884, 1
7886, 1
7897, 1
7898, 1
7903, 1
7904, 1
7907, 1
7908, 1
7911, 1
7912, 1
7917, 1
7922, 1
7925, 1
7928, 1
7929, 1
7933, 1
7935, 1
7936, 1
7947, 1
7948, 1
7949, 1
7950, 1
7951, 1
8102, 1
8105, 1
8112, 1
8114, 1
8116, 1
8118, 1
8119, 1
8120, 1
8129, 1
8132, 1
8137, 1
8139, 1
8140, 1
8141, 1
8142, 1
8143, 1
8144, 1
8146, 1
8148, 1
8150, 1
8151, 1
8159, 1
8161, 1
8163, 1
8171, 1
8173, 1
8174, 1
8177, 1
8178, 1
8180, 1
8181, 1
8182, 1
8185, 1
8187, 1
8189, 1
8195, 1
8196, 1
8203, 1
8205, 1
8207, 1
8209, 1
8210, 1
8211, 1
8212, 1
8213, 1
8218, 1
8219, 1
8243, 1
9250, 1
9251, 1
9253, 1
9254, 1
9257, 1
9263, 1
9265, 1
9266, 1
9267, 1
9268, 1
9270, 1
9271, 1
9273, 1
9274, 1
9276, 1
9278, 1
9280, 1
9290, 1
9293, 1
9294, 1
9296, 1
9298, 1
9303, 1
9305, 1
9306, 1
9308, 1
9310, 1
9315, 1
9316, 1
9319, 1
9321, 1
9322, 1
9323, 1
9325, 1
9327, 1
9332, 1
9334, 1
9335, 1
9338, 1
9340, 1
9342, 1
9344, 1
9345, 1
9350, 1
9351, 1
9353, 1
9355, 1
9357, 1
9359, 1
9360, 1
9365, 1
9366, 1
9368, 1
9369, 1
9371, 2
9373, 1
9377, 1
9379, 1
9381, 1
9383, 1
9385, 1
9386, 1
9388, 1
9404, 1
9406, 1
9408, 1
9412, 1
9414, 1
9415, 1
9585, 1
9586, 1
9588, 1
9590, 1
9593, 2
9595, 1
9602, 1
9607, 1
9609, 2
9613, 1
9618, 1
9619, 1
9622, 1
9625, 1
9628, 1
9629, 1
9632, 1
9636, 1
9637, 1
9642, 1
9643, 1
9649, 1
9650, 1
9651, 1
9652, 1
9655, 1
9658, 1
9661, 1
9662, 1
9672, 1
9673, 1
9674, 1
9678, 1
9681, 1
9682, 1
9690, 1
9691, 1
9693, 1
9694, 1
9699, 1
9700, 1
9704, 1
9705, 1
9706, 1
9707, 1
9710, 1
9713, 1
9715, 1
9716, 1
9717, 1
9718, 1
9720, 2
9722, 1
9724, 1
9726, 1
9728, 1
9731, 1
9732, 1
9733, 1
9739, 1
9742, 1
9757, 1
9758, 1
9759, 1
9763, 1
9764, 1
9765, 1
9767, 1
10113, 1
10114, 1
10116, 1
10126, 1
10127, 1
10130, 1
10131, 1
10132, 1
10135, 1
10138, 1
10139, 1
10140, 1
10141, 1
10143, 1
10144, 1
10146, 1
10149, 1
10154, 1
10157, 1
10160, 1
10163, 1
10165, 1
10166, 1
10167, 1
10168, 1
10169, 1
10170, 1
10171, 1
10172, 1
10175, 1
10176, 1
10178, 1
10181, 1
10185, 1
10187, 1
10188, 1
10190, 1
10191, 1
10192, 1
10193, 1
10195, 1
10196, 1
10201, 1
10209, 1
10211, 1
10212, 1
10213, 1
10215, 1
10217, 1
10219, 1
10220, 1
10221, 1
10224, 1
10225, 1
10227, 1
10231, 1
10233, 1
10234, 1
10235, 1
10236, 1
10237, 1
10245, 1
10247, 1
10248, 1
10249, 1
10250, 1
10252, 1
10253, 1
10254, 1
10255, 1
10256, 2
10258, 1
10260, 1
10265, 1
10270, 1
10272, 1
10275, 1
10277, 1
10278, 1
10280, 1
10281, 1
10282, 1
10283, 1
10285, 1
10286, 1
10287, 1
10289, 1
10291, 1
11149, 1
11150, 1
11151, 1
11153, 1
11156, 1
11157, 1
11158, 1
11159, 1
11161, 1
11166, 1
11168, 1
11169, 1
11170, 1
11173, 1
11175, 1
11176, 1
11177, 1
11178, 1
11181, 1
11182, 1
11183, 1
11186, 1
11188, 1
11190, 1
11194, 1
11195, 1
11196, 1
11198, 1
11199, 1
11203, 1
11205, 1
11206, 1
11207, 1
11210, 1
11213, 1
11215, 1
11217, 2
11219, 1
11221, 1
11222, 1
11224, 1
11225, 1
11226, 1
11227, 1
11228, 1
11229, 1
11231, 1
11232, 1
11236, 1
11239, 1
11240, 1
11241, 1
11243, 1
11245, 1
11249, 2
11251, 1
11252, 1
11253, 1
11254, 1
11256, 1
11258, 1
11261, 1
11262, 1
11263, 1
11264, 1
11266, 1
11269, 1
11270, 1
11273, 1
11279, 1
11281, 1
11286, 1
11288, 1
11289, 1
11291, 1
11292, 2
11293, 1
11294, 1
11296, 1
11303, 1
11305, 1
11306, 1
11308, 1
11310, 1
11311, 1
11313, 1
11314, 1
11315, 1
11316, 1
11317, 1
11318, 1
11320, 1
11322, 1
11323, 1
11324, 1
11325, 1
11328, 1
11330, 1
11332, 1
11334, 1
11335, 1
11338, 1
11340, 1
11342, 1
11347, 1
11352, 1
11355, 1
11358, 1
11359, 1
11361, 1
11362, 1
11364, 1
11365, 1
12360, 1
12363, 1
12365, 1
12366, 1
12367, 1
12368, 1
12369, 1
12370, 1
12371, 1
12372, 1
12374, 1
12375, 1
12376, 1
12377, 1
12383, 1
12385, 1
12389, 1
12390, 1
12391, 1
12393, 1
12394, 1
12395, 1
12396, 1
12398, 1
12399, 1
12400, 1
12402, 1
12403, 1
12408, 1
12410, 1
12411, 1
12412, 1
12414, 1
12415, 1
12417, 1
12420, 1
12423, 1
12428, 1
12431, 1
12432, 1
12433, 1
12437, 1
12439, 1
12441, 1
12444, 1
12445, 1
12446, 1
12448, 1
12452, 1
12453, 1
12456, 1
12457, 1
12458, 1
12460, 1
12465, 1
12468, 1
12476, 1
12478, 1
12480, 1
12481, 1
12487, 1
12490, 1
12491, 1
12494, 1
12495, 1
12651, 1
12652, 1
12653, 1
12655, 1
12656, 1
12657, 1
12658, 1
12659, 2
12660, 1
12662, 1
12663, 1
12664, 1
12665, 1
12666, 1
12668, 1
12670, 1
12671, 1
12673, 1
12674, 2
12676, 1
12690, 1
12692, 1
12694, 1
12697, 1
12698, 1
12699, 1
12702, 1
12704, 1
12705, 1
12706, 1
12707, 1
12717, 1
12718, 1
12719, 1
12726, 1
12729, 1
12730, 1
12732, 1
12733, 1
12736, 1
12737, 1
12739, 1
12741, 1
12742, 1
12746, 1
12747, 1
12749, 1
12750, 1
12751, 1
12756, 1
12758, 1
12759, 1
12760, 1
12765, 1
12766, 1
12768, 1
12769, 1
12771, 1
12794, 1
12795, 1
12796, 1
12797, 1
12798, 1
13254, 1
13255, 1
13257, 1
13261, 1
13263, 1
13264, 1
13266, 1
13267, 1
13269, 1
13279, 1
13281, 1
13282, 1
13284, 1
13286, 1
13287, 1
13288, 1
13289, 1
13290, 1
13291, 1
13293, 1
13295, 1
13297, 1
13298, 1
13301, 1
13303, 1
13304, 1
13309, 1
13314, 1
13315, 1
13317, 1
13318, 1
13322, 1
13323, 1
13325, 1
13327, 1
13328, 1
13330, 1
13331, 1
13334, 1
13335, 1
13337, 1
13338, 1
13344, 1
13345, 1
13346, 1
13354, 1
13356, 1
13359, 1
13360, 1
13361, 1
13362, 1
13363, 1
13366, 1
13372, 1
13373, 1
13374, 1
13375, 1
13376, 1
13377, 1
13379, 1
13380, 1
13388, 1
13391, 1
13397, 1
13399, 1
13401, 1
13403, 2
13405, 1
13406, 1
13407, 1
13411, 1
13414, 1
13419, 1
13420, 1
13425, 1
13428, 1
13441, 1
13444, 1
13445, 1
13446, 1
13450, 1
13454, 2
13456, 1
13457, 1
13460, 1
13462, 1
13473, 1
13474, 1
13479, 1
13480, 1
13482, 1
14152, 1
14153, 1
14154, 1
14155, 1
14157, 1
14158, 1
14159, 1
14160, 1
14161, 1
14162, 1
14163, 1
14165, 1
14166, 1
14167, 1
14168, 1
14169, 1
14170, 1
14174, 1
14175, 1
14176, 1
14177, 1
14179, 1
14180, 1
14181, 1
14183, 1
14184, 2
14186, 1
14188, 1
14189, 1
14190, 1
14192, 1
14193, 1
14195, 1
14197, 1
14198, 1
14199, 1
14200, 1
14204, 1
14206, 1
14207, 1
14208, 1
14210, 1
14211, 1
14212, 1
14214, 1
14215, 1
14217, 1
14218, 1
14220, 1
14221, 1
14223, 1
14224, 1
14226, 1
14228, 1
14234, 1
14235, 1
14237, 1
14239, 1
14240, 1
14242, 1
14243, 1
14244, 1
14246, 1
14247, 1
14249, 1
14250, 1
14252, 1
14253, 1
14254, 1
14256, 1
14257, 1
14258, 1
14263, 1
14265, 1
14266, 1
14267, 1
14268, 1
14269, 1
14270, 1
14271, 1
14273, 1
14274, 1
14276, 1
14277, 1
14278, 1
14284, 1
14285, 1
14286, 1
14287, 1
14289, 1
14290, 1
14292, 1
14294, 1
14295, 1
14296, 1
14298, 1
14299, 1
14301, 1
14302, 1
14303, 1
14305, 1
14310, 1
14311, 1
14313, 1
14314, 1
Rows returned: 1565

-- Throughput in time (per millisecond), in order
-- export timeline-throughput-deliver.csv
--
SELECT (ts - (SELECT min(ts) FROM request WHERE event = 'REQ_DELIVERED'))/1000 as msec, count()
FROM request
WHERE event = 'REQ_DELIVERED'
GROUP BY msec
-- (msec, count[req])
Query time: 0.001 seconds
0, 1
1953, 1
2982, 1
3311, 4
4078, 4
5188, 4
5867, 4
5917, 1
5918, 3
5972, 4
6153, 3
6154, 1
6181, 1
6978, 7
6979, 10
6980, 9
6981, 8
6982, 9
6983, 5
6984, 8
6985, 6
7259, 10
7260, 7
7806, 4
7868, 4
7918, 4
9371, 4
9609, 1
9610, 3
9673, 4
9720, 4
10177, 1
10178, 3
10201, 1
10202, 12
10203, 12
10204, 13
10205, 13
10206, 13
10236, 4
10256, 3
10257, 1
11217, 4
11261, 1
11262, 3
12375, 1
12376, 3
12413, 1
12414, 3
12458, 3
12459, 1
12766, 3
12767, 1
13302, 1
13303, 3
13335, 4
13376, 4
13407, 4
13454, 4
14184, 3
14185, 1
14210, 4
14250, 4
14274, 4
14300, 1
14301, 3
Rows returned: 66

-- Batch size histogram
-- export batch-sizes.csv
--
SELECT val, count()
FROM protocol
WHERE event = 'PROPOSE'
GROUP BY val
-- (batch-size[req], num-batches)
Query time: 0.000 seconds
0, 16
160, 1
162, 1
163, 1
171, 1
190, 1
192, 1
199, 1
200, 1
202, 1
203, 1
207, 1
208, 1
216, 1
221, 1
222, 2
226, 1
227, 1
228, 1
229, 1
231, 1
234, 1
235, 2
236, 1
240, 1
243, 2
244, 1
255, 1
260, 1
269, 1
273, 1
276, 1
279, 1
283, 1
288, 1
289, 1
298, 1
299, 2
301, 1
317, 2
319, 1
320, 2
326, 2
327, 1
334, 1
339, 1
350, 1
352, 1
357, 1
358, 3
359, 1
360, 1
Rows returned: 52

-- Batch size in time (per millisecond), all peers
-- export timeline-batch-size.csv
--
SELECT (ts - (SELECT min(ts) FROM protocol WHERE event = 'PROPOSE'))/1000 as msec, avg(val)
FROM protocol
WHERE event = 'PROPOSE'
GROUP BY msec
-- (msec, avg[req])
Query time: 0.000 seconds
0, 0.0
2, 0.0
5, 0.0
14, 0.0
1000, 0.0
1004, 0.0
1007, 0.0
1015, 0.0
2093, 358.0
2094, 357.0
2108, 359.0
2116, 358.0
3059, 222.0
3071, 226.0
3087, 227.0
3117, 229.0
4061, 163.0
4079, 160.0
4138, 162.0
4153, 171.0
5110, 319.0
5133, 317.0
5156, 317.0
5199, 320.0
6076, 203.0
6146, 200.0
6163, 202.0
6199, 190.0
7108, 273.0
7167, 298.0
7240, 301.0
7293, 299.0
8127, 234.0
8196, 228.0
8198, 231.0
8279, 244.0
9130, 279.0
9240, 288.0
9253, 289.0
9331, 276.0
10134, 235.0
10248, 243.0
10389, 255.0
11163, 350.0
11286, 352.0
11318, 360.0
11428, 358.0
12173, 236.0
12257, 207.0
12335, 199.0
12342, 192.0
13179, 283.0
13287, 299.0
13398, 326.0
13407, 320.0
14200, 326.0
14313, 327.0
14403, 334.0
14473, 339.0
15200, 240.0
15284, 222.0
15371, 208.0
15402, 216.0
16206, 269.0
16299, 260.0
16403, 235.0
16433, 221.0
17188, 0.0
17259, 0.0
17367, 0.0
17392, 0.0
18190, 0.0
18260, 0.0
18369, 0.0
18394, 0.0
Rows returned: 75

-- Proposals in time (per millisecond), all peers
-- export timeline-propose.csv
--
SELECT (ts - (SELECT min(ts) FROM protocol WHERE event = 'PROPOSE'))/1000 as msec, count()
FROM protocol
WHERE event = 'PROPOSE'
GROUP BY msec
-- (msec, avg[req])
Query time: 0.000 seconds
0, 1
2, 1
5, 1
14, 1
1000, 1
1004, 1
1007, 1
1015, 1
2093, 1
2094, 1
2108, 1
2116, 1
3059, 1
3071, 1
3087, 1
3117, 1
4061, 1
4079, 1
4138, 1
4153, 1
5110, 1
5133, 1
5156, 1
5199, 1
6076, 1
6146, 1
6163, 1
6199, 1
7108, 1
7167, 1
7240, 1
7293, 1
8127, 1
8196, 1
8198, 1
8279, 1
9130, 1
9240, 1
9253, 1
9331, 1
10134, 1
10248, 2
10389, 1
11163, 1
11286, 1
11318, 1
11428, 1
12173, 1
12257, 1
12335, 1
12342, 1
13179, 1
13287, 1
13398, 1
13407, 1
14200, 1
14313, 1
14403, 1
14473, 1
15200, 1
15284, 1
15371, 1
15402, 1
16206, 1
16299, 1
16403, 1
16433, 1
17188, 1
17259, 1
17367, 1
17392, 1
18190, 1
18260, 1
18369, 1
18394, 1
Rows returned: 75

-- Proposals in time (per millisecond), all peers
-- export timeline-propose-peer-0.csv
--
SELECT (ts - (SELECT min(ts) FROM protocol WHERE event = 'PROPOSE'))/1000 as msec, count()
FROM protocol
WHERE event = 'PROPOSE' AND nodeId = 0
GROUP BY msec
-- (msec, avg[req])
Query time: 0.000 seconds
5, 1
1007, 1
2108, 1
3059, 1
4061, 1
5133, 1
6076, 1
7108, 1
8127, 1
9130, 1
10134, 1
11163, 1
12173, 1
13179, 1
14200, 1
15200, 1
16206, 1
17188, 1
18190, 1
Rows returned: 19

-- Batch size in time (per millisecond), peer 0
-- export timeline-batch-size-peer-0.csv
--
SELECT (ts - (SELECT min(ts) FROM protocol WHERE event = 'PROPOSE'))/1000 as msec, avg(val)
FROM protocol
WHERE event = 'PROPOSE' AND nodeId = 0
GROUP BY msec
-- (msec, avg[req])
Query time: 0.000 seconds
5, 0.0
1007, 0.0
2108, 359.0
3059, 222.0
4061, 163.0
5133, 317.0
6076, 203.0
7108, 273.0
8127, 234.0
9130, 279.0
10134, 235.0
11163, 350.0
12173, 236.0
13179, 283.0
14200, 326.0
15200, 240.0
16206, 269.0
17188, 0.0
18190, 0.0
Rows returned: 19

-- Client slack over time, all clients
-- export client-slack.csv
SELECT (ts - (SELECT min(ts) FROM request WHERE event = 'CLIENT_SLACK'))/1000 as msec, sum(latency)/1000
FROM request
WHERE event = 'CLIENT_SLACK'
GROUP BY msec
-- (msec, slack[ms])
Query time: 0.002 seconds
0, 0
9, -7
20, -15
27, -20
33, -23
38, -26
44, -29
59, -42
67, -48
76, -54
84, -60
93, -66
99, -69
108, -76
115, -81
122, -85
130, -91
136, -94
142, -98
150, -104
156, -107
162, -111
168, -114
174, -118
179, -121
185, -124
191, -127
197, -131
202, -134
207, -137
214, -141
220, -144
227, -148
232, -152
238, -155
244, -159
264, -176
270, -180
277, -184
283, -188
289, -191
295, -195
302, -200
308, -203
314, -207
320, -210
326, -213
331, -216
337, -220
344, -224
349, -227
355, -230
361, -234
367, -238
373, -241
379, -245
385, -249
392, -253
399, -257
404, -260
410, -263
417, -268
422, -271
427, -274
434, -278
439, -281
445, -284
451, -288
457, -291
462, -294
467, -297
474, -301
480, -305
486, -307
493, -313
499, -316
504, -319
509, -322
515, -324
520, -327
525, -330
531, -334
537, -337
543, -340
548, -344
554, -346
559, -349
565, -352
573, -358
579, -362
586, -366
591, -369
596, -372
602, -375
607, -378
612, -380
618, -384
624, -387
629, -390
635, -393
640, -396
646, -399
651, -402
657, -406
662, -409
667, -411
673, -414
678, -417
687, -423
694, -428
700, -431
705, -434
710, -437
716, -440
721, -443
726, -446
731, -448
737, -451
742, -454
747, -457
753, -460
758, -463
764, -466
771, -470
778, -476
784, -479
790, -482
795, -485
800, -488
805, -491
811, -493
817, -497
823, -501
829, -504
834, -507
839, -510
845, -513
850, -516
855, -519
860, -521
867, -526
873, -529
878, -532
883, -534
888, -537
894, -540
899, -543
904, -545
916, -555
924, -560
938, -572
943, -575
948, -577
960, -587
968, -592
975, -597
986, -605
997, -614
1004, -618
1009, -621
1017, -627
1024, -631
1033, -637
1038, -640
1047, -647
1055, -653
1081, -676
1087, -679
1108, -698
1133, -721
1166, -751
1190, -773
1202, -782
1231, -809
1237, -812
1242, -815
1248, -819
1254, -822
1263, -829
1271, -834
1276, -837
1281, -840
1287, -843
1293, -846
1304, -855
1310, -859
1317, -863
1333, -876
1364, -906
1374, -913
1385, -921
1392, -926
1407, -939
1417, -946
1432, -959
1438, -962
1454, -976
1460, -979
1470, -987
1479, -993
1489, -1001
1508, -1017
1521, -1028
1529, -1033
1543, -1045
1551, -1051
1562, -1059
1573, -1067
1605, -1098
1617, -1107
1626, -1114
1637, -1122
1648, -1131
1667, -1147
1679, -1157
1698, -1173
1707, -1179
1713, -1184
1722, -1190
1728, -1194
1742, -1205
1753, -1214
1767, -1225
1772, -1228
1789, -1243
1800, -1251
1813, -1262
1822, -1268
1832, -1276
1838, -1279
1850, -1289
1862, -1299
1871, -1305
1900, -1332
1921, -1350
1930, -1356
1948, -1372
1983, -1405
2012, -1431
2059, -1476
2090, -1504
2105, -1517
2116, -1526
2122, -1529
2138, -1543
2145, -1547
2199, -1599
2313, -1710
2323, -1717
2331, -1724
2343, -1733
2348, -1736
2356, -1741
2365, -1748
2379, -1760
2388, -1766
2402, -1777
2415, -1788
2430, -1801
2437, -1805
2444, -1809
2455, -1818
2467, -1828
2476, -1834
2489, -1844
2499, -1852
2510, -1861
2524, -1872
2533, -1879
2539, -1883
2547, -1889
2560, -1899
2575, -1911
2581, -1915
2588, -1920
2614, -1943
2624, -1951
2636, -1960
2647, -1968
2656, -1975
2667, -1984
2676, -1990
2697, -2009
2706, -2015
2728, -2035
2738, -2043
2749, -2051
2814, -2114
2853, -2150
2858, -2153
2867, -2159
2873, -2163
2878, -2166
2885, -2170
2890, -2173
2896, -2176
2901, -2179
2908, -2184
2916, -2189
2928, -2199
2935, -2203
2942, -2207
2949, -2212
2954, -2215
2959, -2218
2965, -2220
2993, -2246
3002, -2253
3008, -2257
3014, -2260
3043, -2287
3094, -2335
3120, -2359
3128, -2364
3146, -2380
3162, -2393
3173, -2402
3179, -2406
3189, -2413
3212, -2434
3220, -2439
3226, -2443
3238, -2452
3245, -2457
3253, -2462
3263, -2470
3271, -2475
3282, -2484
3293, -2493
3308, -2505
3316, -2511
3337, -2530
3357, -2547
3420, -2608
3437, -2622
3442, -2625
3447, -2627
3453, -2631
3461, -2637
3467, -2640
3474, -2644
3480, -2648
3486, -2651
3491, -2654
3497, -2657
3502, -2660
3507, -2662
3513, -2666
3518, -2669
3523, -2671
3527, -2673
3537, -2680
3542, -2683
3547, -2686
3552, -2688
3557, -2691
3562, -2693
3567, -2696
3572, -2698
3577, -2701
3582, -2704
3587, -2706
3592, -2708
3596, -2711
3602, -2714
3607, -2716
3613, -2720
3619, -2723
3624, -2726
3629, -2728
3633, -2731
3639, -2733
3644, -2736
3649, -2739
3654, -2742
3659, -2744
3664, -2747
3669, -2749
3674, -2752
3679, -2755
3684, -2757
3689, -2760
3694, -2762
3700, -2765
3705, -2768
3710, -2770
3715, -2773
3720, -2775
3725, -2778
3731, -2782
3737, -2786
3743, -2789
3749, -2792
3755, -2796
3760, -2798
3765, -2801
3770, -2804
3776, -2807
3782, -2811
3788, -2814
3793, -2817
3801, -2823
3807, -2826
3813, -2830
3819, -2833
3824, -2836
3830, -2840
3835, -2842
3840, -2845
3845, -2847
3850, -2850
3856, -2853
3860, -2855
3865, -2858
3870, -2860
3875, -2863
3881, -2866
3886, -2869
3892, -2872
3897, -2874
3903, -2878
3908, -2881
3913, -2884
3919, -2887
3924, -2889
3929, -2892
3934, -2895
3941, -2899
3946, -2901
3954, -2907
3961, -2912
3969, -2917
3984, -2929
3989, -2932
4007, -2948
4012, -2951
4023, -2959
4035, -2969
4059, -2991
4077, -3006
4087, -3013
4096, -3020
4119, -3040
4126, -3045
4131, -3048
4136, -3050
4142, -3054
4147, -3056
4157, -3064
4168, -3073
4178, -3080
4198, -3098
4209, -3106
4250, -3144
4256, -3148
4289, -3179
4295, -3183
4305, -3190
4319, -3202
4324, -3204
4329, -3206
4333, -3209
4350, -3223
4362, -3232
4369, -3237
4379, -3244
4389, -3251
4397, -3258
4416, -3274
4421, -3277
4435, -3289
4448, -3299
4460, -3309
4468, -3314
4475, -3319
4495, -3336
4509, -3348
4526, -3362
4537, -3371
4551, -3382
4559, -3387
4568, -3394
4576, -3400
4581, -3402
4586, -3405
4596, -3412
4607, -3421
4618, -3430
4636, -3445
4653, -3460
4670, -3475
4676, -3478
4694, -3494
4703, -3500
4712, -3506
4721, -3513
4730, -3520
4740, -3528
4745, -3530
4767, -3549
4777, -3558
4791, -3569
4803, -3578
4812, -3585
4822, -3592
4837, -3604
4966, -3731
4970, -3733
4976, -3736
4983, -3741
5003, -3759
5013, -3766
5020, -3771
5029, -3778
5046, -3792
5063, -3806
5068, -3809
5074, -3813
5079, -3815
5088, -3822
5107, -3838
5113, -3842
5144, -3870
5158, -3882
5165, -3887
5178, -3897
5213, -3930
5221, -3936
5236, -3948
5248, -3957
5264, -3971
5271, -3976
5282, -3984
5293, -3993
5311, -4008
5321, -4015
5329, -4021
5338, -4028
5361, -4048
5368, -4053
5373, -4055
5385, -4065
5397, -4075
5411, -4086
5421, -4094
5432, -4102
5439, -4106
5445, -4110
5454, -4116
5469, -4130
5492, -4150
5500, -4156
5508, -4161
5522, -4172
5575, -4224
5580, -4226
5621, -4265
5628, -4269
5634, -4273
5641, -4277
5646, -4279
5651, -4282
5657, -4286
5662, -4288
5668, -4292
5673, -4295
5679, -4298
5684, -4300
5689, -4303
5694, -4306
5701, -4310
5706, -4313
5710, -4315
5716, -4318
5723, -4322
5728, -4325
5734, -4328
5739, -4331
5744, -4334
5749, -4337
5754, -4339
5759, -4341
5765, -4345
5770, -4347
5775, -4350
5780, -4353
5784, -4355
5790, -4357
5795, -4360
5800, -4363
5807, -4367
5813, -4371
5818, -4374
5823, -4376
5829, -4380
5835, -4384
5840, -4386
5845, -4389
5850, -4391
5855, -4393
5860, -4396
5865, -4399
5870, -4401
5876, -4405
5881, -4407
5886, -4410
5891, -4412
5896, -4415
5902, -4418
5907, -4421
5912, -4423
5917, -4426
5922, -4428
5927, -4431
5931, -4433
5936, -4436
5941, -4438
5946, -4441
5952, -4444
5957, -4447
5962, -4449
5967, -4451
5972, -4454
5977, -4457
5981, -4459
5987, -4462
6010, -4482
6026, -4496
6034, -4502
6043, -4508
6052, -4515
6060, -4520
6065, -4523
6071, -4527
6086, -4539
6093, -4544
6099, -4547
6107, -4553
6115, -4558
6137, -4578
6163, -4601
6168, -4604
6186, -4619
6192, -4623
6197, -4626
6207, -4633
6230, -4654
6246, -4668
6272, -4691
6285, -4701
6290, -4704
6310, -4721
6315, -4724
6332, -4739
6338, -4742
6356, -4758
6369, -4769
6377, -4773
6383, -4778
6396, -4788
6402, -4792
6409, -4796
6416, -4801
6427, -4809
6436, -4816
6442, -4819
6452, -4827
6457, -4829
6461, -4832
6471, -4839
6476, -4842
6482, -4845
6489, -4850
6498, -4856
6510, -4865
6523, -4876
6532, -4882
6542, -4890
6561, -4907
6581, -4925
6596, -4937
6604, -4942
6610, -4946
6622, -4955
6635, -4966
6647, -4976
6673, -4999
6700, -5024
6720, -5041
6732, -5051
6757, -5073
6862, -5176
6868, -5179
6872, -5181
6877, -5184
6882, -5187
6890, -5191
6896, -5195
6902, -5199
6908, -5202
6914, -5206
6921, -5210
6927, -5214
6933, -5217
6939, -5221
6943, -5223
6948, -5225
6953, -5228
6958, -5231
6965, -5235
6971, -5239
6976, -5241
6987, -5250
6992, -5253
6998, -5256
7004, -5260
7009, -5262
7014, -5264
7019, -5267
7023, -5269
7035, -5278
7040, -5281
7045, -5283
7050, -5286
7059, -5293
7080, -5311
7090, -5318
7097, -5323
7130, -5353
7154, -5375
7171, -5390
7180, -5397
7192, -5406
7231, -5442
7250, -5459
7260, -5467
7282, -5486
7289, -5491
7295, -5494
7308, -5505
7324, -5519
7333, -5525
7342, -5531
7356, -5543
7369, -5554
7376, -5558
7383, -5563
7397, -5574
7402, -5577
7410, -5582
7419, -5589
7431, -5598
7439, -5604
7447, -5610
7459, -5619
7468, -5626
7476, -5631
7487, -5640
7504, -5654
7515, -5663
7522, -5667
7530, -5673
7546, -5687
7552, -5691
7563, -5699
7570, -5703
7576, -5707
7583, -5711
7592, -5718
7598, -5722
7603, -5724
7614, -5732
7628, -5745
7717, -5830
7723, -5834
7728, -5837
7736, -5842
7742, -5846
7749, -5850
7754, -5854
7760, -5856
7765, -5859
7770, -5862
7776, -5865
7781, -5868
7785, -5870
7790, -5872
7795, -5875
7800, -5877
7805, -5880
7809, -5882
7814, -5884
7819, -5887
7825, -5890
7830, -5892
7835, -5895
7840, -5898
7845, -5900
7850, -5903
7855, -5905
7861, -5909
7866, -5912
7871, -5914
7876, -5916
7881, -5919
7886, -5922
7890, -5924
7895, -5926
7900, -5928
7905, -5931
7910, -5933
7914, -5936
7919, -5938
7924, -5940
7929, -5943
7939, -5950
7943, -5952
7949, -5956
7954, -5959
7959, -5961
7964, -5964
7970, -5966
7978, -5972
7985, -5977
7990, -5980
7995, -5982
8002, -5987
8007, -5989
8012, -5992
8017, -5994
8022, -5997
8027, -5999
8034, -6004
8040, -6007
8062, -6027
8068, -6030
8078, -6038
8083, -6041
8096, -6051
8109, -6062
8114, -6064
8119, -6067
8124, -6069
8133, -6076
8141, -6082
8175, -6113
8200, -6136
8211, -6145
8218, -6149
8223, -6152
8265, -6191
8290, -6214
8334, -6255
8349, -6268
8355, -6271
8363, -6277
8381, -6293
8391, -6300
8403, -6310
8417, -6321
8431, -6333
8441, -6340
8457, -6354
8466, -6361
8480, -6372
8487, -6377
8505, -6392
8511, -6396
8520, -6402
8528, -6408
8534, -6411
8542, -6416
8549, -6421
8555, -6425
8595, -6462
8610, -6475
8617, -6480
8628, -6488
8636, -6494
8641, -6496
8648, -6501
8658, -6508
8672, -6520
8677, -6522
8686, -6529
8701, -6541
8711, -6549
8719, -6554
8762, -6595
8834, -6664
8839, -6667
8843, -6669
8849, -6672
8855, -6676
8861, -6680
8867, -6684
8873, -6687
8879, -6690
8884, -6693
8889, -6696
8895, -6699
8899, -6701
8905, -6704
8909, -6706
8914, -6708
8919, -6711
8924, -6713
8929, -6716
8935, -6720
8940, -6722
8945, -6725
8950, -6727
8955, -6730
8961, -6733
8973, -6743
8979, -6747
8989, -6754
8994, -6756
8999, -6759
9003, -6761
9009, -6765
9015, -6767
9020, -6771
9026, -6774
9031, -6776
9036, -6779
9040, -6781
9045, -6783
9050, -6785
9071, -6804
9076, -6807
9082, -6810
9087, -6813
9094, -6818
9102, -6823
9110, -6829
9130, -6847
9140, -6854
9148, -6860
9154, -6863
9166, -6873
9179, -6883
9185, -6886
9192, -6891
9205, -6902
9235, -6930
9242, -6934
9256, -6946
9265, -6952
9282, -6966
9288, -6970
9320, -6999
9351, -7028
9362, -7036
9371, -7044
9383, -7053
9397, -7064
9409, -7074
9428, -7090
9442, -7102
9448, -7106
9466, -7122
9483, -7136
9490, -7140
9497, -7145
9503, -7148
9513, -7156
9521, -7161
9529, -7167
9537, -7172
9546, -7179
9553, -7184
9557, -7186
9562, -7188
9579, -7203
9585, -7206
9590, -7209
9596, -7212
9602, -7216
9609, -7220
9613, -7222
9619, -7225
9623, -7227
9628, -7230
9633, -7232
9638, -7234
9643, -7238
9648, -7240
9653, -7242
9658, -7245
9664, -7248
9669, -7251
9674, -7253
9678, -7255
9683, -7258
9688, -7260
9692, -7262
9697, -7265
9702, -7267
9706, -7269
9712, -7272
9724, -7281
9728, -7284
9733, -7286
9738, -7289
9743, -7291
9749, -7295
9755, -7298
9761, -7301
9766, -7304
9771, -7306
9776, -7309
9780, -7311
9785, -7314
9794, -7320
9799, -7322
9803, -7324
9808, -7327
9813, -7329
9818, -7332
9824, -7335
9829, -7338
9834, -7341
9842, -7346
9846, -7348
9851, -7350
9856, -7352
9860, -7354
9865, -7357
9869, -7359
9874, -7361
9879, -7363
9884, -7366
9890, -7369
9895, -7372
9899, -7374
9904, -7376
9909, -7378
9913, -7381
9918, -7383
9923, -7385
9928, -7388
9932, -7390
9937, -7392
9941, -7394
9946, -7396
9951, -7399
9956, -7401
9961, -7404
9965, -7406
9970, -7408
9975, -7410
9980, -7413
9984, -7415
9989, -7417
9993, -7419
9998, -7422
10003, -7424
10009, -7428
10014, -7430
10020, -7433
10025, -7436
10029, -7438
10034, -7440
10039, -7443
10043, -7445
10049, -7448
10053, -7450
10059, -7453
10064, -7456
10069, -7458
10075, -7462
10086, -7471
10092, -7474
10098, -7478
10104, -7481
10114, -7489
10122, -7494
10130, -7500
10140, -7507
10145, -7509
10153, -7515
10171, -7530
10176, -7533
10181, -7536
10185, -7538
10190, -7541
10195, -7543
10199, -7545
10215, -7558
10228, -7568
10238, -7576
10246, -7582
10256, -7589
10268, -7599
10279, -7608
10295, -7621
10304, -7627
10312, -7633
10322, -7641
10355, -7671
10364, -7677
10371, -7682
10400, -7709
10430, -7736
10436, -7740
10464, -7765
10471, -7770
10479, -7775
10490, -7784
10495, -7786
10574, -7863
10582, -7869
10589, -7873
10600, -7882
10607, -7886
10613, -7890
10619, -7894
10631, -7903
10640, -7910
10650, -7917
10667, -7932
10674, -7937
10683, -7943
10695, -7953
10710, -7965
10736, -7989
10741, -7991
10747, -7995
10757, -8002
10763, -8006
10770, -8010
10776, -8014
10802, -8037
10818, -8051
10827, -8057
10840, -8068
10849, -8074
10856, -8080
10866, -8086
10880, -8098
10885, -8101
10898, -8111
10905, -8116
10918, -8127
10949, -8156
10961, -8164
10985, -8186
11007, -8206
11021, -8217
11038, -8233
11053, -8245
11064, -8253
11076, -8263
11105, -8290
11141, -8323
11146, -8325
11159, -8336
11175, -8350
11180, -8352
11203, -8372
11216, -8384
11256, -8420
11272, -8434
11276, -8436
11288, -8446
11302, -8457
11322, -8475
11371, -8521
11446, -8593
11451, -8596
11456, -8599
11466, -8607
11482, -8620
11488, -8624
11496, -8629
11504, -8635
11513, -8641
11541, -8667
11547, -8670
11560, -8681
11592, -8710
11598, -8714
11607, -8721
11615, -8726
11622, -8731
11627, -8733
11632, -8736
11640, -8741
11645, -8743
11649, -8746
11661, -8755
11667, -8759
11676, -8766
11681, -8768
11687, -8771
11691, -8773
11696, -8776
11703, -8780
11708, -8782
11715, -8787
11721, -8791
11726, -8793
11730, -8795
11735, -8797
11739, -8799
11744, -8801
11748, -8803
11753, -8806
11757, -8808
11762, -8809
11766, -8811
11771, -8813
11777, -8817
11781, -8819
11786, -8821
11792, -8825
11799, -8830
11804, -8832
11808, -8834
11813, -8836
11818, -8838
11827, -8845
11831, -8847
11835, -8849
11841, -8852
11845, -8853
11849, -8855
11854, -8858
11858, -8860
11864, -8863
11869, -8866
11874, -8868
11879, -8870
11884, -8874
11889, -8875
11893, -8877
11900, -8882
11906, -8885
11912, -8889
11919, -8893
11925, -8897
11929, -8899
11934, -8901
11939, -8903
11943, -8905
11947, -8907
11952, -8909
11956, -8911
11961, -8913
11965, -8915
11970, -8917
11974, -8919
11978, -8921
11984, -8924
11988, -8926
11993, -8928
11997, -8930
12002, -8932
12006, -8934
12011, -8936
12015, -8938
12019, -8940
12024, -8942
12028, -8944
12033, -8946
12038, -8949
12043, -8951
12047, -8953
12051, -8955
12059, -8961
12064, -8963
12069, -8965
12073, -8967
12077, -8969
12084, -8973
12091, -8977
12095, -8979
12100, -8981
12110, -8990
12128, -9005
12136, -9010
12141, -9013
12149, -9018
12158, -9025
12182, -9047
12203, -9065
12222, -9082
12226, -9084
12236, -9090
12242, -9094
12253, -9103
12258, -9106
12276, -9122
12282, -9124
12287, -9127
12301, -9139
12306, -9141
12311, -9143
12315, -9146
12393, -9221
12429, -9255
12434, -9257
12481, -9302
12494, -9312
12504, -9320
12513, -9326
12521, -9332
12529, -9338
12541, -9347
12548, -9352
12563, -9364
12570, -9369
12581, -9377
12589, -9383
12602, -9394
12608, -9397
12615, -9401
12621, -9405
12628, -9409
12648, -9427
12661, -9437
12669, -9444
12679, -9451
12686, -9455
12694, -9461
12702, -9466
12707, -9469
12711, -9471
12717, -9474
12721, -9476
12726, -9478
12739, -9489
12745, -9492
12749, -9494
12754, -9497
12759, -9500
12764, -9502
12768, -9504
12773, -9506
12777, -9508
12787, -9515
12792, -9518
12798, -9521
12802, -9523
12809, -9527
12814, -9530
12819, -9532
12823, -9534
12828, -9536
12833, -9539
12840, -9543
12844, -9546
12849, -9548
12854, -9550
12858, -9552
12863, -9555
12868, -9557
12872, -9558
12877, -9561
12882, -9564
12887, -9566
12892, -9569
12897, -9572
12902, -9574
12906, -9576
12911, -9578
12915, -9580
12920, -9582
12924, -9584
12928, -9586
12933, -9587
12937, -9590
12942, -9592
12947, -9594
12951, -9596
12956, -9598
12960, -9600
12964, -9602
12970, -9605
12974, -9607
12981, -9611
12985, -9613
12990, -9615
12994, -9617
12999, -9619
13003, -9621
13007, -9623
13012, -9625
13017, -9628
13023, -9631
13027, -9633
13032, -9635
13036, -9637
13052, -9651
13058, -9655
13063, -9657
13068, -9659
13072, -9661
13078, -9664
13084, -9668
13089, -9671
13093, -9673
13098, -9675
13102, -9676
13111, -9683
13116, -9685
13120, -9687
13124, -9689
13130, -9692
13135, -9695
13139, -9697
13144, -9699
13151, -9703
13155, -9705
13160, -9707
13174, -9719
13178, -9721
13183, -9723
13192, -9730
13200, -9736
13210, -9743
13223, -9753
13234, -9762
13250, -9775
13303, -9826
13317, -9837
13321, -9839
13355, -9871
13365, -9879
13370, -9880
13394, -9902
13403, -9909
13407, -9911
13414, -9915
13457, -9956
13463, -9959
13468, -9962
13473, -9964
13494, -9982
13500, -9986
13507, -9991
13513, -9994
13517, -9996
13544, -10021
13551, -10025
13567, -10039
13575, -10045
13587, -10053
13615, -10079
13689, -10151
13703, -10163
13719, -10176
13733, -10188
13739, -10192
13749, -10199
13754, -10201
13761, -10206
13770, -10212
13780, -10220
13790, -10228
13798, -10233
13806, -10239
13819, -10249
13826, -10254
13834, -10259
13850, -10273
13860, -10281
13866, -10284
13880, -10295
13886, -10299
13896, -10307
13901, -10309
13920, -10326
13929, -10333
13937, -10338
13945, -10343
13956, -10352
13961, -10355
13969, -10360
13976, -10365
13983, -10369
13997, -10381
14006, -10387
14010, -10389
14015, -10391
14020, -10394
14026, -10397
14053, -10423
14062, -10429
14073, -10437
14081, -10443
14119, -10478
14130, -10487
14136, -10491
14142, -10494
14148, -10498
14153, -10501
14162, -10507
14170, -10512
14177, -10517
14182, -10519
14209, -10544
14216, -10549
14221, -10551
14226, -10554
14230, -10556
14243, -10566
14256, -10576
14260, -10578
14265, -10580
14272, -10585
14277, -10588
14282, -10590
14286, -10592
14291, -10594
14296, -10597
14302, -10600
14310, -10606
14314, -10608
14330, -10621
14334, -10623
14342, -10628
14381, -10665
14390, -10672
14401, -10680
14408, -10685
14415, -10690
14424, -10696
14439, -10709
14445, -10711
14455, -10719
14469, -10731
14476, -10735
14483, -10740
14584, -10839
14595, -10847
14601, -10851
14610, -10857
14614, -10859
14621, -10864
14628, -10868
14638, -10875
14649, -10884
14655, -10888
14671, -10901
14687, -10915
14701, -10926
14725, -10948
14740, -10960
14749, -10967
14757, -10972
14761, -10975
14766, -10976
14771, -10979
14780, -10986
14792, -10995
14811, -11012
14816, -11014
14821, -11017
14827, -11021
14834, -11025
14839, -11028
14843, -11030
14848, -11032
14852, -11034
14859, -11038
14864, -11040
14868, -11042
14874, -11045
14878, -11047
14883, -11050
14887, -11052
14892, -11054
14897, -11056
14902, -11059
14907, -11062
14913, -11065
14918, -11068
14922, -11070
14927, -11072
14932, -11074
14937, -11077
14942, -11079
14947, -11082
14951, -11084
14955, -11086
14960, -11087
14964, -11089
14968, -11091
14973, -11093
14977, -11095
14982, -11098
14987, -11100
14991, -11102
14997, -11105
Rows returned: 1596

-- Client slack over time, client 1
-- export client-slack-client-1.csv
SELECT (ts - (SELECT min(ts) FROM request WHERE event = 'CLIENT_SLACK' AND nodeId = -1)) as usec, latency
FROM request
WHERE event = 'CLIENT_SLACK' AND nodeId = -1
-- (usec, slack[us])
Query time: 0.000 seconds
Rows returned: 0

-- Client slack over time, client 2
-- export client-slack-client-2.csv
SELECT (ts - (SELECT min(ts) FROM request WHERE event = 'CLIENT_SLACK' AND nodeId = -2)) as usec, latency
FROM request
WHERE event = 'CLIENT_SLACK' AND nodeId = -2
-- (usec, slack[us])
Query time: 0.000 seconds
Rows returned: 0

-- Message batch size histogram
-- export histogram-msg-batch-size.csv
--
SELECT val, count()
FROM protocol_truncated
WHERE event = 'MSG_BATCH'
GROUP BY val
--(batchsize[req], count[batches])
Query time: 0.000 seconds
Rows returned: 0

-- Message batch sizes over time
-- export timeline-avg-msg-batch.csv
SELECT (ts - (SELECT min(ts) FROM protocol WHERE event = 'MSG_BATCH'))/1000 as msec, avg(val)
from protocol
WHERE event = 'MSG_BATCH'
GROUP BY msec
-- (msec, avgbatch[req])
Query time: 0.000 seconds
0, 1.0
4, 5.0
5, 4.0
6, 1.0
9, 4.0
10, 3.0
12, 1.0
14, 1.0
Rows returned: 8

-- Bandwidths between all pairs of peers.
-- The output of this query is meant for further processing by another scripts that formats the data as a table.
-- export bandwidths-list.csv
SELECT nodeId as sender, seqNr as receiver, val as bandwidth
FROM protocol
WHERE event = 'BANDWIDTH'
-- (sender, receiver, bandwidth[kB/s])
Query time: 0.000 seconds
Rows returned: 0

-- Leaders in epochs.
-- export epoch-leaders.csv
SELECT seqNr as epoch, avg(val) as leaders
FROM protocol
WHERE event = 'NEW_EPOCH'
group by epoch
Query time: 0.000 seconds
0, 4.0
Rows returned: 1

-- View changes, from view 0 to view 1 only.
-- export timeline-view-change-first.csv
SELECT (ts - (SELECT min(ts) FROM protocol WHERE event = 'NEW_EPOCH'))/1000 as msec, count()
from protocol
WHERE event = 'VIEW_CHANGE' AND val = 1
GROUP BY msec
Query time: 0.000 seconds
Rows returned: 0

-- Cascading view changes.
-- export timeline-view-change-cascade.csv
SELECT (ts - (SELECT min(ts) FROM protocol WHERE event = 'NEW_EPOCH'))/1000 as msec, count()
from protocol
WHERE event = 'VIEW_CHANGE' AND val > 1
GROUP BY msec
Query time: 0.000 seconds
Rows returned: 0

-- All view changes.
-- export timeline-view-change-all.csv
SELECT (ts - (SELECT min(ts) FROM protocol WHERE event = 'NEW_EPOCH'))/1000 as msec, count()
from protocol
WHERE event = 'VIEW_CHANGE'
GROUP BY msec
Query time: 0.000 seconds
Rows returned: 0

Total running time: 0.021 seconds
