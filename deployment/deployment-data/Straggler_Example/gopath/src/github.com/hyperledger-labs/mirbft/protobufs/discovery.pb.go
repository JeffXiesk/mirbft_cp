// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1-devel
// 	protoc        (unknown)
// source: discovery.proto

package protobufs

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExecSignal_Signum int32

const (
	ExecSignal_DEFAULT ExecSignal_Signum = 0
	ExecSignal_SIGHUP  ExecSignal_Signum = 1
	ExecSignal_SIGINT  ExecSignal_Signum = 2
	ExecSignal_SIGKILL ExecSignal_Signum = 9
	ExecSignal_SIGUSR1 ExecSignal_Signum = 10
	ExecSignal_SIGUSR2 ExecSignal_Signum = 12
	ExecSignal_SIGTERM ExecSignal_Signum = 15
)

// Enum value maps for ExecSignal_Signum.
var (
	ExecSignal_Signum_name = map[int32]string{
		0:  "DEFAULT",
		1:  "SIGHUP",
		2:  "SIGINT",
		9:  "SIGKILL",
		10: "SIGUSR1",
		12: "SIGUSR2",
		15: "SIGTERM",
	}
	ExecSignal_Signum_value = map[string]int32{
		"DEFAULT": 0,
		"SIGHUP":  1,
		"SIGINT":  2,
		"SIGKILL": 9,
		"SIGUSR1": 10,
		"SIGUSR2": 12,
		"SIGTERM": 15,
	}
)

func (x ExecSignal_Signum) Enum() *ExecSignal_Signum {
	p := new(ExecSignal_Signum)
	*p = x
	return p
}

func (x ExecSignal_Signum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExecSignal_Signum) Descriptor() protoreflect.EnumDescriptor {
	return file_discovery_proto_enumTypes[0].Descriptor()
}

func (ExecSignal_Signum) Type() protoreflect.EnumType {
	return &file_discovery_proto_enumTypes[0]
}

func (x ExecSignal_Signum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExecSignal_Signum.Descriptor instead.
func (ExecSignal_Signum) EnumDescriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{12, 0}
}

type RegisterPeerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicAddr  string `protobuf:"bytes,1,opt,name=public_addr,json=publicAddr,proto3" json:"public_addr,omitempty"`
	PrivateAddr string `protobuf:"bytes,2,opt,name=private_addr,json=privateAddr,proto3" json:"private_addr,omitempty"`
}

func (x *RegisterPeerRequest) Reset() {
	*x = RegisterPeerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discovery_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterPeerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterPeerRequest) ProtoMessage() {}

func (x *RegisterPeerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterPeerRequest.ProtoReflect.Descriptor instead.
func (*RegisterPeerRequest) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterPeerRequest) GetPublicAddr() string {
	if x != nil {
		return x.PublicAddr
	}
	return ""
}

func (x *RegisterPeerRequest) GetPrivateAddr() string {
	if x != nil {
		return x.PrivateAddr
	}
	return ""
}

// Contains identities of all registered peers and
// a newly assigned ID of the requesting peer.
type RegisterPeerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewPeerId        int32           `protobuf:"varint,1,opt,name=new_peer_id,json=newPeerId,proto3" json:"new_peer_id,omitempty"`
	PrivKey          []byte          `protobuf:"bytes,2,opt,name=priv_key,json=privKey,proto3" json:"priv_key,omitempty"`
	TblsPubKey       []byte          `protobuf:"bytes,3,opt,name=tbls_pub_key,json=tblsPubKey,proto3" json:"tbls_pub_key,omitempty"`
	TblsPrivKeyShare []byte          `protobuf:"bytes,4,opt,name=tbls_priv_key_share,json=tblsPrivKeyShare,proto3" json:"tbls_priv_key_share,omitempty"`
	Peers            []*NodeIdentity `protobuf:"bytes,5,rep,name=peers,proto3" json:"peers,omitempty"`
}

func (x *RegisterPeerResponse) Reset() {
	*x = RegisterPeerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discovery_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterPeerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterPeerResponse) ProtoMessage() {}

func (x *RegisterPeerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterPeerResponse.ProtoReflect.Descriptor instead.
func (*RegisterPeerResponse) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterPeerResponse) GetNewPeerId() int32 {
	if x != nil {
		return x.NewPeerId
	}
	return 0
}

func (x *RegisterPeerResponse) GetPrivKey() []byte {
	if x != nil {
		return x.PrivKey
	}
	return nil
}

func (x *RegisterPeerResponse) GetTblsPubKey() []byte {
	if x != nil {
		return x.TblsPubKey
	}
	return nil
}

func (x *RegisterPeerResponse) GetTblsPrivKeyShare() []byte {
	if x != nil {
		return x.TblsPrivKeyShare
	}
	return nil
}

func (x *RegisterPeerResponse) GetPeers() []*NodeIdentity {
	if x != nil {
		return x.Peers
	}
	return nil
}

type SyncRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerId int32 `protobuf:"varint,1,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
}

func (x *SyncRequest) Reset() {
	*x = SyncRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discovery_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncRequest) ProtoMessage() {}

func (x *SyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncRequest.ProtoReflect.Descriptor instead.
func (*SyncRequest) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{2}
}

func (x *SyncRequest) GetPeerId() int32 {
	if x != nil {
		return x.PeerId
	}
	return 0
}

type SyncResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SyncResponse) Reset() {
	*x = SyncResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discovery_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncResponse) ProtoMessage() {}

func (x *SyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncResponse.ProtoReflect.Descriptor instead.
func (*SyncResponse) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{3}
}

type RegisterClientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RegisterClientRequest) Reset() {
	*x = RegisterClientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discovery_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterClientRequest) ProtoMessage() {}

func (x *RegisterClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterClientRequest.ProtoReflect.Descriptor instead.
func (*RegisterClientRequest) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{4}
}

// Contains identities of all registered peers and
// a newly assigned ID of the requesting client.
type RegisterClientResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewClientId int32           `protobuf:"varint,1,opt,name=new_client_id,json=newClientId,proto3" json:"new_client_id,omitempty"`
	Peers       []*NodeIdentity `protobuf:"bytes,2,rep,name=peers,proto3" json:"peers,omitempty"`
}

func (x *RegisterClientResponse) Reset() {
	*x = RegisterClientResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discovery_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterClientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterClientResponse) ProtoMessage() {}

func (x *RegisterClientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterClientResponse.ProtoReflect.Descriptor instead.
func (*RegisterClientResponse) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{5}
}

func (x *RegisterClientResponse) GetNewClientId() int32 {
	if x != nil {
		return x.NewClientId
	}
	return 0
}

func (x *RegisterClientResponse) GetPeers() []*NodeIdentity {
	if x != nil {
		return x.Peers
	}
	return nil
}

type SlaveStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CmdId   int32  `protobuf:"varint,1,opt,name=cmd_id,json=cmdId,proto3" json:"cmd_id,omitempty"`
	SlaveId int32  `protobuf:"varint,2,opt,name=slave_id,json=slaveId,proto3" json:"slave_id,omitempty"`
	Status  int32  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Message string `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Tag     string `protobuf:"bytes,5,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *SlaveStatus) Reset() {
	*x = SlaveStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discovery_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlaveStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlaveStatus) ProtoMessage() {}

func (x *SlaveStatus) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlaveStatus.ProtoReflect.Descriptor instead.
func (*SlaveStatus) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{6}
}

func (x *SlaveStatus) GetCmdId() int32 {
	if x != nil {
		return x.CmdId
	}
	return 0
}

func (x *SlaveStatus) GetSlaveId() int32 {
	if x != nil {
		return x.SlaveId
	}
	return 0
}

func (x *SlaveStatus) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SlaveStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SlaveStatus) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type MasterCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CmdId int32 `protobuf:"varint,1,opt,name=cmd_id,json=cmdId,proto3" json:"cmd_id,omitempty"`
	// Types that are assignable to Cmd:
	//	*MasterCommand_InitSlave
	//	*MasterCommand_ExecStart
	//	*MasterCommand_ExecWait
	//	*MasterCommand_ExecSignal
	//	*MasterCommand_Noop
	//	*MasterCommand_Stop
	Cmd isMasterCommand_Cmd `protobuf_oneof:"cmd"`
}

func (x *MasterCommand) Reset() {
	*x = MasterCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discovery_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MasterCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasterCommand) ProtoMessage() {}

func (x *MasterCommand) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MasterCommand.ProtoReflect.Descriptor instead.
func (*MasterCommand) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{7}
}

func (x *MasterCommand) GetCmdId() int32 {
	if x != nil {
		return x.CmdId
	}
	return 0
}

func (m *MasterCommand) GetCmd() isMasterCommand_Cmd {
	if m != nil {
		return m.Cmd
	}
	return nil
}

func (x *MasterCommand) GetInitSlave() *InitSlave {
	if x, ok := x.GetCmd().(*MasterCommand_InitSlave); ok {
		return x.InitSlave
	}
	return nil
}

func (x *MasterCommand) GetExecStart() *ExecStart {
	if x, ok := x.GetCmd().(*MasterCommand_ExecStart); ok {
		return x.ExecStart
	}
	return nil
}

func (x *MasterCommand) GetExecWait() *ExecWait {
	if x, ok := x.GetCmd().(*MasterCommand_ExecWait); ok {
		return x.ExecWait
	}
	return nil
}

func (x *MasterCommand) GetExecSignal() *ExecSignal {
	if x, ok := x.GetCmd().(*MasterCommand_ExecSignal); ok {
		return x.ExecSignal
	}
	return nil
}

func (x *MasterCommand) GetNoop() *Noop {
	if x, ok := x.GetCmd().(*MasterCommand_Noop); ok {
		return x.Noop
	}
	return nil
}

func (x *MasterCommand) GetStop() *Stop {
	if x, ok := x.GetCmd().(*MasterCommand_Stop); ok {
		return x.Stop
	}
	return nil
}

type isMasterCommand_Cmd interface {
	isMasterCommand_Cmd()
}

type MasterCommand_InitSlave struct {
	InitSlave *InitSlave `protobuf:"bytes,2,opt,name=init_slave,json=initSlave,proto3,oneof"`
}

type MasterCommand_ExecStart struct {
	ExecStart *ExecStart `protobuf:"bytes,3,opt,name=exec_start,json=execStart,proto3,oneof"`
}

type MasterCommand_ExecWait struct {
	ExecWait *ExecWait `protobuf:"bytes,4,opt,name=exec_wait,json=execWait,proto3,oneof"`
}

type MasterCommand_ExecSignal struct {
	ExecSignal *ExecSignal `protobuf:"bytes,5,opt,name=exec_signal,json=execSignal,proto3,oneof"`
}

type MasterCommand_Noop struct {
	Noop *Noop `protobuf:"bytes,6,opt,name=noop,proto3,oneof"`
}

type MasterCommand_Stop struct {
	Stop *Stop `protobuf:"bytes,7,opt,name=stop,proto3,oneof"`
}

func (*MasterCommand_InitSlave) isMasterCommand_Cmd() {}

func (*MasterCommand_ExecStart) isMasterCommand_Cmd() {}

func (*MasterCommand_ExecWait) isMasterCommand_Cmd() {}

func (*MasterCommand_ExecSignal) isMasterCommand_Cmd() {}

func (*MasterCommand_Noop) isMasterCommand_Cmd() {}

func (*MasterCommand_Stop) isMasterCommand_Cmd() {}

type InitSlave struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlaveId int32 `protobuf:"varint,1,opt,name=slave_id,json=slaveId,proto3" json:"slave_id,omitempty"`
}

func (x *InitSlave) Reset() {
	*x = InitSlave{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discovery_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitSlave) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitSlave) ProtoMessage() {}

func (x *InitSlave) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitSlave.ProtoReflect.Descriptor instead.
func (*InitSlave) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{8}
}

func (x *InitSlave) GetSlaveId() int32 {
	if x != nil {
		return x.SlaveId
	}
	return 0
}

type ExecStart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	OutputFileName string   `protobuf:"bytes,2,opt,name=output_file_name,json=outputFileName,proto3" json:"output_file_name,omitempty"`
	Args           []string `protobuf:"bytes,3,rep,name=args,proto3" json:"args,omitempty"`
}

func (x *ExecStart) Reset() {
	*x = ExecStart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discovery_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecStart) ProtoMessage() {}

func (x *ExecStart) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecStart.ProtoReflect.Descriptor instead.
func (*ExecStart) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{9}
}

func (x *ExecStart) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExecStart) GetOutputFileName() string {
	if x != nil {
		return x.OutputFileName
	}
	return ""
}

func (x *ExecStart) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

type ExecWait struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timeout int32 `protobuf:"varint,1,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *ExecWait) Reset() {
	*x = ExecWait{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discovery_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecWait) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecWait) ProtoMessage() {}

func (x *ExecWait) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecWait.ProtoReflect.Descriptor instead.
func (*ExecWait) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{10}
}

func (x *ExecWait) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

type Noop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Noop) Reset() {
	*x = Noop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discovery_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Noop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Noop) ProtoMessage() {}

func (x *Noop) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Noop.ProtoReflect.Descriptor instead.
func (*Noop) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{11}
}

type ExecSignal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signum ExecSignal_Signum `protobuf:"varint,1,opt,name=signum,proto3,enum=protobufs.ExecSignal_Signum" json:"signum,omitempty"`
}

func (x *ExecSignal) Reset() {
	*x = ExecSignal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discovery_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecSignal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecSignal) ProtoMessage() {}

func (x *ExecSignal) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecSignal.ProtoReflect.Descriptor instead.
func (*ExecSignal) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{12}
}

func (x *ExecSignal) GetSignum() ExecSignal_Signum {
	if x != nil {
		return x.Signum
	}
	return ExecSignal_DEFAULT
}

type Stop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Stop) Reset() {
	*x = Stop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discovery_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stop) ProtoMessage() {}

func (x *Stop) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stop.ProtoReflect.Descriptor instead.
func (*Stop) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{13}
}

var File_discovery_proto protoreflect.FileDescriptor

var file_discovery_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x73, 0x1a, 0x12, 0x6e, 0x6f,
	0x64, 0x65, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x59, 0x0a, 0x13, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x65, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x41, 0x64, 0x64, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x22, 0xd1, 0x01, 0x0a, 0x14,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x65, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x65, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x50, 0x65,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x76, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x4b, 0x65, 0x79, 0x12,
	0x20, 0x0a, 0x0c, 0x74, 0x62, 0x6c, 0x73, 0x5f, 0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x74, 0x62, 0x6c, 0x73, 0x50, 0x75, 0x62, 0x4b, 0x65,
	0x79, 0x12, 0x2d, 0x0a, 0x13, 0x74, 0x62, 0x6c, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x5f, 0x6b,
	0x65, 0x79, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10,
	0x74, 0x62, 0x6c, 0x73, 0x50, 0x72, 0x69, 0x76, 0x4b, 0x65, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x12, 0x2d, 0x0a, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x73, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x22,
	0x26, 0x0a, 0x0b, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x22, 0x0e, 0x0a, 0x0c, 0x53, 0x79, 0x6e, 0x63, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x6b, 0x0a, 0x16, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x6e, 0x65,
	0x77, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2d,
	0x0a, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x73, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x22, 0x83, 0x01,
	0x0a, 0x0b, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x15, 0x0a,
	0x06, 0x63, 0x6d, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63,
	0x6d, 0x64, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x74, 0x61, 0x67, 0x22, 0xd7, 0x02, 0x0a, 0x0d, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x63, 0x6d, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x0a,
	0x69, 0x6e, 0x69, 0x74, 0x5f, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x73, 0x2e, 0x49, 0x6e, 0x69,
	0x74, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x48, 0x00, 0x52, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x53, 0x6c,
	0x61, 0x76, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x5f, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x73, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x53, 0x74, 0x61, 0x72, 0x74, 0x48, 0x00, 0x52,
	0x09, 0x65, 0x78, 0x65, 0x63, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x32, 0x0a, 0x09, 0x65, 0x78,
	0x65, 0x63, 0x5f, 0x77, 0x61, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x73, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x57, 0x61,
	0x69, 0x74, 0x48, 0x00, 0x52, 0x08, 0x65, 0x78, 0x65, 0x63, 0x57, 0x61, 0x69, 0x74, 0x12, 0x38,
	0x0a, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x73, 0x2e,
	0x45, 0x78, 0x65, 0x63, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x0a, 0x65, 0x78,
	0x65, 0x63, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x25, 0x0a, 0x04, 0x6e, 0x6f, 0x6f, 0x70,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x73, 0x2e, 0x4e, 0x6f, 0x6f, 0x70, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x6f, 0x6f, 0x70, 0x12,
	0x25, 0x0a, 0x04, 0x73, 0x74, 0x6f, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x48, 0x00,
	0x52, 0x04, 0x73, 0x74, 0x6f, 0x70, 0x42, 0x05, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x22, 0x26, 0x0a,
	0x09, 0x49, 0x6e, 0x69, 0x74, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6c,
	0x61, 0x76, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x6c,
	0x61, 0x76, 0x65, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x09, 0x45, 0x78, 0x65, 0x63, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04,
	0x61, 0x72, 0x67, 0x73, 0x22, 0x24, 0x0a, 0x08, 0x45, 0x78, 0x65, 0x63, 0x57, 0x61, 0x69, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x06, 0x0a, 0x04, 0x4e, 0x6f,
	0x6f, 0x70, 0x22, 0xa5, 0x01, 0x0a, 0x0a, 0x45, 0x78, 0x65, 0x63, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x73, 0x2e, 0x45, 0x78,
	0x65, 0x63, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x6d, 0x52,
	0x06, 0x73, 0x69, 0x67, 0x6e, 0x75, 0x6d, 0x22, 0x61, 0x0a, 0x06, 0x53, 0x69, 0x67, 0x6e, 0x75,
	0x6d, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12, 0x0a,
	0x0a, 0x06, 0x53, 0x49, 0x47, 0x48, 0x55, 0x50, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x49,
	0x47, 0x49, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x49, 0x47, 0x4b, 0x49, 0x4c,
	0x4c, 0x10, 0x09, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x49, 0x47, 0x55, 0x53, 0x52, 0x31, 0x10, 0x0a,
	0x12, 0x0b, 0x0a, 0x07, 0x53, 0x49, 0x47, 0x55, 0x53, 0x52, 0x32, 0x10, 0x0c, 0x12, 0x0b, 0x0a,
	0x07, 0x53, 0x49, 0x47, 0x54, 0x45, 0x52, 0x4d, 0x10, 0x0f, 0x22, 0x06, 0x0a, 0x04, 0x53, 0x74,
	0x6f, 0x70, 0x32, 0xb9, 0x02, 0x0a, 0x09, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
	0x12, 0x51, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x65, 0x65, 0x72,
	0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x73, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x65, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x73, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x65, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x08, 0x53, 0x79, 0x6e, 0x63, 0x50, 0x65, 0x65, 0x72, 0x12,
	0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x73, 0x2e, 0x53, 0x79, 0x6e, 0x63,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x73, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x57, 0x0a, 0x0e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x73,
	0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0b, 0x4e,
	0x65, 0x78, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x73, 0x2e, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x73, 0x2e, 0x4d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x00, 0x42, 0x0e,
	0x5a, 0x0c, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_discovery_proto_rawDescOnce sync.Once
	file_discovery_proto_rawDescData = file_discovery_proto_rawDesc
)

func file_discovery_proto_rawDescGZIP() []byte {
	file_discovery_proto_rawDescOnce.Do(func() {
		file_discovery_proto_rawDescData = protoimpl.X.CompressGZIP(file_discovery_proto_rawDescData)
	})
	return file_discovery_proto_rawDescData
}

var file_discovery_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_discovery_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_discovery_proto_goTypes = []interface{}{
	(ExecSignal_Signum)(0),         // 0: protobufs.ExecSignal.Signum
	(*RegisterPeerRequest)(nil),    // 1: protobufs.RegisterPeerRequest
	(*RegisterPeerResponse)(nil),   // 2: protobufs.RegisterPeerResponse
	(*SyncRequest)(nil),            // 3: protobufs.SyncRequest
	(*SyncResponse)(nil),           // 4: protobufs.SyncResponse
	(*RegisterClientRequest)(nil),  // 5: protobufs.RegisterClientRequest
	(*RegisterClientResponse)(nil), // 6: protobufs.RegisterClientResponse
	(*SlaveStatus)(nil),            // 7: protobufs.SlaveStatus
	(*MasterCommand)(nil),          // 8: protobufs.MasterCommand
	(*InitSlave)(nil),              // 9: protobufs.InitSlave
	(*ExecStart)(nil),              // 10: protobufs.ExecStart
	(*ExecWait)(nil),               // 11: protobufs.ExecWait
	(*Noop)(nil),                   // 12: protobufs.Noop
	(*ExecSignal)(nil),             // 13: protobufs.ExecSignal
	(*Stop)(nil),                   // 14: protobufs.Stop
	(*NodeIdentity)(nil),           // 15: protobufs.NodeIdentity
}
var file_discovery_proto_depIdxs = []int32{
	15, // 0: protobufs.RegisterPeerResponse.peers:type_name -> protobufs.NodeIdentity
	15, // 1: protobufs.RegisterClientResponse.peers:type_name -> protobufs.NodeIdentity
	9,  // 2: protobufs.MasterCommand.init_slave:type_name -> protobufs.InitSlave
	10, // 3: protobufs.MasterCommand.exec_start:type_name -> protobufs.ExecStart
	11, // 4: protobufs.MasterCommand.exec_wait:type_name -> protobufs.ExecWait
	13, // 5: protobufs.MasterCommand.exec_signal:type_name -> protobufs.ExecSignal
	12, // 6: protobufs.MasterCommand.noop:type_name -> protobufs.Noop
	14, // 7: protobufs.MasterCommand.stop:type_name -> protobufs.Stop
	0,  // 8: protobufs.ExecSignal.signum:type_name -> protobufs.ExecSignal.Signum
	1,  // 9: protobufs.Discovery.RegisterPeer:input_type -> protobufs.RegisterPeerRequest
	3,  // 10: protobufs.Discovery.SyncPeer:input_type -> protobufs.SyncRequest
	5,  // 11: protobufs.Discovery.RegisterClient:input_type -> protobufs.RegisterClientRequest
	7,  // 12: protobufs.Discovery.NextCommand:input_type -> protobufs.SlaveStatus
	2,  // 13: protobufs.Discovery.RegisterPeer:output_type -> protobufs.RegisterPeerResponse
	4,  // 14: protobufs.Discovery.SyncPeer:output_type -> protobufs.SyncResponse
	6,  // 15: protobufs.Discovery.RegisterClient:output_type -> protobufs.RegisterClientResponse
	8,  // 16: protobufs.Discovery.NextCommand:output_type -> protobufs.MasterCommand
	13, // [13:17] is the sub-list for method output_type
	9,  // [9:13] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_discovery_proto_init() }
func file_discovery_proto_init() {
	if File_discovery_proto != nil {
		return
	}
	file_nodeidentity_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_discovery_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterPeerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discovery_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterPeerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discovery_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discovery_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discovery_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterClientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discovery_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterClientResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discovery_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlaveStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discovery_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MasterCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discovery_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitSlave); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discovery_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecStart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discovery_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecWait); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discovery_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Noop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discovery_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecSignal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discovery_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_discovery_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*MasterCommand_InitSlave)(nil),
		(*MasterCommand_ExecStart)(nil),
		(*MasterCommand_ExecWait)(nil),
		(*MasterCommand_ExecSignal)(nil),
		(*MasterCommand_Noop)(nil),
		(*MasterCommand_Stop)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_discovery_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_discovery_proto_goTypes,
		DependencyIndexes: file_discovery_proto_depIdxs,
		EnumInfos:         file_discovery_proto_enumTypes,
		MessageInfos:      file_discovery_proto_msgTypes,
	}.Build()
	File_discovery_proto = out.File
	file_discovery_proto_rawDesc = nil
	file_discovery_proto_goTypes = nil
	file_discovery_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DiscoveryClient is the client API for Discovery service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DiscoveryClient interface {
	// Discovers the identities of other peers.
	// Every new peer invokes RegisterPeer at startup.
	// When the server (knowing the number of nodes to wait for) receives
	// all requests, it responds to each peer with the list of
	// identities generated for each peer and a newly assigned peer id.
	RegisterPeer(ctx context.Context, in *RegisterPeerRequest, opts ...grpc.CallOption) (*RegisterPeerResponse, error)
	// Synchronizes the current peers.
	// When a peer initializes connections with other peers, it invokes the SyncPeer RPC.
	// Similarly to RegisterPeer, the RPC returns when all peers have invoked SyncPeer, releasing them simultaneously.
	SyncPeer(ctx context.Context, in *SyncRequest, opts ...grpc.CallOption) (*SyncResponse, error)
	// Registers a client of the ordering system.
	// Returns the identities of all ordering peers (i.e. nodes executing the ordering protocol)
	// and a newly assigned client ID.
	RegisterClient(ctx context.Context, in *RegisterClientRequest, opts ...grpc.CallOption) (*RegisterClientResponse, error)
	// Called by the slave to ask the master (server) for the next command to execute.
	NextCommand(ctx context.Context, in *SlaveStatus, opts ...grpc.CallOption) (*MasterCommand, error)
}

type discoveryClient struct {
	cc grpc.ClientConnInterface
}

func NewDiscoveryClient(cc grpc.ClientConnInterface) DiscoveryClient {
	return &discoveryClient{cc}
}

func (c *discoveryClient) RegisterPeer(ctx context.Context, in *RegisterPeerRequest, opts ...grpc.CallOption) (*RegisterPeerResponse, error) {
	out := new(RegisterPeerResponse)
	err := c.cc.Invoke(ctx, "/protobufs.Discovery/RegisterPeer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discoveryClient) SyncPeer(ctx context.Context, in *SyncRequest, opts ...grpc.CallOption) (*SyncResponse, error) {
	out := new(SyncResponse)
	err := c.cc.Invoke(ctx, "/protobufs.Discovery/SyncPeer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discoveryClient) RegisterClient(ctx context.Context, in *RegisterClientRequest, opts ...grpc.CallOption) (*RegisterClientResponse, error) {
	out := new(RegisterClientResponse)
	err := c.cc.Invoke(ctx, "/protobufs.Discovery/RegisterClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discoveryClient) NextCommand(ctx context.Context, in *SlaveStatus, opts ...grpc.CallOption) (*MasterCommand, error) {
	out := new(MasterCommand)
	err := c.cc.Invoke(ctx, "/protobufs.Discovery/NextCommand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DiscoveryServer is the server API for Discovery service.
type DiscoveryServer interface {
	// Discovers the identities of other peers.
	// Every new peer invokes RegisterPeer at startup.
	// When the server (knowing the number of nodes to wait for) receives
	// all requests, it responds to each peer with the list of
	// identities generated for each peer and a newly assigned peer id.
	RegisterPeer(context.Context, *RegisterPeerRequest) (*RegisterPeerResponse, error)
	// Synchronizes the current peers.
	// When a peer initializes connections with other peers, it invokes the SyncPeer RPC.
	// Similarly to RegisterPeer, the RPC returns when all peers have invoked SyncPeer, releasing them simultaneously.
	SyncPeer(context.Context, *SyncRequest) (*SyncResponse, error)
	// Registers a client of the ordering system.
	// Returns the identities of all ordering peers (i.e. nodes executing the ordering protocol)
	// and a newly assigned client ID.
	RegisterClient(context.Context, *RegisterClientRequest) (*RegisterClientResponse, error)
	// Called by the slave to ask the master (server) for the next command to execute.
	NextCommand(context.Context, *SlaveStatus) (*MasterCommand, error)
}

// UnimplementedDiscoveryServer can be embedded to have forward compatible implementations.
type UnimplementedDiscoveryServer struct {
}

func (*UnimplementedDiscoveryServer) RegisterPeer(context.Context, *RegisterPeerRequest) (*RegisterPeerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterPeer not implemented")
}
func (*UnimplementedDiscoveryServer) SyncPeer(context.Context, *SyncRequest) (*SyncResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SyncPeer not implemented")
}
func (*UnimplementedDiscoveryServer) RegisterClient(context.Context, *RegisterClientRequest) (*RegisterClientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterClient not implemented")
}
func (*UnimplementedDiscoveryServer) NextCommand(context.Context, *SlaveStatus) (*MasterCommand, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NextCommand not implemented")
}

func RegisterDiscoveryServer(s *grpc.Server, srv DiscoveryServer) {
	s.RegisterService(&_Discovery_serviceDesc, srv)
}

func _Discovery_RegisterPeer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterPeerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscoveryServer).RegisterPeer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobufs.Discovery/RegisterPeer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscoveryServer).RegisterPeer(ctx, req.(*RegisterPeerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Discovery_SyncPeer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscoveryServer).SyncPeer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobufs.Discovery/SyncPeer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscoveryServer).SyncPeer(ctx, req.(*SyncRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Discovery_RegisterClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscoveryServer).RegisterClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobufs.Discovery/RegisterClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscoveryServer).RegisterClient(ctx, req.(*RegisterClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Discovery_NextCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SlaveStatus)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscoveryServer).NextCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobufs.Discovery/NextCommand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscoveryServer).NextCommand(ctx, req.(*SlaveStatus))
	}
	return interceptor(ctx, in, info, handler)
}

var _Discovery_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protobufs.Discovery",
	HandlerType: (*DiscoveryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterPeer",
			Handler:    _Discovery_RegisterPeer_Handler,
		},
		{
			MethodName: "SyncPeer",
			Handler:    _Discovery_SyncPeer_Handler,
		},
		{
			MethodName: "RegisterClient",
			Handler:    _Discovery_RegisterClient_Handler,
		},
		{
			MethodName: "NextCommand",
			Handler:    _Discovery_NextCommand_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "discovery.proto",
}
