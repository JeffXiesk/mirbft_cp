SELECT *
FROM ethereum
Query time: 0.000 seconds
Rows returned: 0

Total running time: 0.000 seconds
-- Truncate request table to include only rows with timestamps between:
--   the first response obtained by the last client to obtain a response
--   and
--   the last response obtained by the client first to finish obtaining responses
-- Then, cut off 5 seconds from each end.
-- We could use a view here too, but a physical table is much faster to access.
-- The script processing this file normally makes sure that
-- changes made by this script to the database are rolled back and are not persisted.
CREATE TABLE request_truncated as
SELECT *
FROM request
WHERE
  ts - 5000000 >= (SELECT max(t)
    FROM (SELECT min(ts) as t
      FROM request
      WHERE event = 'REQ_FINISHED'
      GROUP BY nodeId))
  AND ts + 5000000 <= (SELECT min(t)
    FROM (SELECT max(ts) as t
      FROM request
      WHERE event = 'REQ_SEND'
      GROUP BY nodeId))
Query time: 0.003 seconds
Rows returned: 0

-- Do the same as above with the protocol table.
-- Note that the truncation times are still taken from the request table.
CREATE TABLE protocol_truncated as
SELECT *
FROM protocol
WHERE
  ts - 5000000 >= (SELECT max(t)
    FROM (SELECT min(ts) as t
      FROM request
      WHERE event = 'REQ_FINISHED'
      GROUP BY nodeId))
  AND ts + 5000000 <= (SELECT min(t)
    FROM (SELECT max(ts) as t
      FROM request
      WHERE event = 'REQ_SEND'
      GROUP BY nodeId))
Query time: 0.001 seconds
Rows returned: 0

-- Do the same as above with the CPU usage table.
-- Note that the truncation times are still taken from the request table.
CREATE TABLE cpuusage_truncated as
SELECT *
FROM cpuusage
WHERE
            ts - 5000000 >= (SELECT max(t)
                             FROM (SELECT min(ts) as t
                                   FROM request
                                   WHERE event = 'REQ_FINISHED'
                                   GROUP BY nodeId))
  AND ts + 5000000 <= (SELECT min(t)
                       FROM (SELECT max(ts) as t
                             FROM request
                             WHERE event = 'REQ_SEND'
                             GROUP BY nodeId))
Query time: 0.001 seconds
Rows returned: 0

-- Total CPU usage (average over all peers), truncated data
-- export cpu-total.val
SELECT avg(total)
from cpuusage_truncated
WHERE event = 'CPU_USAGE'
-- (totalcpu[%])
Query time: 0.000 seconds
97.54861111111111
Rows returned: 1

-- System CPU usage (average over all peers), truncated data
-- (This is the CPU usage reported under "System" in /proc/stat)
-- export cpu-system.val
SELECT avg(system)
from cpuusage_truncated
WHERE event = 'CPU_USAGE'
-- (systemcpu[%])
Query time: 0.000 seconds
68.00694444444444
Rows returned: 1

-- End-to-end average request latency, all requests
-- export latency-avg-shortened-raw.val
--
SELECT avg(r2.latency)  / 1000.0
FROM request r1 JOIN request r2 ON r1.nodeId = r2.nodeId
                                AND r1.clSn = r2.clSn
                                AND r1.event = 'REQ_SEND'
                                AND r2.event = 'REQ_FINISHED'
   WHERE r1.ts - 30000000 < (SELECT min(r1.ts)
                            FROM request r1
                            WHERE event = 'REQ_SEND')
-- (avg[ms])
Query time: 0.003 seconds
1261.0252624920938
Rows returned: 1

-- End-to-end average request latency, all requests
-- export latency-95pctile-shortened-raw.val
--
SELECT r2.latency  / 1000.0
FROM request r1 JOIN request r2 ON r1.nodeId = r2.nodeId
                                AND r1.clSn = r2.clSn
                                AND r1.event = 'REQ_SEND'
                                AND r2.event = 'REQ_FINISHED'
   WHERE r1.ts - 30000000 < (SELECT min(r1.ts)
                            FROM request r1
                            WHERE event = 'REQ_SEND')
ORDER BY r2.latency ASC
LIMIT 1
    OFFSET (SELECT count()
            FROM request r1 JOIN request r2 ON r1.nodeId = r2.nodeId
                                AND r1.clSn = r2.clSn
                                AND r1.event = 'REQ_SEND'
                                AND r2.event = 'REQ_FINISHED'
            WHERE r1.ts - 30000000 < (SELECT min(r1.ts)
                            FROM request r1
                            WHERE event = 'REQ_SEND'))* 95 / 100;
Query time: 0.007 seconds
2030.436
Rows returned: 1

-- (latency[ms])
Query time: 0.000 seconds
Rows returned: 0

-- End-to-end average request latency, all requests
-- export latency-avg-raw.val
--
SELECT avg(latency) / 1000.0
FROM request
WHERE event = 'REQ_FINISHED'
-- (avg[ms])
Query time: 0.000 seconds
1260.9928723135272
Rows returned: 1

-- Latency standard deviation, all requests
-- export latency-stdev-raw.val
--
SELECT stdev(latency) / 1000.0
FROM request
WHERE event = 'REQ_FINISHED'
-- (stdev[ms])
Query time: 0.002 seconds
462.2567169133394
Rows returned: 1

-- End-to-end average request latency, truncated requests
-- export latency-avg-trunc.val
--
SELECT avg(latency) / 1000.0
FROM request_truncated
WHERE event = 'REQ_FINISHED'
-- (avg[ms])
Query time: 0.000 seconds
1207.8729249720045
Rows returned: 1

-- Latency standard deviation, truncated requests
-- export latency-stdev-trunc.val
--
SELECT stdev(latency) / 1000.0
FROM request_truncated
WHERE event = 'REQ_FINISHED'
-- (stdev[ms])
Query time: 0.001 seconds
457.00142305538384
Rows returned: 1

-- 95th percentile request latency, all requests
-- export latency-95pctile-raw.val
--
SELECT latency / 1000.0
FROM request
WHERE event = 'REQ_FINISHED'
ORDER BY latency ASC
LIMIT 1
    OFFSET (SELECT count()
            FROM request
            WHERE event = 'REQ_FINISHED') * 95 / 100;
-- (latency[ms])
Query time: 0.001 seconds
2030.436
Rows returned: 1

-- 95th percentile request latency, truncated requests
-- export latency-95pctile-trunc.val
--
SELECT latency / 1000.0
FROM request_truncated
WHERE event = 'REQ_FINISHED'
ORDER BY latency ASC
LIMIT 1
    OFFSET (SELECT count()
            FROM request_truncated
            WHERE event = 'REQ_FINISHED') * 95 / 100;
-- (latency[ms])
Query time: 0.001 seconds
2002.76
Rows returned: 1

-- End-to-end average request latency, all requests
-- export latency-avg-raw-nowm.val
--
SELECT avg(latency) / 1000.0
FROM request
WHERE event = 'ENOUGH_RESP'
-- (avg[ms])
Query time: 0.000 seconds
1255.5529184576485
Rows returned: 1

-- Latency standard deviation, all requests
-- export latency-stdev-raw-nowm.val
--
SELECT stdev(latency) / 1000.0
FROM request
WHERE event = 'ENOUGH_RESP'
-- (stdev[ms])
Query time: 0.002 seconds
461.5003153073625
Rows returned: 1

-- End-to-end average request latency, truncated requests
-- export latency-avg-trunc-nowm.val
--
SELECT avg(latency) / 1000.0
FROM request_truncated
WHERE event = 'ENOUGH_RESP'
-- (avg[ms])
Query time: 0.000 seconds
1201.7384815229564
Rows returned: 1

-- Latency standard deviation, truncated requests
-- export latency-stdev-trunc-nowm.val
--
SELECT stdev(latency) / 1000.0
FROM request_truncated
WHERE event = 'ENOUGH_RESP'
-- (stdev[ms])
Query time: 0.001 seconds
455.7967472370969
Rows returned: 1

-- 95th percentile request latency, all requests
-- export latency-95pctile-raw-nowm.val
--
SELECT latency / 1000.0
FROM request
WHERE event = 'ENOUGH_RESP'
ORDER BY latency ASC
LIMIT 1
    OFFSET (SELECT count()
            FROM request
            WHERE event = 'ENOUGH_RESP') * 95 / 100;
-- (latency[ms])
Query time: 0.001 seconds
2026.479
Rows returned: 1

-- 95th percentile request latency, truncated requests
-- export latency-95pctile-trunc-nowm.val
--
SELECT latency / 1000.0
FROM request_truncated
WHERE event = 'ENOUGH_RESP'
ORDER BY latency ASC
LIMIT 1
    OFFSET (SELECT count()
            FROM request_truncated
            WHERE event = 'ENOUGH_RESP') * 95 / 100;
-- (latency[ms])
Query time: 0.001 seconds
2001.776
Rows returned: 1

-- Average client slack per request, all clients
-- export client-slack-avg-raw.val
--
SELECT avg(latency)
FROM request
WHERE event = 'CLIENT_SLACK'
-- (avg[us])
Query time: 0.000 seconds
-14101859.307206068
Rows returned: 1

-- Average client slack, truncated requests
-- export client-slack-avg-trunc.val
--
SELECT avg(latency)
FROM request_truncated
WHERE event = 'CLIENT_SLACK'
-- (avg[us])
Query time: 0.000 seconds
-14206436.468085106
Rows returned: 1

-- Client slack standard deviation, all requests
-- export client-slack-stdev-raw.val
--
SELECT stdev(latency)
FROM request
WHERE event = 'CLIENT_SLACK'
-- (avg[us])
Query time: 0.002 seconds
7948343.978273782
Rows returned: 1

-- Client slack standard deviation, all requests
-- export client-slack-stdev-trunc.val
--
SELECT stdev(latency)
FROM request_truncated
WHERE event = 'CLIENT_SLACK'
-- (avg[us])
Query time: 0.001 seconds
4653659.301565926
Rows returned: 1

-- 1st percentile client slack, all requests
-- export client-slack-1pctile-raw.val
--
SELECT latency
FROM request
WHERE event = 'CLIENT_SLACK'
ORDER BY latency ASC
LIMIT 1
    OFFSET (SELECT count()
            FROM request
            WHERE event = 'CLIENT_SLACK') * 1 / 100;
-- (slack[us])
Query time: 0.001 seconds
-25995216
Rows returned: 1

-- 1st percentile client slack, truncated requests
-- export client-slack-1pctile-trunc.val
--
SELECT latency
FROM request_truncated
WHERE event = 'CLIENT_SLACK'
ORDER BY latency ASC
LIMIT 1
    OFFSET (SELECT count()
            FROM request
            WHERE event = 'CLIENT_SLACK') * 1 / 100;
-- (slack[us])
Query time: 0.001 seconds
-21682977
Rows returned: 1

-- Experiment duration in seconds
-- export duration-raw.val
--
SELECT (max(ts) - min(ts))/1000000.0
FROM request
WHERE event = 'REQ_FINISHED'
-- (duration[sec])
Query time: 0.000 seconds
29.254206
Rows returned: 1

-- Experiment duration in seconds, truncated data
-- export duration-trunc.val
--
SELECT (max(ts) - min(ts))/1000000.0
FROM request_truncated
WHERE event = 'REQ_FINISHED'
-- (duration[sec])
Query time: 0.000 seconds
17.755946
Rows returned: 1

-- Total number of requests (good for sanity checks whether everything has been delivered)
-- export nreq-raw.val
--
SELECT count()
FROM request
WHERE event = 'REQ_FINISHED'
-- (count[req])
Query time: 0.000 seconds
1582
Rows returned: 1

-- Number of requests, using truncated request data
-- export nreq-trunc.val
--
SELECT count()
FROM request_truncated
WHERE event = 'REQ_FINISHED'
-- (count[req])
Query time: 0.000 seconds
893
Rows returned: 1

-- Throughput (without cutting off start and end)
-- export throughput-raw.val
--
-- !!!!! Multiplying by 10 for sampling
-- TODO parametrize the sumpling multiplier
SELECT 10 * 1000000.0 * count() / (max(ts) - min(ts))
FROM request
WHERE event = 'REQ_FINISHED'
-- (throughput[req/sec])
Query time: 0.000 seconds
540.7769399039578
Rows returned: 1

-- Throughput, using truncated request data
-- export throughput-trunc.val
--
-- !!!!! Multiplying by 10 for sampling
-- TODO parametrize the sumpling multiplier
SELECT 10 * 1000000.0 * count() / (max(ts) - min(ts))
FROM request_truncated
WHERE event = 'REQ_FINISHED'
-- (throughput[req/sec])
Query time: 0.000 seconds
502.93011704360896
Rows returned: 1

-- Average batch size
-- export batch-size-avg-trunc.val
--
SELECT avg(val)
FROM protocol_truncated
WHERE event = 'PROPOSE'
-- (avg-batch-size[req])
Query time: 0.000 seconds
143.39344262295083
Rows returned: 1

-- 10th percentile batch size
-- export batch-size-10pctile-trunc.val
--
SELECT val
FROM protocol_truncated
WHERE event = 'PROPOSE'
ORDER BY val ASC
LIMIT 1
OFFSET (SELECT count() from protocol_truncated WHERE event = 'PROPOSE') * 10 / 100
-- (10th-pctile[req])
Query time: 0.000 seconds
101
Rows returned: 1

-- 90th percentile batch size
-- export batch-size-90pctile-trunc.val
--
SELECT val
FROM protocol_truncated
WHERE event = 'PROPOSE'
ORDER BY val ASC
LIMIT 1
    OFFSET (SELECT count() from protocol_truncated WHERE event = 'PROPOSE') * 90 / 100
-- (90th-pctile[req])
Query time: 0.000 seconds
229
Rows returned: 1

-- average proposal rate
-- export propose-rate-raw.val
SELECT count(*) / ((max(ts) - min(ts))/1000000.0)
FROM protocol
WHERE event = 'PROPOSE'
-- (rate[batches/sec])
Query time: 0.000 seconds
3.486011274440659
Rows returned: 1

-- average proposal rate, truncated data
-- export propose-rate-trunc.val
SELECT count(*) / ((max(ts) - min(ts))/1000000.00)
FROM protocol_truncated
WHERE event = 'PROPOSE'
-- (rate[batches/sec])
Query time: 0.000 seconds
3.5392569741928988
Rows returned: 1

-- average commit rate
-- export commit-rate-raw.val
SELECT count(*) / ((max(ts) - min(ts))/1000000.0)
FROM protocol
WHERE event = 'COMMIT'
-- (rate[batches/sec])
Query time: 0.000 seconds
18.824699184709083
Rows returned: 1

-- average commit rate, truncated data
-- export commit-rate-trunc.val
SELECT count(*) / ((max(ts) - min(ts))/1000000.0)
FROM protocol_truncated
WHERE event = 'COMMIT'
-- (rate[batches/sec])
Query time: 0.000 seconds
16.904643417677907
Rows returned: 1

-- average message batch, truncated data
-- export msg-batch-avg-trunc.val
SELECT avg(val)
FROM protocol_truncated
where event = 'MSG_BATCH'
-- (batchsize[msg])
Query time: 0.000 seconds
None
Rows returned: 1

-- minimal number of epochs
-- this is the number of epochs the node with the fewest epochs went through (ideally same for all nodes)
-- export epochs-min.val
SELECT min(lastEpoch)
FROM (SELECT max(seqNr) as lastEpoch
      FROM protocol
      WHERE event = 'NEW_EPOCH'
      GROUP BY nodeId)
Query time: 0.000 seconds
0
Rows returned: 1

-- maximal number of epochs
-- this is the number of epochs the node with the fewest epochs went through (ideally same for all nodes)
-- export epochs-max.val
SELECT max(lastEpoch)
FROM (SELECT max(seqNr) as lastEpoch
      FROM protocol
      WHERE event = 'NEW_EPOCH'
      GROUP BY nodeId)
Query time: 0.000 seconds
0
Rows returned: 1

-- maximal number of epochs
-- this is the number of epochs the node with the fewest epochs went through (ideally same for all nodes)
-- export epochs-avg.val
SELECT avg(lastEpoch)
FROM (SELECT max(seqNr) as lastEpoch
      FROM protocol
      WHERE event = 'NEW_EPOCH'
      GROUP BY nodeId)
Query time: 0.000 seconds
0.0
Rows returned: 1

-- Total number of view changes at all nodes
-- export viewchanges-total.val
SELECT count()
FROM protocol
WHERE event = 'VIEW_CHANGE'
Query time: 0.000 seconds
0
Rows returned: 1

-- Average number of view changes (should be the total number of actual view changes, if every node completes each view change)
-- export viewchanges-avg.val
SELECT count()*1.0 / (SELECT count() from (SELECT DISTINCT nodeId FROM protocol))
FROM protocol
WHERE event = 'VIEW_CHANGE'
Query time: 0.000 seconds
0.0
Rows returned: 1

Total running time: 0.034 seconds
-- Truncate request table to include only rows with timestamps between:
--   the first response obtained by the last client to obtain a response
--   and
--   the last request obtained by the client first to finish sending requests
-- Then, cut off 5 second from each end.
-- We could use a view here too, but a physical table is much faster to access.
-- The script processing this file normally makes sure that
-- changes made by this script to the database are rolled back and are not persisted.
CREATE TABLE request_truncated as
SELECT *
FROM request
WHERE
  ts - 5000000 >= (SELECT max(t)
    FROM (SELECT min(ts) as t
      FROM request
      WHERE event = 'REQ_FINISHED'
      GROUP BY nodeId))
  AND ts + 5000000 <= (SELECT min(t)
    FROM (SELECT max(ts) as t
      FROM request
      WHERE event = 'REQ_SEND'
      GROUP BY nodeId))
Query time: 0.003 seconds
Rows returned: 0

-- Do the same as above with the protocol table.
-- Note that the truncation times are still taken from the request table.
CREATE TABLE protocol_truncated as
SELECT *
FROM protocol
WHERE
  ts - 5000000 >= (SELECT max(t)
    FROM (SELECT min(ts) as t
      FROM request
      WHERE event = 'REQ_FINISHED'
      GROUP BY nodeId))
  AND ts + 5000000 <= (SELECT min(t)
    FROM (SELECT max(ts) as t
      FROM request
      WHERE event = 'REQ_SEND'
      GROUP BY nodeId))
Query time: 0.001 seconds
Rows returned: 0

-- Do the same as above with the CPU usage table.
-- Note that the truncation times are still taken from the request table.
CREATE TABLE cpuusage_truncated as
SELECT *
FROM cpuusage
WHERE
  ts - 5000000 >= (SELECT max(t)
    FROM (SELECT min(ts) as t
      FROM request
      WHERE event = 'REQ_FINISHED'
      GROUP BY nodeId))
  AND ts + 5000000 <= (SELECT min(t)
    FROM (SELECT max(ts) as t
      FROM request
      WHERE event = 'REQ_SEND'
      GROUP BY nodeId))
Query time: 0.001 seconds
Rows returned: 0

-- Total CPU usage in time (peer 0)
-- export timeline-cpu-usage-total-peer-0.csv
SELECT (ts - (SELECT min(ts) FROM cpuusage WHERE event = 'CPU_USAGE' AND nodeId = 0))/1000 as msec, total
from cpuusage
WHERE event = 'CPU_USAGE' AND nodeId = 0
-- (msec, totalcpu[%])
Query time: 0.000 seconds
0, 98
500, 99
1003, 99
1504, 98
2005, 99
2507, 99
3009, 98
3510, 97
4012, 99
4513, 96
5015, 98
5516, 98
6017, 98
6517, 96
7019, 99
7520, 96
8023, 99
8524, 96
9027, 98
9528, 99
10029, 100
10531, 98
11032, 98
11534, 99
12035, 99
12536, 95
13041, 98
13543, 98
14045, 99
14547, 97
15048, 97
15553, 99
16055, 98
16556, 98
17060, 99
17564, 100
18065, 99
18567, 95
19068, 97
19572, 99
20074, 99
20575, 97
21089, 99
21589, 98
22090, 99
22591, 96
23092, 98
23593, 97
24107, 98
24608, 95
25110, 96
25611, 96
26119, 98
26620, 93
27144, 97
27645, 93
28151, 94
28652, 93
29195, 94
29704, 99
30205, 97
30706, 96
31235, 97
31736, 98
32237, 96
32738, 77
33249, 97
33750, 99
34251, 98
34755, 99
35255, 96
35757, 99
36259, 98
36760, 98
Rows returned: 74

-- Total CPU usage in time (peer 1)
-- export timeline-cpu-usage-total-peer-1.csv
SELECT (ts - (SELECT min(ts) FROM cpuusage WHERE event = 'CPU_USAGE' AND nodeId = 1))/1000 as msec, total
from cpuusage
WHERE event = 'CPU_USAGE' AND nodeId = 1
-- (msec, totalcpu[%])
Query time: 0.000 seconds
0, 98
500, 99
1002, 99
1504, 98
2005, 99
2506, 99
3008, 98
3510, 97
4010, 99
4512, 97
5014, 98
5515, 98
6019, 98
6521, 96
7022, 99
7522, 96
8024, 98
8525, 96
9026, 98
9528, 99
10029, 100
10531, 98
11033, 98
11534, 99
12045, 99
12545, 95
13046, 98
13548, 99
14049, 99
14551, 96
15052, 98
15557, 99
16059, 98
16560, 98
17061, 98
17562, 100
18063, 99
18564, 95
19074, 98
19576, 98
20078, 98
20579, 97
21081, 99
21582, 98
22086, 99
22588, 97
23094, 98
23596, 96
24103, 99
24604, 95
25104, 97
25606, 96
26109, 98
26610, 93
27111, 97
27612, 93
28113, 94
28618, 93
29119, 94
29620, 99
30121, 97
30621, 97
31123, 96
31625, 98
32130, 96
32631, 76
33133, 97
33634, 99
34137, 98
34639, 98
35140, 96
35642, 99
36143, 98
36645, 99
Rows returned: 74

-- Total CPU usage in time (average over all peers)
-- export timeline-cpu-usage-total.csv
SELECT (ts - (SELECT min(ts) FROM cpuusage WHERE event = 'CPU_USAGE'))/1000 as msec, avg(total)
from cpuusage
WHERE event = 'CPU_USAGE'
GROUP BY msec
-- (msec, totalcpu[%])
Query time: 0.000 seconds
0, 98.0
6, 98.0
10, 98.0
34, 98.0
500, 99.0
507, 99.0
511, 99.0
535, 99.0
1003, 99.0
1008, 99.0
1012, 99.0
1036, 99.0
1504, 98.0
1511, 98.0
1513, 98.0
1538, 98.0
2005, 99.0
2012, 99.0
2015, 99.0
2039, 99.0
2507, 99.0
2514, 98.0
2523, 99.0
2540, 99.0
3009, 98.0
3018, 98.0
3024, 98.0
3042, 98.0
3510, 97.0
3519, 97.0
3525, 97.0
3544, 97.0
4012, 99.0
4020, 99.0
4026, 99.0
4044, 99.0
4513, 96.0
4521, 96.0
4531, 96.0
4547, 97.0
5015, 98.0
5022, 98.0
5032, 98.0
5048, 98.0
5516, 98.0
5523, 98.0
5534, 98.0
5549, 98.0
6017, 98.0
6025, 98.0
6036, 99.0
6054, 98.0
6517, 96.0
6526, 96.0
6537, 96.0
6555, 96.0
7019, 99.0
7030, 99.0
7040, 99.0
7056, 99.0
7520, 96.0
7531, 96.0
7541, 96.0
7556, 96.0
8023, 99.0
8033, 98.0
8042, 98.0
8058, 98.0
8524, 96.0
8534, 96.0
8544, 96.0
8559, 96.0
9027, 98.0
9040, 98.0
9045, 98.0
9060, 98.0
9528, 99.0
9544, 99.0
9546, 99.0
9562, 99.0
10029, 100.0
10046, 100.0
10048, 100.0
10063, 100.0
10531, 98.0
10546, 98.0
10549, 98.0
10565, 98.0
11032, 98.0
11048, 98.0
11050, 98.0
11067, 98.0
11534, 99.0
11552, 99.0
11568, 99.0
12035, 99.0
12053, 99.0
12054, 99.0
12079, 99.0
12536, 95.0
12554, 95.0
12555, 95.0
12579, 95.0
13041, 98.0
13055, 98.0
13062, 98.0
13080, 98.0
13543, 98.0
13557, 98.0
13563, 99.0
13582, 99.0
14045, 99.0
14060, 99.0
14064, 99.0
14083, 99.0
14547, 97.0
14561, 97.0
14566, 97.0
14585, 96.0
15048, 97.0
15062, 97.0
15067, 98.0
15086, 98.0
15553, 99.0
15568, 99.0
15571, 99.0
15591, 99.0
16055, 98.0
16070, 98.0
16072, 98.0
16093, 98.0
16556, 98.0
16571, 98.0
16573, 98.0
16594, 98.0
17060, 99.0
17072, 98.0
17074, 98.0
17096, 98.0
17564, 100.0
17575, 100.0
17596, 100.0
18065, 99.0
18076, 99.0
18079, 99.0
18098, 99.0
18567, 95.0
18577, 95.0
18580, 95.0
18599, 95.0
19068, 97.0
19085, 98.0
19090, 98.0
19108, 98.0
19572, 99.0
19586, 98.0
19591, 99.0
19610, 98.0
20074, 99.0
20088, 99.0
20094, 99.0
20112, 98.0
20575, 97.0
20590, 97.0
20595, 97.0
20613, 97.0
21089, 99.0
21096, 99.0
21115, 99.0
21122, 99.0
21589, 98.0
21597, 98.0
21616, 98.0
21627, 98.0
22090, 99.0
22098, 99.0
22120, 99.0
22128, 99.0
22591, 96.0
22599, 96.0
22622, 97.0
22630, 97.0
23092, 98.0
23101, 98.0
23128, 98.0
23131, 98.0
23593, 97.0
23603, 97.0
23630, 96.0
23632, 96.0
24107, 98.0
24122, 98.0
24134, 98.0
24137, 99.0
24608, 95.0
24624, 95.0
24635, 95.0
24638, 95.0
25110, 96.0
25135, 97.0
25139, 97.0
25155, 97.0
25611, 96.0
25639, 96.0
25640, 96.0
25656, 96.0
26119, 98.0
26143, 98.0
26163, 98.0
26620, 93.0
26644, 93.0
26666, 93.0
27144, 97.0
27145, 97.0
27148, 97.0
27184, 97.0
27645, 93.0
27646, 93.0
27649, 93.0
27689, 92.0
28147, 94.0
28150, 94.0
28151, 94.0
28190, 94.0
28652, 93.0
28696, 93.0
29153, 94.0
29161, 94.0
29195, 94.0
29207, 94.0
29654, 99.0
29662, 99.0
29704, 99.0
29708, 99.0
30155, 97.0
30163, 97.0
30205, 97.0
30266, 98.0
30655, 97.0
30665, 97.0
30706, 96.0
30767, 95.0
31157, 96.0
31166, 96.0
31235, 97.0
31271, 97.0
31659, 98.0
31667, 98.0
31736, 98.0
31772, 98.0
32164, 96.0
32172, 96.0
32237, 96.0
32274, 93.0
32665, 76.0
32674, 76.0
32738, 77.0
32774, 78.0
33167, 97.0
33175, 97.0
33249, 97.0
33275, 98.0
33668, 99.0
33676, 99.0
33750, 99.0
33779, 99.0
34171, 98.0
34177, 98.0
34251, 98.0
34280, 98.0
34673, 98.0
34678, 98.0
34755, 99.0
34781, 98.0
35174, 96.0
35180, 96.0
35255, 96.0
35282, 97.0
35676, 99.0
35681, 99.0
35757, 99.0
35784, 99.0
36177, 98.0
36182, 98.0
36259, 98.0
36286, 98.0
36679, 99.0
36683, 99.0
36760, 98.0
36787, 99.0
Rows returned: 290

-- System CPU usage in time (peer 0). This is the CPU usage reported under "System" in /proc/stat
-- export timeline-cpu-usage-system-peer-0.csv
SELECT (ts - (SELECT min(ts) FROM cpuusage WHERE event = 'CPU_USAGE' AND nodeId = 0))/1000 as msec, system
from cpuusage
WHERE event = 'CPU_USAGE' AND nodeId = 0
-- (msec, systemcpu[%])
Query time: 0.000 seconds
0, 82
500, 87
1003, 87
1504, 86
2005, 82
2507, 84
3009, 82
3510, 67
4012, 71
4513, 71
5015, 61
5516, 71
6017, 70
6517, 73
7019, 64
7520, 69
8023, 64
8524, 69
9027, 64
9528, 69
10029, 71
10531, 77
11032, 64
11534, 73
12035, 68
12536, 69
13041, 62
13543, 67
14045, 68
14547, 72
15048, 62
15553, 69
16055, 68
16556, 74
17060, 66
17564, 63
18065, 58
18567, 68
19068, 64
19572, 64
20074, 70
20575, 73
21089, 68
21589, 68
22090, 73
22591, 69
23092, 65
23593, 65
24107, 72
24608, 74
25110, 68
25611, 67
26119, 72
26620, 74
27144, 67
27645, 58
28151, 66
28652, 67
29195, 63
29704, 64
30205, 63
30706, 70
31235, 68
31736, 70
32237, 57
32738, 40
33249, 64
33750, 63
34251, 79
34755, 87
35255, 88
35757, 95
36259, 89
36760, 90
Rows returned: 74

-- System CPU usage in time (peer 1). This is the CPU usage reported under "System" in /proc/stat
-- export timeline-cpu-usage-system-peer-1.csv
SELECT (ts - (SELECT min(ts) FROM cpuusage WHERE event = 'CPU_USAGE' AND nodeId = 1))/1000 as msec, system
from cpuusage
WHERE event = 'CPU_USAGE' AND nodeId = 1
-- (msec, systemcpu[%])
Query time: 0.000 seconds
0, 83
500, 87
1002, 86
1504, 85
2005, 82
2506, 84
3008, 81
3510, 68
4010, 71
4512, 71
5014, 61
5515, 72
6019, 70
6521, 73
7022, 62
7522, 70
8024, 63
8525, 69
9026, 64
9528, 69
10029, 72
10531, 77
11033, 63
11534, 74
12045, 68
12545, 69
13046, 61
13548, 69
14049, 67
14551, 71
15052, 62
15557, 70
16059, 67
16560, 75
17061, 64
17562, 63
18063, 58
18564, 68
19074, 63
19576, 66
20078, 69
20579, 75
21081, 66
21582, 69
22086, 72
22588, 71
23094, 63
23596, 66
24103, 71
24604, 75
25104, 65
25606, 69
26109, 71
26610, 75
27111, 67
27612, 58
28113, 66
28618, 67
29119, 65
29620, 62
30121, 66
30621, 68
31123, 70
31625, 66
32130, 65
32631, 33
33133, 67
33634, 60
34137, 79
34639, 84
35140, 89
35642, 95
36143, 89
36645, 90
Rows returned: 74

-- System CPU usage in time (average over all peers). This is the CPU usage reported under "System" in /proc/stat
-- export timeline-cpu-usage-system.csv
SELECT (ts - (SELECT min(ts) FROM cpuusage WHERE event = 'CPU_USAGE'))/1000 as msec, avg(system)
from cpuusage
WHERE event = 'CPU_USAGE'
GROUP BY msec
-- (msec, systemcpu[%])
Query time: 0.000 seconds
0, 82.0
6, 83.0
10, 83.0
34, 83.0
500, 87.0
507, 86.0
511, 86.0
535, 87.0
1003, 87.0
1008, 87.0
1012, 87.0
1036, 86.0
1504, 86.0
1511, 86.0
1513, 86.0
1538, 85.0
2005, 82.0
2012, 82.0
2015, 82.0
2039, 82.0
2507, 84.0
2514, 84.0
2523, 84.0
2540, 84.0
3009, 82.0
3018, 82.0
3024, 81.0
3042, 81.0
3510, 67.0
3519, 67.0
3525, 68.0
3544, 68.0
4012, 71.0
4020, 72.0
4026, 71.0
4044, 71.0
4513, 71.0
4521, 70.0
4531, 71.0
4547, 71.0
5015, 61.0
5022, 61.0
5032, 61.0
5048, 61.0
5516, 71.0
5523, 71.0
5534, 71.0
5549, 72.0
6017, 70.0
6025, 71.0
6036, 70.0
6054, 70.0
6517, 73.0
6526, 73.0
6537, 73.0
6555, 73.0
7019, 64.0
7030, 63.0
7040, 62.0
7056, 62.0
7520, 69.0
7531, 69.0
7541, 70.0
7556, 70.0
8023, 64.0
8033, 64.0
8042, 64.0
8058, 63.0
8524, 69.0
8534, 69.0
8544, 69.0
8559, 69.0
9027, 64.0
9040, 64.0
9045, 64.0
9060, 64.0
9528, 69.0
9544, 69.0
9546, 69.0
9562, 69.0
10029, 71.0
10046, 71.0
10048, 71.0
10063, 72.0
10531, 77.0
10546, 77.0
10549, 77.0
10565, 77.0
11032, 64.0
11048, 63.0
11050, 63.0
11067, 63.0
11534, 73.0
11552, 73.0
11568, 74.0
12035, 68.0
12053, 68.0
12054, 68.0
12079, 68.0
12536, 69.0
12554, 69.0
12555, 70.0
12579, 69.0
13041, 62.0
13055, 62.0
13062, 61.0
13080, 61.0
13543, 67.0
13557, 68.0
13563, 68.0
13582, 69.0
14045, 68.0
14060, 68.0
14064, 67.0
14083, 67.0
14547, 72.0
14561, 72.0
14566, 72.0
14585, 71.0
15048, 62.0
15062, 62.0
15067, 62.0
15086, 62.0
15553, 69.0
15568, 69.0
15571, 69.0
15591, 70.0
16055, 68.0
16070, 68.0
16072, 67.0
16093, 67.0
16556, 74.0
16571, 74.0
16573, 74.0
16594, 75.0
17060, 66.0
17072, 65.0
17074, 65.0
17096, 64.0
17564, 63.0
17575, 62.0
17596, 63.0
18065, 58.0
18076, 58.0
18079, 58.0
18098, 58.0
18567, 68.0
18577, 68.0
18580, 67.0
18599, 68.0
19068, 64.0
19085, 64.0
19090, 64.0
19108, 63.0
19572, 64.0
19586, 64.0
19591, 65.0
19610, 66.0
20074, 70.0
20088, 70.0
20094, 69.0
20112, 69.0
20575, 73.0
20590, 74.0
20595, 74.0
20613, 75.0
21089, 68.0
21096, 67.0
21115, 66.0
21122, 66.0
21589, 68.0
21597, 69.0
21616, 69.0
21627, 70.0
22090, 73.0
22098, 72.0
22120, 72.0
22128, 72.0
22591, 69.0
22599, 69.0
22622, 71.0
22630, 71.0
23092, 65.0
23101, 64.0
23128, 63.0
23131, 63.0
23593, 65.0
23603, 65.0
23630, 66.0
23632, 66.0
24107, 72.0
24122, 72.0
24134, 71.0
24137, 71.0
24608, 74.0
24624, 75.0
24635, 75.0
24638, 75.0
25110, 68.0
25135, 66.0
25139, 65.0
25155, 64.0
25611, 67.0
25639, 68.0
25640, 69.0
25656, 71.0
26119, 72.0
26143, 71.0
26163, 70.0
26620, 74.0
26644, 75.0
26666, 75.0
27144, 67.0
27145, 67.0
27148, 67.0
27184, 65.0
27645, 58.0
27646, 58.0
27649, 59.0
27689, 61.0
28147, 66.0
28150, 66.0
28151, 66.0
28190, 64.0
28652, 67.0
28696, 69.0
29153, 65.0
29161, 64.0
29195, 63.0
29207, 62.0
29654, 62.0
29662, 62.0
29704, 64.0
29708, 65.0
30155, 66.0
30163, 66.0
30205, 63.0
30266, 63.0
30655, 68.0
30665, 68.0
30706, 70.0
30767, 71.0
31157, 70.0
31166, 70.0
31235, 68.0
31271, 68.0
31659, 66.0
31667, 67.0
31736, 70.0
31772, 70.0
32164, 65.0
32172, 65.0
32237, 57.0
32274, 52.0
32665, 33.0
32674, 33.0
32738, 40.0
32774, 44.0
33167, 67.0
33175, 68.0
33249, 64.0
33275, 64.0
33668, 60.0
33676, 59.0
33750, 63.0
33779, 65.0
34171, 79.0
34177, 79.0
34251, 79.0
34280, 79.0
34673, 84.0
34678, 84.0
34755, 87.0
34781, 88.0
35174, 89.0
35180, 89.0
35255, 88.0
35282, 88.0
35676, 95.0
35681, 95.0
35757, 95.0
35784, 95.0
36177, 89.0
36182, 89.0
36259, 89.0
36286, 88.0
36679, 90.0
36683, 90.0
36760, 90.0
36787, 91.0
Rows returned: 290

-- Batches committed in time (peer 0)
-- export timeline-commit-peer-0.csv
--
SELECT (ts - (SELECT min(ts) FROM protocol WHERE event = 'COMMIT' AND nodeId = 0))/1000 as msec, count()
FROM protocol
WHERE event = 'COMMIT' AND nodeId = 0
GROUP BY msec
-- (msec, count[req])
Query time: 0.000 seconds
0, 1
1, 2
960, 1
961, 1
967, 1
968, 1
976, 1
977, 1
984, 2
985, 1
2150, 1
2205, 2
2214, 1
2215, 1
3233, 1
3241, 1
3272, 1
3283, 2
3284, 1
3285, 1
4144, 1
4148, 1
4149, 1
5239, 1
5285, 1
5296, 2
5305, 1
6194, 1
6273, 1
6275, 1
7228, 1
7245, 1
7274, 1
7409, 1
7410, 1
8186, 1
8192, 1
8216, 1
9302, 1
9326, 1
9357, 1
9366, 1
9367, 1
10261, 2
10272, 1
11344, 1
11345, 1
11376, 1
11395, 2
12202, 1
12272, 1
12296, 1
13236, 1
13348, 1
13389, 1
13390, 1
13400, 1
14297, 1
14311, 1
14321, 1
15370, 1
15380, 1
15383, 1
15384, 1
15418, 1
16253, 1
16304, 1
16325, 1
17447, 1
17457, 1
17499, 1
17500, 1
17501, 1
18316, 1
18332, 1
18395, 1
19366, 1
19367, 1
19376, 1
19409, 1
19448, 1
20378, 1
20392, 1
20416, 1
21438, 1
21439, 1
21461, 1
21465, 1
21484, 1
22406, 1
22438, 1
22454, 1
23414, 1
23432, 1
23453, 2
23548, 1
24442, 1
24471, 1
24478, 1
25525, 1
25538, 1
25539, 1
25543, 1
25548, 1
26405, 1
26489, 1
26508, 1
27558, 1
27583, 1
27672, 2
27713, 1
28450, 1
28491, 1
28520, 1
29545, 1
29598, 1
29609, 1
29614, 1
29618, 1
30442, 1
30541, 1
30543, 1
31723, 2
31727, 1
31798, 1
31802, 1
32370, 1
32443, 1
32444, 3
33279, 2
33280, 1
33363, 3
33436, 3
33447, 1
33448, 1
33449, 1
34368, 2
34440, 2
34443, 1
34444, 2
35255, 1
35256, 2
35257, 1
35258, 2
Rows returned: 144

-- Batches committed in time (all peers)
-- export timeline-commit-all.csv
--
SELECT (ts - (SELECT min(ts) FROM protocol WHERE event = 'COMMIT'))/1000 as msec, count()
FROM protocol
WHERE event = 'COMMIT'
GROUP BY msec
-- (msec, count[req])
Query time: 0.001 seconds
0, 1
2, 1
3, 2
4, 2
5, 2
6, 1
9, 1
10, 1
11, 1
967, 2
968, 1
969, 2
970, 1
971, 1
976, 1
977, 3
978, 1
979, 2
983, 2
985, 2
986, 3
987, 1
988, 2
991, 1
992, 2
993, 2
994, 6
995, 1
2148, 1
2159, 1
2170, 1
2208, 2
2210, 2
2214, 1
2215, 1
2220, 1
2221, 1
2224, 2
2225, 1
2231, 1
2232, 1
2238, 1
2239, 1
2245, 1
2246, 1
3241, 1
3242, 1
3246, 1
3249, 1
3251, 1
3254, 1
3255, 1
3264, 1
3267, 2
3281, 1
3292, 1
3293, 1
3294, 2
3295, 1
3297, 2
3298, 4
3299, 3
3300, 1
3308, 1
3324, 1
4102, 3
4127, 2
4128, 1
4154, 1
4157, 2
4158, 1
4163, 1
4190, 1
5237, 1
5244, 1
5248, 1
5253, 1
5293, 1
5294, 1
5295, 1
5299, 1
5300, 2
5301, 1
5304, 1
5305, 2
5306, 1
5310, 1
5315, 2
5316, 1
5321, 1
6199, 1
6200, 1
6203, 2
6248, 2
6250, 1
6271, 1
6275, 1
6281, 1
6283, 1
6284, 1
7236, 1
7238, 1
7240, 1
7248, 1
7255, 1
7265, 1
7267, 1
7275, 1
7279, 1
7281, 1
7282, 1
7283, 1
7386, 1
7387, 1
7392, 2
7393, 1
7399, 1
7418, 1
7419, 1
8196, 1
8199, 1
8200, 1
8201, 1
8202, 2
8208, 1
8223, 1
8224, 1
8225, 1
8241, 1
8244, 1
9237, 1
9254, 1
9264, 1
9311, 1
9312, 2
9317, 1
9335, 1
9366, 2
9367, 1
9368, 1
9374, 1
9375, 3
9376, 2
9378, 1
9379, 1
10261, 1
10263, 1
10264, 1
10270, 1
10271, 1
10273, 1
10276, 1
10282, 1
10284, 1
10289, 2
10294, 1
11338, 1
11345, 1
11346, 1
11348, 2
11354, 1
11355, 1
11360, 1
11361, 1
11362, 1
11386, 1
11400, 1
11402, 1
11403, 1
11404, 2
11405, 2
11408, 1
11409, 1
12212, 1
12213, 1
12230, 1
12245, 1
12281, 2
12282, 1
12297, 1
12305, 1
12307, 1
12309, 1
12324, 1
13245, 1
13247, 1
13249, 1
13259, 1
13357, 1
13358, 1
13360, 2
13398, 3
13399, 3
13410, 1
13412, 2
13413, 1
13417, 1
13426, 1
14297, 1
14300, 1
14306, 1
14311, 1
14313, 1
14320, 2
14324, 1
14328, 1
14330, 1
14334, 1
14356, 1
15370, 1
15377, 1
15379, 1
15387, 2
15389, 1
15392, 1
15393, 1
15394, 1
15395, 1
15401, 1
15402, 1
15407, 1
15408, 1
15411, 1
15412, 1
15426, 1
15427, 2
15433, 1
16258, 1
16261, 1
16263, 1
16271, 1
16308, 1
16309, 1
16314, 1
16334, 1
16340, 1
16346, 1
16362, 1
16364, 1
17442, 1
17446, 1
17457, 1
17464, 2
17467, 1
17474, 1
17492, 1
17493, 1
17499, 1
17500, 1
17501, 1
17504, 1
17509, 2
17510, 1
17522, 1
17530, 1
17551, 1
17565, 1
18326, 2
18327, 1
18341, 1
18345, 2
18350, 1
18358, 1
18401, 1
18404, 2
18420, 1
19371, 1
19372, 1
19375, 2
19376, 2
19385, 1
19388, 1
19394, 1
19399, 2
19407, 1
19414, 1
19417, 1
19419, 1
19421, 1
19456, 1
19458, 2
19512, 1
20380, 2
20386, 1
20387, 1
20393, 2
20399, 1
20402, 1
20421, 1
20422, 2
20426, 1
21447, 1
21448, 4
21449, 1
21451, 1
21454, 1
21469, 1
21471, 2
21474, 2
21475, 1
21476, 1
21477, 1
21484, 1
21487, 1
21493, 1
21494, 1
22407, 1
22409, 1
22412, 1
22416, 1
22427, 1
22436, 1
22437, 1
22448, 2
22449, 1
22463, 1
22468, 1
23421, 1
23424, 2
23433, 1
23434, 1
23438, 2
23440, 1
23442, 1
23447, 1
23448, 1
23449, 1
23462, 1
23463, 1
23502, 1
23511, 1
23512, 1
23513, 1
23522, 1
23558, 1
24437, 1
24439, 1
24440, 1
24450, 1
24451, 1
24452, 2
24480, 1
24486, 1
24488, 1
24498, 1
24505, 1
25532, 1
25534, 1
25536, 1
25537, 2
25539, 2
25548, 1
25549, 3
25550, 2
25551, 1
25553, 1
25555, 1
25556, 1
25558, 1
25563, 1
25564, 1
26414, 2
26415, 1
26430, 1
26499, 2
26506, 1
26507, 1
26518, 1
26519, 1
26520, 1
26529, 1
27568, 3
27592, 1
27593, 1
27595, 1
27608, 1
27681, 2
27682, 2
27683, 1
27684, 1
27686, 1
27688, 1
27693, 1
27723, 2
27724, 1
27743, 1
28408, 1
28411, 2
28460, 1
28500, 1
28501, 1
28503, 1
28504, 1
28529, 3
28626, 1
29475, 1
29476, 1
29477, 1
29478, 1
29479, 1
29482, 1
29555, 3
29586, 1
29608, 1
29619, 1
29623, 1
29625, 1
29628, 1
29629, 1
29637, 1
29639, 1
29654, 1
29660, 1
30448, 1
30449, 1
30450, 1
30452, 1
30534, 1
30535, 1
30544, 1
30549, 1
30550, 1
30552, 2
30553, 1
31691, 1
31692, 1
31693, 2
31699, 1
31700, 1
31729, 1
31732, 1
31733, 1
31737, 1
31744, 1
31746, 1
31802, 1
31805, 1
31807, 1
31812, 3
31838, 1
31859, 1
32377, 1
32378, 2
32379, 1
32449, 1
32450, 1
32453, 4
32455, 2
32456, 2
32458, 3
32459, 1
32461, 2
33285, 1
33288, 1
33289, 2
33291, 1
33292, 3
33293, 3
33294, 1
33372, 2
33373, 4
33374, 3
33375, 1
33376, 2
33444, 3
33445, 1
33446, 4
33447, 2
33448, 1
33454, 2
33455, 4
33456, 2
33457, 3
33458, 2
34376, 6
34377, 2
34444, 2
34445, 1
34446, 1
34447, 2
34449, 2
34453, 5
34454, 4
34455, 2
34456, 1
35259, 1
35260, 2
35261, 3
35262, 3
35264, 1
35265, 2
35266, 1
35267, 4
35268, 3
35270, 1
35271, 1
35272, 2
Rows returned: 497

-- Client 0 request sending in time
-- export timeline-submit-client-1.csv
--
SELECT (ts - (SELECT min(ts) FROM request WHERE event = 'REQ_SEND' AND nodeId = -1))/1000 as msec, count()
FROM request
WHERE event = 'REQ_SEND' AND nodeId = -1
GROUP BY msec
-- (msec, count[req])
Query time: 0.000 seconds
Rows returned: 0

-- Client 1 request sending in time
-- export timeline-submit-client-2.csv
--
SELECT (ts - (SELECT min(ts) FROM request WHERE event = 'REQ_SEND' AND nodeId = -2))/1000 as msec, count()
FROM request
WHERE event = 'REQ_SEND' AND nodeId = -2
GROUP BY msec
-- (msec, count[req])
Query time: 0.000 seconds
Rows returned: 0

-- Client request sending in time (all clients)
-- export timeline-submit-all.csv
--
SELECT (ts - (SELECT min(ts) FROM request WHERE event = 'REQ_SEND'))/1000 as msec, count()
FROM request
WHERE event = 'REQ_SEND'
GROUP BY msec
-- (msec, count[req])
Query time: 0.002 seconds
0, 1
13, 1
64, 1
111, 1
124, 1
137, 1
151, 1
164, 1
180, 1
194, 1
205, 1
217, 1
230, 1
245, 1
261, 1
270, 1
279, 1
291, 1
309, 1
325, 1
335, 1
362, 1
377, 1
385, 1
395, 1
401, 1
411, 1
421, 1
430, 1
437, 1
444, 1
453, 1
460, 1
473, 1
486, 1
499, 1
538, 1
543, 1
564, 1
587, 1
604, 1
618, 1
630, 1
666, 1
681, 1
731, 1
750, 1
820, 1
839, 1
850, 1
877, 1
896, 1
909, 1
921, 1
938, 1
958, 1
976, 1
1005, 1
1016, 1
1029, 1
1057, 1
1069, 1
1087, 1
1123, 1
1145, 1
1164, 1
1178, 1
1192, 1
1238, 1
1256, 1
1270, 1
1288, 1
1305, 1
1325, 1
1348, 1
1362, 1
1375, 1
1382, 1
1397, 1
1413, 1
1424, 1
1436, 1
1443, 1
1455, 1
1470, 1
1480, 1
1509, 1
1516, 1
1522, 1
1536, 1
1544, 1
1572, 1
1588, 1
1600, 1
1633, 1
1639, 1
1654, 1
1670, 1
1695, 1
1812, 1
1840, 1
1883, 1
1913, 1
1935, 1
1969, 1
1999, 1
2010, 1
2022, 1
2031, 1
2098, 1
2104, 1
2135, 1
2149, 1
2168, 1
2181, 1
2199, 1
2206, 1
2230, 1
2252, 1
2265, 1
2300, 1
2318, 1
2350, 1
2368, 1
2385, 1
2416, 1
2428, 1
2451, 1
2546, 1
2594, 1
2604, 1
2611, 1
2665, 1
2689, 1
2705, 1
2763, 1
2816, 1
2828, 1
2839, 1
2845, 1
2863, 1
2879, 1
2888, 1
2895, 1
2925, 1
3032, 1
3054, 1
3060, 1
3073, 1
3094, 1
3102, 1
3141, 1
3164, 1
3178, 1
3188, 1
3201, 1
3214, 1
3223, 1
3233, 1
3241, 1
3260, 1
3274, 1
3288, 1
3313, 1
3326, 1
3354, 1
3364, 1
3380, 1
3395, 1
3405, 1
3411, 1
3422, 1
3429, 1
3441, 1
3456, 1
3481, 1
3496, 1
3510, 1
3531, 1
3550, 1
3568, 1
3590, 1
3605, 1
3621, 1
3630, 1
3657, 1
3669, 1
3675, 1
3709, 1
3727, 1
3750, 1
3755, 1
3774, 1
3780, 1
3788, 1
3802, 1
3845, 1
3867, 1
3875, 1
3883, 1
3906, 1
3931, 1
3982, 1
4000, 1
4037, 1
4053, 1
4061, 1
4070, 1
4082, 1
4087, 1
4102, 1
4122, 1
4131, 1
4152, 1
4161, 1
4194, 1
4203, 1
4229, 1
4264, 1
4275, 1
4308, 1
4343, 1
4356, 1
4390, 1
4406, 1
4468, 1
4508, 1
4519, 1
4546, 1
4552, 1
4564, 1
4595, 1
4622, 1
4651, 1
4663, 1
4684, 1
4724, 1
4772, 1
4822, 1
4827, 1
4856, 1
4861, 1
4996, 1
5017, 1
5022, 1
5033, 1
5042, 1
5055, 1
5061, 1
5077, 1
5097, 1
5142, 1
5155, 1
5174, 1
5187, 1
5197, 1
5206, 1
5218, 1
5238, 1
5256, 1
5275, 1
5289, 1
5308, 1
5326, 1
5345, 1
5356, 1
5369, 1
5380, 1
5397, 1
5415, 1
5426, 1
5443, 1
5450, 1
5475, 1
5495, 1
5509, 1
5527, 1
5546, 1
5558, 1
5566, 1
5588, 1
5599, 1
5630, 1
5661, 1
5738, 1
5832, 1
5839, 1
5899, 1
5936, 1
5950, 1
5965, 1
5989, 1
6000, 1
6021, 1
6035, 1
6073, 1
6083, 1
6113, 1
6135, 1
6151, 1
6161, 1
6182, 1
6222, 1
6238, 1
6270, 1
6289, 1
6308, 1
6314, 1
6319, 1
6325, 1
6340, 1
6376, 1
6402, 1
6442, 1
6478, 1
6485, 1
6502, 1
6513, 1
6540, 1
6625, 1
6631, 1
6666, 1
6716, 1
6761, 1
6770, 1
6781, 1
6788, 1
6793, 1
6841, 1
6859, 1
6871, 1
6929, 1
6939, 1
6964, 1
7041, 1
7064, 1
7089, 1
7095, 1
7102, 1
7126, 1
7141, 1
7152, 1
7165, 1
7187, 1
7196, 1
7208, 1
7223, 1
7238, 1
7256, 1
7266, 1
7272, 1
7278, 1
7283, 1
7293, 1
7340, 1
7345, 1
7380, 1
7404, 1
7421, 1
7432, 1
7439, 1
7452, 1
7463, 1
7474, 1
7494, 1
7511, 1
7529, 1
7581, 1
7589, 1
7597, 1
7629, 1
7640, 1
7650, 1
7666, 1
7682, 1
7690, 1
7705, 1
7759, 1
7841, 1
7860, 1
7915, 1
7952, 1
7970, 1
7992, 1
8023, 1
8065, 1
8091, 1
8116, 1
8138, 1
8151, 1
8159, 1
8164, 1
8176, 1
8190, 1
8218, 1
8230, 1
8236, 1
8241, 1
8258, 1
8264, 1
8270, 1
8282, 1
8304, 1
8314, 1
8346, 1
8351, 1
8358, 1
8390, 1
8396, 1
8415, 1
8447, 1
8467, 1
8487, 1
8493, 1
8521, 1
8603, 1
8672, 1
8697, 1
8726, 1
8779, 1
8807, 1
8889, 1
8906, 1
8953, 1
9005, 1
9058, 1
9066, 1
9083, 1
9101, 1
9106, 1
9112, 1
9118, 1
9124, 1
9133, 1
9144, 1
9155, 1
9169, 1
9181, 1
9193, 1
9204, 1
9220, 1
9235, 1
9250, 1
9267, 1
9279, 1
9294, 1
9311, 1
9331, 1
9347, 1
9363, 1
9376, 1
9389, 1
9400, 1
9407, 1
9414, 1
9428, 1
9433, 1
9439, 1
9450, 1
9456, 1
9463, 1
9488, 1
9500, 1
9513, 1
9524, 1
9543, 1
9558, 1
9573, 1
9585, 1
9597, 1
9610, 1
9624, 1
9638, 1
9652, 1
9665, 1
9688, 1
9699, 1
9759, 1
9788, 1
9802, 1
9815, 1
9883, 1
9888, 1
9905, 1
9919, 1
9952, 1
9979, 1
10014, 1
10037, 1
10042, 1
10048, 1
10067, 1
10116, 1
10129, 1
10134, 1
10175, 1
10185, 1
10200, 1
10227, 1
10250, 1
10272, 1
10300, 1
10321, 1
10329, 1
10349, 1
10375, 1
10408, 1
10415, 1
10436, 1
10451, 1
10460, 1
10470, 1
10497, 1
10537, 1
10605, 1
10650, 1
10661, 1
10683, 1
10709, 1
10714, 1
10732, 1
10746, 1
10752, 1
10813, 1
10838, 1
10919, 1
10956, 1
11016, 1
11075, 1
11095, 1
11105, 1
11110, 1
11135, 1
11145, 1
11156, 1
11171, 1
11189, 1
11206, 1
11222, 1
11234, 1
11239, 1
11264, 1
11277, 1
11287, 1
11296, 1
11304, 1
11310, 1
11316, 1
11323, 1
11339, 1
11347, 1
11356, 1
11363, 1
11371, 1
11377, 1
11392, 1
11408, 1
11420, 1
11455, 1
11470, 1
11482, 1
11499, 1
11515, 1
11527, 1
11538, 1
11552, 1
11566, 1
11579, 1
11592, 1
11602, 1
11614, 1
11620, 1
11657, 1
11662, 1
11682, 1
11708, 1
11726, 1
11749, 1
11781, 1
11842, 1
11894, 1
11943, 1
11958, 1
11969, 1
11994, 1
12015, 1
12028, 1
12043, 1
12067, 1
12083, 1
12124, 1
12151, 1
12177, 1
12191, 1
12214, 1
12229, 1
12255, 1
12262, 1
12272, 1
12290, 1
12305, 1
12324, 1
12334, 1
12345, 1
12361, 1
12376, 1
12420, 1
12429, 1
12442, 1
12451, 1
12483, 1
12545, 1
12570, 1
12598, 1
12622, 1
12651, 1
12677, 1
12711, 1
12760, 1
12785, 1
12819, 1
12952, 1
12964, 1
12997, 1
13046, 1
13051, 1
13069, 1
13105, 1
13127, 1
13141, 1
13149, 1
13162, 1
13170, 1
13183, 1
13215, 1
13225, 1
13243, 1
13249, 1
13278, 1
13289, 1
13294, 1
13315, 1
13335, 1
13353, 1
13370, 1
13386, 1
13400, 1
13420, 1
13428, 1
13451, 1
13460, 1
13475, 1
13496, 1
13525, 1
13556, 1
13576, 1
13590, 1
13609, 1
13626, 1
13635, 1
13657, 1
13677, 1
13684, 1
13696, 1
13710, 1
13718, 1
13752, 1
13773, 1
13885, 1
13937, 1
13946, 1
13951, 1
13958, 1
13999, 1
14033, 1
14045, 1
14129, 1
14137, 1
14154, 1
14226, 1
14231, 1
14237, 1
14284, 1
14311, 1
14327, 1
14359, 1
14387, 1
14396, 1
14418, 1
14432, 1
14477, 1
14509, 1
14518, 1
14523, 1
14539, 1
14580, 1
14598, 1
14605, 1
14630, 1
14643, 1
14660, 1
14697, 1
14761, 1
14773, 1
14788, 1
14815, 1
14845, 1
14868, 1
14875, 1
14881, 1
14918, 1
14928, 1
14934, 1
14949, 1
14969, 1
14994, 1
15007, 1
15034, 1
15062, 1
15066, 1
15104, 1
15109, 1
15132, 1
15140, 1
15163, 1
15180, 1
15192, 1
15199, 1
15205, 1
15218, 1
15231, 1
15249, 1
15278, 1
15292, 1
15307, 1
15320, 1
15335, 1
15345, 1
15357, 1
15373, 1
15387, 1
15394, 1
15400, 1
15421, 1
15431, 1
15436, 1
15441, 1
15448, 1
15455, 1
15459, 1
15474, 1
15492, 1
15508, 1
15523, 1
15533, 1
15545, 1
15561, 1
15577, 1
15589, 1
15600, 1
15611, 1
15618, 1
15627, 1
15645, 1
15658, 1
15673, 1
15684, 1
15698, 1
15710, 1
15721, 1
15727, 1
15738, 1
15761, 1
15766, 1
15773, 1
15778, 1
15800, 1
15837, 1
15903, 1
15978, 1
16007, 1
16099, 1
16129, 1
16201, 1
16211, 1
16231, 1
16253, 1
16276, 1
16297, 1
16307, 1
16329, 1
16344, 1
16367, 1
16373, 1
16386, 1
16411, 1
16431, 1
16459, 1
16483, 1
16496, 1
16531, 1
16550, 1
16564, 1
16574, 1
16589, 1
16619, 1
16659, 1
16666, 1
16673, 1
16702, 1
16762, 1
16768, 1
16780, 1
16806, 1
16828, 1
16863, 1
16946, 1
16993, 1
17035, 1
17049, 1
17093, 1
17111, 1
17121, 1
17126, 1
17147, 1
17152, 1
17199, 1
17205, 1
17265, 1
17282, 1
17287, 1
17308, 1
17339, 1
17365, 1
17387, 1
17396, 1
17406, 1
17418, 1
17424, 1
17429, 1
17438, 1
17449, 1
17461, 1
17475, 1
17490, 1
17508, 1
17532, 1
17555, 1
17565, 1
17580, 1
17597, 1
17612, 1
17653, 1
17680, 1
17692, 1
17701, 1
17721, 1
17734, 1
17749, 1
17780, 1
17814, 1
17830, 1
17890, 1
17932, 1
17939, 1
17959, 1
17964, 1
18011, 1
18075, 1
18082, 1
18103, 1
18111, 1
18132, 1
18148, 1
18182, 1
18197, 1
18207, 1
18211, 1
18223, 1
18228, 1
18233, 1
18238, 1
18291, 1
18368, 1
18374, 1
18381, 1
18397, 1
18417, 1
18430, 1
18434, 1
18514, 1
18518, 1
18543, 1
18559, 1
18572, 1
18593, 1
18613, 1
18618, 1
18652, 1
18657, 1
18696, 1
18767, 1
18779, 1
18793, 1
18802, 1
18825, 1
18849, 1
18868, 1
18900, 1
18952, 1
19035, 1
19049, 1
19069, 1
19085, 1
19098, 1
19116, 1
19124, 1
19139, 1
19145, 1
19151, 1
19160, 1
19188, 1
19193, 1
19219, 1
19251, 1
19258, 1
19267, 1
19296, 1
19318, 1
19345, 1
19375, 1
19397, 1
19419, 1
19434, 1
19439, 1
19453, 1
19468, 1
19479, 1
19495, 1
19532, 1
19547, 1
19578, 1
19583, 1
19602, 1
19622, 1
19627, 1
19632, 1
19641, 1
19655, 1
19663, 1
19674, 1
19689, 1
19706, 1
19716, 1
19728, 1
19746, 1
19762, 1
19812, 1
19817, 1
19827, 1
19841, 1
19904, 1
19914, 1
19930, 1
19986, 1
20046, 1
20073, 1
20173, 1
20181, 1
20204, 1
20218, 1
20227, 1
20236, 1
20247, 1
20272, 1
20280, 1
20294, 1
20300, 1
20319, 1
20350, 1
20355, 1
20360, 1
20378, 1
20416, 1
20431, 1
20444, 1
20458, 1
20469, 1
20486, 1
20509, 1
20530, 1
20557, 1
20582, 1
20633, 1
20638, 1
20666, 1
20689, 1
20707, 1
20712, 1
20718, 1
20725, 1
20739, 1
20757, 1
20765, 1
20817, 1
20822, 1
20830, 1
20863, 1
20896, 1
20940, 1
20979, 1
21007, 1
21011, 1
21066, 1
21129, 1
21135, 1
21164, 1
21172, 1
21181, 1
21192, 1
21208, 1
21224, 1
21234, 1
21249, 1
21266, 1
21284, 1
21301, 1
21314, 1
21322, 1
21344, 1
21359, 1
21366, 1
21377, 1
21385, 1
21397, 1
21412, 1
21428, 1
21450, 1
21464, 1
21470, 1
21482, 1
21494, 1
21502, 1
21536, 1
21552, 1
21568, 1
21594, 1
21605, 1
21614, 1
21635, 1
21654, 1
21673, 1
21709, 1
21719, 1
21725, 1
21741, 1
21756, 1
21773, 1
21792, 1
21822, 1
21844, 1
21868, 1
21877, 1
21882, 1
21915, 1
21937, 1
21944, 1
21953, 1
21997, 1
22002, 1
22039, 1
22044, 1
22133, 1
22176, 1
22205, 1
22216, 1
22246, 1
22265, 1
22289, 1
22296, 1
22304, 1
22323, 1
22335, 1
22352, 1
22357, 1
22375, 1
22386, 1
22391, 1
22397, 1
22429, 1
22440, 1
22477, 1
22485, 1
22495, 1
22507, 1
22531, 1
22568, 1
22607, 1
22637, 1
22643, 1
22658, 1
22675, 1
22720, 1
22726, 1
22737, 1
22766, 1
22780, 1
22787, 1
22798, 1
22814, 1
22827, 1
22833, 1
22846, 1
22860, 1
22913, 1
22918, 1
23042, 1
23094, 1
23098, 1
23130, 1
23166, 1
23171, 1
23218, 1
23224, 1
23236, 1
23259, 1
23267, 1
23282, 1
23300, 1
23319, 1
23342, 1
23357, 1
23384, 1
23393, 1
23405, 1
23413, 1
23422, 1
23431, 1
23456, 1
23481, 1
23496, 1
23510, 1
23517, 1
23522, 1
23546, 1
23560, 1
23579, 1
23587, 1
23611, 1
23625, 1
23630, 1
23641, 1
23647, 1
23658, 1
23671, 1
23678, 1
23703, 1
23709, 1
23733, 1
23739, 1
23744, 1
23751, 1
23762, 1
23767, 1
23773, 1
23778, 1
23789, 1
23797, 1
23803, 1
23820, 1
23827, 1
23857, 1
23878, 1
23894, 1
23900, 1
23920, 1
23948, 1
23962, 1
23992, 1
24040, 1
24051, 1
24060, 1
24104, 1
24127, 1
24164, 1
24180, 1
24201, 1
24208, 1
24214, 1
24224, 1
24230, 1
24236, 1
24256, 1
24262, 1
24268, 1
24282, 1
24293, 1
24307, 1
24359, 1
24384, 1
24417, 1
24423, 1
24465, 1
24503, 1
24510, 1
24518, 1
24539, 1
24551, 1
24559, 1
24608, 1
24630, 1
24685, 1
24750, 1
24756, 1
24770, 1
24778, 1
24797, 1
24822, 1
24846, 1
24854, 1
24866, 1
24875, 1
24889, 1
24912, 1
24917, 1
24925, 1
25018, 1
25051, 1
25083, 1
25087, 1
25115, 1
25140, 1
25144, 1
25186, 1
25207, 1
25231, 1
25238, 1
25243, 1
25253, 1
25261, 1
25273, 1
25280, 1
25288, 1
25302, 1
25311, 1
25323, 1
25329, 1
25335, 1
25340, 1
25345, 1
25358, 1
25368, 1
25379, 1
25388, 1
25405, 1
25417, 1
25432, 1
25442, 1
25447, 1
25452, 1
25456, 1
25462, 1
25467, 1
25477, 1
25488, 1
25498, 1
25508, 1
25516, 1
25527, 1
25534, 1
25544, 1
25565, 1
25576, 1
25585, 1
25608, 1
25617, 1
25628, 1
25633, 1
25650, 1
25662, 1
25671, 1
25686, 1
25702, 1
25714, 1
25720, 1
25732, 1
25738, 1
25747, 1
25757, 1
25765, 1
25772, 1
25777, 1
25782, 1
25792, 1
25798, 1
25815, 1
25825, 1
25835, 1
25845, 1
25856, 1
25869, 1
25883, 1
25893, 1
25898, 1
25904, 1
25914, 1
25927, 1
25937, 1
25979, 1
25996, 1
26008, 1
26069, 1
26084, 1
26130, 1
26211, 1
26236, 1
26261, 1
26283, 1
26333, 1
26348, 1
26357, 1
26365, 1
26374, 1
26399, 1
26412, 1
26432, 1
26449, 1
26463, 1
26488, 1
26493, 1
26498, 1
26509, 1
26531, 1
26538, 1
26560, 1
26570, 1
26577, 1
26582, 1
26618, 1
26623, 1
26648, 1
26653, 1
26662, 1
26684, 1
26719, 1
26728, 1
26738, 1
26752, 1
26805, 1
26819, 1
26837, 1
26856, 1
26870, 1
26879, 1
26889, 1
26907, 1
26929, 1
27110, 1
27116, 1
27137, 1
27142, 1
27208, 1
27228, 1
27240, 1
27253, 1
27296, 1
27313, 1
27335, 1
27356, 1
27360, 1
27378, 1
27416, 1
27513, 1
27520, 1
27531, 1
27538, 1
27578, 1
27583, 1
27593, 1
27607, 1
27615, 1
27619, 1
27628, 1
27635, 1
27641, 1
27655, 1
27659, 1
27672, 1
27681, 1
27693, 1
27710, 1
27721, 1
27741, 1
27749, 1
27757, 1
27773, 1
27785, 1
27798, 1
27822, 1
27835, 1
27848, 1
27884, 1
27892, 1
27896, 1
27920, 1
27939, 1
28034, 1
28038, 1
28082, 1
28086, 1
28111, 1
28125, 1
28138, 1
28161, 1
28220, 1
28256, 1
28260, 1
28289, 1
28320, 1
28340, 1
28350, 1
28357, 1
28380, 1
28387, 1
28393, 1
28416, 1
28422, 1
28432, 1
28470, 1
28492, 1
28499, 1
28505, 1
28521, 1
28545, 1
28555, 1
28566, 1
28575, 1
28696, 1
28702, 1
28716, 1
28721, 1
28725, 1
28730, 1
28763, 1
28778, 1
28788, 1
28815, 1
28839, 1
28881, 1
28887, 1
28896, 1
28901, 1
28909, 1
28938, 1
28943, 1
28948, 1
28952, 1
28957, 1
28961, 1
28968, 1
28975, 1
28980, 1
28990, 1
29002, 1
29013, 1
29020, 1
29025, 1
29033, 1
29041, 1
29046, 1
29050, 1
29056, 1
29061, 1
29065, 1
29072, 1
29079, 1
29083, 1
29090, 1
29095, 1
29107, 1
29117, 1
29124, 1
29147, 1
29151, 1
29156, 1
29167, 1
29176, 1
29183, 1
29187, 1
29192, 1
29197, 1
29203, 1
29218, 1
29225, 1
29231, 1
29240, 1
29249, 1
29257, 1
29263, 1
29269, 1
29273, 1
29278, 1
29282, 1
29287, 1
29294, 1
29299, 1
29304, 1
29308, 1
29313, 1
29317, 1
29322, 1
29326, 1
29331, 1
29335, 1
29340, 1
29345, 1
29350, 1
29354, 1
29359, 1
29363, 1
29368, 1
29373, 1
29377, 1
29382, 1
29387, 1
29392, 1
29396, 1
29401, 1
29406, 1
29410, 1
29415, 1
29420, 1
29425, 1
29429, 1
29434, 1
29438, 1
29443, 1
29448, 1
29452, 1
29458, 1
29463, 1
29467, 1
29472, 1
29476, 1
29483, 1
29489, 1
29494, 1
29553, 1
29570, 1
29581, 1
29595, 1
29612, 1
29620, 1
29630, 1
29651, 1
29663, 1
29688, 1
29693, 1
29698, 1
29712, 1
29725, 1
29736, 1
29748, 1
29760, 1
29775, 1
29804, 1
29811, 1
29833, 1
29854, 1
29866, 1
29874, 1
29878, 1
29889, 1
29899, 1
29927, 1
29944, 1
29959, 1
29972, 1
29983, 1
29991, 1
29995, 1
30000, 1
Rows returned: 1582

-- Latency histogram (by millisecond buckets) for client 0
-- export histogram-latency-client-1.csv
--
SELECT latency/1000 as lat, count()
FROM request
WHERE event = 'REQ_FINISHED' AND nodeId = -1
GROUP BY lat
--(latency[ms], count[req])
Query time: 0.000 seconds
Rows returned: 0

-- Latency histogram (by millisecond buckets), all clients combined
-- export histogram-latency-all.csv
--
SELECT latency/1000 as lat, count()
FROM request
WHERE event = 'REQ_FINISHED'
GROUP BY lat
--(latency[ms], count[req])
Query time: 0.001 seconds
197, 1
230, 1
233, 1
239, 1
253, 1
266, 1
272, 1
273, 1
284, 1
317, 2
321, 1
328, 1
330, 1
332, 1
335, 1
339, 2
349, 1
350, 1
353, 1
361, 1
368, 1
369, 1
373, 1
374, 1
381, 1
389, 1
393, 1
398, 1
402, 1
405, 1
412, 1
417, 1
419, 1
429, 1
432, 2
434, 2
435, 2
438, 1
444, 2
446, 1
449, 1
458, 1
460, 1
462, 1
466, 1
481, 2
484, 2
490, 1
491, 2
493, 1
495, 1
496, 1
498, 1
499, 1
501, 1
502, 1
507, 1
509, 1
510, 1
511, 1
513, 1
519, 1
521, 1
524, 1
525, 1
528, 1
530, 1
531, 1
532, 1
537, 1
539, 1
541, 1
542, 1
543, 2
546, 1
549, 1
550, 1
551, 1
553, 1
558, 1
562, 1
565, 1
566, 2
567, 1
568, 1
569, 1
577, 1
578, 2
581, 2
589, 2
590, 2
591, 1
593, 1
595, 1
596, 1
597, 1
598, 1
599, 1
604, 2
605, 1
606, 1
608, 2
611, 1
619, 3
620, 2
621, 1
622, 1
627, 1
629, 1
633, 1
636, 1
637, 1
638, 1
639, 1
640, 2
642, 1
645, 1
649, 2
651, 2
652, 2
653, 1
654, 1
655, 2
658, 2
659, 1
660, 1
661, 2
662, 1
663, 2
665, 1
667, 1
668, 3
669, 2
670, 1
672, 1
673, 1
674, 1
675, 2
676, 1
677, 2
680, 2
681, 1
683, 1
685, 1
686, 2
689, 3
690, 1
691, 2
692, 4
694, 1
696, 1
697, 1
700, 1
705, 1
707, 1
708, 1
710, 1
711, 1
712, 4
716, 2
717, 1
718, 4
719, 2
722, 3
725, 1
726, 2
728, 1
729, 1
732, 2
733, 1
735, 1
736, 4
737, 2
738, 2
740, 1
741, 1
742, 3
743, 2
746, 1
751, 1
753, 1
754, 2
756, 1
759, 2
760, 2
763, 1
764, 1
766, 1
767, 2
768, 1
769, 2
770, 1
771, 1
773, 1
774, 1
775, 3
777, 2
778, 1
779, 1
781, 1
782, 1
784, 1
785, 2
786, 1
787, 2
788, 1
789, 2
790, 1
791, 1
792, 1
793, 2
794, 1
795, 1
797, 1
799, 1
800, 1
803, 2
804, 1
805, 2
806, 2
807, 2
808, 1
810, 2
812, 1
814, 1
815, 1
816, 1
820, 1
823, 2
824, 2
826, 1
827, 1
828, 3
829, 1
830, 2
831, 3
832, 2
834, 2
835, 2
836, 2
838, 1
843, 2
844, 1
846, 2
848, 1
849, 1
850, 2
851, 2
854, 4
855, 1
856, 1
858, 1
859, 1
861, 2
862, 1
863, 3
864, 2
865, 2
866, 1
869, 1
870, 1
872, 1
873, 2
877, 2
878, 1
879, 2
880, 2
881, 1
883, 1
884, 2
886, 3
887, 1
888, 2
890, 1
891, 1
893, 3
895, 2
896, 2
898, 1
900, 1
901, 3
903, 1
904, 2
905, 1
906, 1
907, 1
908, 5
909, 1
910, 1
911, 1
912, 2
916, 2
917, 1
919, 1
920, 2
921, 1
922, 1
923, 2
924, 2
925, 1
926, 2
927, 1
932, 1
933, 3
934, 2
935, 1
937, 1
940, 1
942, 3
944, 1
945, 1
947, 1
948, 2
950, 4
952, 1
953, 2
954, 1
958, 1
959, 1
962, 1
963, 4
964, 1
965, 2
966, 2
967, 2
969, 1
970, 2
971, 1
972, 1
974, 1
976, 2
977, 1
980, 2
981, 1
982, 1
984, 2
985, 1
986, 2
987, 3
989, 1
991, 1
992, 1
993, 1
997, 3
998, 1
999, 2
1000, 2
1001, 3
1003, 2
1004, 1
1005, 3
1006, 3
1007, 2
1009, 1
1011, 2
1013, 1
1015, 2
1017, 1
1018, 1
1019, 2
1020, 1
1021, 1
1022, 1
1024, 1
1025, 5
1027, 2
1028, 1
1029, 4
1032, 1
1036, 1
1040, 1
1041, 2
1042, 2
1044, 2
1045, 1
1048, 2
1050, 1
1051, 1
1052, 2
1053, 1
1054, 3
1055, 1
1056, 1
1057, 1
1059, 1
1063, 1
1064, 2
1065, 1
1066, 1
1067, 2
1069, 5
1070, 1
1071, 4
1072, 1
1073, 2
1074, 1
1075, 3
1077, 4
1078, 1
1079, 1
1080, 4
1081, 1
1082, 1
1083, 1
1085, 1
1086, 3
1087, 1
1088, 1
1089, 2
1090, 3
1092, 1
1093, 1
1094, 2
1096, 1
1097, 4
1100, 1
1101, 1
1102, 2
1104, 3
1109, 1
1110, 3
1111, 1
1112, 3
1114, 2
1115, 2
1118, 1
1121, 2
1122, 1
1123, 1
1124, 1
1126, 1
1127, 3
1128, 1
1130, 2
1132, 1
1134, 2
1135, 1
1136, 2
1137, 2
1139, 1
1141, 3
1142, 1
1143, 1
1144, 2
1146, 4
1147, 1
1148, 2
1150, 3
1151, 2
1152, 1
1154, 1
1155, 1
1156, 5
1157, 2
1159, 2
1160, 1
1161, 1
1162, 2
1163, 3
1165, 1
1167, 4
1168, 2
1169, 2
1173, 1
1175, 2
1176, 2
1178, 2
1179, 4
1180, 1
1181, 1
1182, 2
1183, 1
1184, 1
1185, 1
1186, 1
1187, 3
1188, 1
1189, 1
1190, 3
1191, 4
1194, 2
1196, 1
1197, 1
1199, 1
1201, 1
1203, 2
1206, 2
1208, 2
1209, 1
1212, 1
1213, 3
1214, 2
1215, 3
1216, 1
1219, 2
1223, 2
1224, 3
1225, 1
1226, 1
1227, 2
1228, 2
1230, 2
1231, 1
1232, 1
1233, 3
1234, 2
1235, 5
1236, 4
1237, 2
1238, 2
1239, 1
1240, 1
1241, 2
1244, 1
1245, 2
1247, 1
1248, 3
1249, 1
1251, 1
1253, 3
1254, 2
1256, 2
1257, 1
1258, 3
1259, 1
1260, 1
1262, 2
1263, 1
1264, 2
1266, 3
1267, 1
1270, 1
1274, 1
1276, 1
1277, 2
1279, 1
1281, 1
1282, 2
1283, 1
1284, 4
1285, 1
1288, 4
1289, 2
1290, 2
1294, 2
1295, 2
1296, 2
1297, 1
1298, 3
1299, 1
1300, 1
1302, 1
1303, 1
1304, 1
1307, 1
1310, 1
1313, 1
1314, 2
1315, 2
1318, 1
1322, 2
1323, 2
1324, 1
1325, 2
1326, 1
1328, 2
1329, 1
1330, 1
1331, 3
1333, 1
1335, 2
1337, 3
1338, 3
1340, 2
1342, 2
1343, 1
1345, 3
1346, 2
1347, 1
1348, 3
1349, 1
1351, 3
1352, 1
1353, 1
1355, 1
1357, 1
1359, 2
1360, 1
1361, 1
1362, 2
1366, 1
1367, 1
1368, 1
1369, 2
1371, 1
1372, 1
1374, 1
1375, 1
1376, 2
1377, 2
1380, 1
1381, 4
1382, 2
1383, 1
1384, 1
1385, 3
1386, 2
1387, 1
1392, 1
1394, 1
1395, 1
1396, 1
1397, 3
1398, 1
1399, 2
1401, 2
1402, 1
1403, 2
1404, 1
1407, 3
1408, 1
1410, 3
1411, 2
1415, 1
1416, 4
1417, 4
1420, 1
1421, 1
1423, 2
1424, 1
1426, 2
1427, 1
1428, 1
1430, 2
1431, 2
1433, 2
1434, 1
1436, 1
1437, 1
1439, 3
1440, 2
1441, 1
1442, 1
1443, 1
1444, 1
1448, 1
1449, 1
1450, 1
1453, 2
1454, 2
1455, 1
1456, 2
1457, 1
1458, 1
1460, 3
1461, 2
1462, 2
1463, 1
1464, 2
1466, 2
1467, 2
1470, 1
1471, 2
1473, 2
1476, 1
1477, 2
1479, 1
1480, 2
1481, 1
1483, 1
1485, 1
1486, 1
1488, 3
1490, 1
1491, 1
1493, 1
1494, 4
1496, 1
1497, 2
1498, 2
1500, 2
1501, 2
1502, 1
1504, 1
1505, 3
1506, 1
1507, 1
1508, 1
1509, 2
1510, 3
1513, 1
1516, 2
1520, 1
1521, 1
1522, 2
1524, 3
1525, 2
1527, 1
1528, 3
1529, 1
1531, 1
1532, 2
1533, 1
1534, 1
1536, 1
1537, 4
1538, 1
1539, 1
1540, 2
1542, 1
1543, 2
1544, 1
1545, 4
1547, 1
1548, 3
1549, 2
1550, 1
1552, 1
1556, 4
1560, 2
1561, 1
1562, 3
1565, 2
1567, 1
1568, 1
1569, 4
1572, 1
1573, 2
1579, 1
1581, 1
1583, 1
1586, 1
1587, 2
1588, 1
1589, 2
1590, 2
1591, 1
1593, 1
1595, 1
1596, 3
1598, 2
1603, 1
1604, 1
1605, 2
1606, 2
1608, 2
1609, 3
1610, 1
1611, 1
1613, 4
1614, 1
1615, 1
1616, 3
1618, 2
1619, 1
1621, 2
1622, 1
1625, 2
1626, 2
1627, 2
1628, 1
1629, 4
1630, 3
1631, 1
1632, 1
1636, 1
1637, 4
1638, 4
1643, 1
1644, 1
1645, 1
1646, 3
1647, 2
1650, 1
1651, 1
1655, 1
1663, 1
1664, 1
1667, 2
1669, 1
1671, 1
1673, 1
1676, 2
1680, 1
1682, 1
1684, 1
1685, 4
1686, 1
1687, 2
1688, 1
1689, 2
1690, 1
1691, 1
1695, 1
1696, 2
1697, 1
1700, 1
1701, 1
1705, 1
1706, 1
1707, 1
1709, 1
1712, 1
1713, 1
1714, 2
1716, 4
1717, 1
1718, 1
1720, 1
1722, 1
1723, 3
1725, 3
1728, 2
1729, 2
1731, 2
1735, 2
1739, 1
1742, 1
1745, 1
1747, 2
1748, 1
1751, 2
1752, 1
1755, 1
1758, 2
1760, 4
1763, 1
1765, 2
1766, 1
1769, 1
1775, 2
1777, 1
1779, 1
1781, 2
1784, 1
1785, 4
1786, 2
1787, 2
1789, 4
1790, 2
1791, 2
1792, 2
1793, 1
1794, 1
1797, 2
1798, 1
1799, 1
1800, 3
1803, 1
1807, 2
1810, 1
1812, 2
1819, 1
1820, 2
1821, 1
1823, 1
1825, 2
1827, 2
1828, 1
1829, 1
1831, 1
1832, 1
1834, 1
1837, 1
1840, 2
1841, 1
1842, 2
1844, 1
1846, 1
1847, 3
1848, 1
1851, 2
1854, 1
1857, 2
1859, 2
1862, 1
1864, 1
1867, 2
1868, 1
1871, 1
1872, 1
1873, 2
1874, 1
1875, 3
1878, 2
1884, 1
1885, 1
1886, 1
1887, 2
1889, 1
1893, 1
1894, 1
1897, 1
1898, 1
1900, 1
1902, 1
1903, 1
1905, 1
1907, 1
1909, 2
1911, 1
1912, 1
1913, 1
1914, 3
1915, 1
1916, 1
1919, 2
1921, 1
1923, 1
1925, 1
1926, 3
1927, 3
1933, 1
1936, 2
1937, 2
1938, 3
1939, 1
1946, 1
1947, 3
1948, 1
1954, 1
1956, 1
1957, 1
1960, 1
1963, 1
1964, 1
1967, 1
1970, 1
1973, 1
1976, 2
1979, 1
1980, 1
1984, 1
1985, 2
1988, 1
1989, 2
1990, 2
1991, 1
1996, 3
1997, 1
1999, 2
2002, 1
2007, 2
2014, 1
2015, 1
2016, 1
2017, 1
2020, 1
2021, 1
2022, 1
2024, 1
2030, 1
2031, 1
2032, 2
2033, 1
2037, 1
2040, 1
2044, 1
2045, 1
2051, 1
2054, 1
2055, 2
2059, 1
2064, 1
2068, 1
2072, 1
2075, 1
2079, 1
2084, 1
2091, 1
2095, 1
2098, 1
2100, 1
2103, 3
2106, 1
2109, 1
2111, 1
2123, 1
2124, 2
2128, 1
2129, 1
2134, 1
2142, 1
2146, 1
2155, 1
2157, 1
2158, 1
2160, 1
2165, 1
2167, 1
2168, 1
2169, 2
2170, 1
2177, 1
2178, 1
2186, 1
2187, 1
2196, 2
2201, 1
2204, 1
2214, 1
2229, 2
2238, 1
2243, 1
2268, 2
2269, 1
2274, 1
2276, 1
2283, 1
2285, 1
2290, 1
2299, 1
2310, 1
2317, 1
2321, 1
2323, 1
2352, 1
2359, 1
2363, 1
2380, 1
2392, 1
2393, 1
Rows returned: 1022

-- Latency histogram (by millisecond buckets) for client 0, not considering watermark blocking
-- export histogram-latency-client-1.csv
--
SELECT latency/1000 as lat, count()
FROM request
WHERE event = 'ENOUGH_RESP' AND nodeId = -1
GROUP BY lat
--(latency[ms], count[req])
Query time: 0.000 seconds
Rows returned: 0

-- Latency histogram (by millisecond buckets), all clients combined, not considering watermark blocking
-- export histogram-latency-all.csv
--
SELECT latency/1000 as lat, count()
FROM request
WHERE event = 'ENOUGH_RESP'
GROUP BY lat
--(latency[ms], count[req])
Query time: 0.001 seconds
189, 1
230, 1
232, 1
236, 1
253, 1
266, 1
269, 1
273, 1
284, 1
303, 1
308, 1
315, 1
321, 1
325, 1
328, 1
330, 1
334, 1
338, 1
340, 1
345, 1
349, 1
350, 1
355, 1
360, 1
362, 1
364, 1
368, 1
374, 1
376, 1
382, 1
383, 1
391, 1
392, 1
395, 1
397, 1
418, 1
423, 1
426, 2
430, 1
432, 1
433, 2
434, 1
440, 1
441, 1
445, 1
446, 1
448, 1
449, 1
451, 1
453, 1
456, 1
457, 1
464, 1
478, 1
480, 2
483, 1
484, 1
485, 1
489, 1
490, 1
492, 1
496, 1
501, 2
505, 1
507, 1
509, 1
510, 1
517, 1
521, 1
522, 2
523, 1
525, 1
528, 1
529, 1
531, 1
536, 1
538, 1
539, 1
540, 1
542, 1
543, 1
546, 2
549, 1
550, 1
552, 1
558, 1
561, 1
563, 1
565, 1
566, 2
568, 1
569, 1
576, 1
577, 1
581, 1
587, 1
589, 3
591, 2
593, 1
595, 2
596, 2
598, 1
601, 2
603, 1
605, 1
607, 1
608, 1
612, 1
617, 2
618, 2
619, 1
621, 1
625, 1
627, 1
629, 1
630, 1
632, 1
633, 1
637, 2
638, 1
639, 1
640, 2
642, 1
644, 2
645, 1
646, 1
648, 1
649, 1
650, 1
651, 2
652, 2
654, 2
656, 1
659, 1
661, 3
662, 1
663, 1
664, 1
666, 1
667, 3
668, 3
669, 2
670, 2
672, 1
675, 1
676, 1
677, 1
678, 1
679, 2
680, 1
681, 1
683, 1
684, 1
686, 2
688, 1
689, 3
690, 1
691, 1
692, 3
694, 1
699, 1
700, 1
704, 2
705, 1
706, 1
708, 1
709, 1
710, 2
711, 1
714, 1
715, 1
716, 3
717, 1
718, 3
722, 1
725, 3
727, 1
728, 1
732, 1
733, 1
735, 6
736, 2
737, 2
738, 2
740, 2
741, 4
742, 1
752, 1
753, 1
754, 1
755, 1
757, 1
759, 2
760, 1
762, 3
764, 3
765, 1
766, 1
767, 2
768, 1
769, 3
772, 1
773, 1
774, 2
775, 3
778, 2
780, 2
783, 2
785, 2
786, 1
787, 1
789, 2
790, 1
792, 1
793, 2
794, 1
796, 1
798, 1
799, 1
800, 1
802, 2
803, 2
805, 1
806, 2
807, 2
809, 2
810, 1
811, 1
814, 2
816, 1
817, 1
818, 1
819, 1
820, 1
821, 1
822, 1
823, 1
825, 2
826, 4
827, 1
829, 1
830, 4
831, 1
833, 2
834, 2
835, 2
838, 2
839, 1
843, 2
845, 1
846, 1
847, 1
849, 3
850, 2
851, 2
852, 1
853, 1
854, 1
855, 1
856, 1
858, 1
860, 1
861, 1
862, 3
863, 3
865, 1
869, 1
870, 1
872, 1
873, 2
875, 1
876, 1
877, 3
879, 1
880, 3
882, 2
884, 3
886, 1
888, 2
889, 1
890, 1
891, 1
892, 1
893, 2
894, 1
895, 3
898, 1
899, 1
901, 1
903, 3
904, 1
905, 1
906, 1
907, 3
908, 4
909, 1
910, 1
911, 1
912, 1
913, 1
914, 1
915, 2
916, 2
917, 2
919, 2
923, 1
924, 1
925, 4
926, 1
927, 1
929, 1
931, 1
932, 1
933, 1
934, 2
935, 1
938, 1
942, 2
943, 2
946, 1
947, 2
948, 1
949, 1
951, 1
952, 1
953, 1
955, 1
956, 1
958, 1
959, 1
961, 4
962, 4
964, 2
965, 1
967, 2
968, 1
970, 2
971, 1
975, 2
976, 1
977, 1
979, 2
980, 2
981, 2
983, 1
986, 3
990, 1
991, 1
992, 3
993, 2
995, 1
996, 2
997, 2
999, 2
1000, 1
1001, 1
1002, 1
1003, 3
1004, 4
1005, 1
1006, 2
1008, 3
1010, 1
1011, 3
1014, 1
1016, 1
1018, 1
1019, 4
1022, 3
1024, 3
1028, 3
1029, 2
1032, 2
1033, 1
1035, 1
1036, 1
1038, 1
1040, 1
1041, 2
1042, 1
1043, 1
1045, 1
1047, 2
1050, 2
1051, 2
1052, 1
1054, 1
1055, 2
1057, 2
1059, 1
1061, 1
1063, 1
1064, 2
1065, 2
1067, 2
1068, 1
1069, 4
1070, 3
1071, 2
1072, 1
1073, 2
1074, 1
1075, 3
1076, 1
1077, 2
1079, 1
1080, 3
1081, 1
1082, 1
1083, 2
1084, 1
1085, 2
1086, 2
1087, 2
1089, 1
1090, 2
1091, 3
1092, 2
1093, 1
1095, 2
1096, 2
1097, 1
1099, 1
1100, 1
1102, 1
1103, 4
1107, 1
1109, 2
1110, 3
1111, 1
1112, 2
1114, 3
1119, 1
1120, 1
1121, 2
1122, 1
1124, 1
1125, 1
1126, 1
1127, 1
1128, 1
1129, 2
1131, 2
1133, 1
1134, 3
1136, 1
1137, 1
1138, 1
1140, 2
1141, 1
1142, 1
1143, 4
1144, 1
1145, 1
1146, 4
1147, 1
1148, 1
1149, 2
1150, 3
1151, 1
1152, 1
1153, 1
1154, 2
1155, 4
1156, 2
1159, 1
1160, 1
1161, 2
1162, 2
1163, 1
1164, 1
1165, 1
1166, 1
1167, 3
1168, 2
1171, 1
1172, 1
1173, 1
1174, 3
1175, 1
1176, 1
1177, 3
1178, 5
1179, 1
1181, 2
1182, 2
1183, 2
1184, 1
1186, 4
1187, 1
1188, 1
1189, 1
1190, 1
1191, 2
1193, 2
1195, 1
1197, 1
1200, 2
1202, 1
1204, 1
1205, 1
1206, 3
1208, 1
1211, 2
1212, 2
1213, 4
1215, 2
1216, 1
1219, 3
1220, 2
1221, 2
1222, 1
1224, 1
1225, 1
1226, 2
1227, 1
1228, 1
1229, 1
1230, 2
1231, 2
1232, 1
1233, 2
1234, 4
1235, 4
1236, 2
1237, 2
1238, 1
1239, 1
1240, 2
1242, 1
1244, 1
1245, 1
1247, 2
1248, 1
1251, 2
1252, 1
1253, 3
1254, 1
1255, 2
1257, 1
1258, 2
1260, 1
1261, 1
1262, 1
1263, 1
1264, 2
1265, 2
1267, 1
1270, 1
1272, 2
1273, 1
1276, 3
1277, 1
1279, 1
1280, 1
1281, 1
1282, 2
1283, 2
1284, 2
1285, 2
1286, 1
1287, 1
1288, 4
1290, 1
1293, 2
1295, 4
1296, 3
1297, 1
1298, 2
1299, 1
1302, 3
1304, 1
1308, 1
1310, 1
1312, 1
1313, 2
1316, 1
1317, 1
1321, 2
1322, 2
1323, 2
1324, 1
1325, 1
1327, 1
1328, 1
1329, 1
1330, 1
1331, 2
1334, 2
1336, 2
1337, 1
1338, 3
1339, 1
1341, 2
1342, 1
1343, 1
1344, 2
1345, 2
1346, 3
1347, 2
1348, 1
1349, 2
1351, 2
1352, 1
1353, 2
1354, 1
1359, 2
1360, 1
1361, 1
1362, 3
1365, 1
1366, 1
1368, 2
1369, 1
1370, 1
1371, 3
1374, 2
1375, 2
1377, 3
1378, 2
1379, 1
1380, 3
1381, 3
1383, 3
1385, 1
1387, 1
1392, 2
1393, 3
1394, 1
1395, 1
1396, 2
1397, 1
1398, 2
1400, 1
1401, 4
1403, 2
1405, 1
1406, 1
1407, 3
1408, 1
1409, 1
1410, 1
1414, 1
1415, 2
1416, 2
1418, 1
1419, 1
1420, 1
1421, 1
1423, 1
1425, 1
1426, 1
1429, 2
1430, 1
1431, 1
1432, 2
1433, 1
1435, 3
1436, 3
1438, 1
1439, 3
1440, 1
1442, 1
1443, 1
1444, 1
1445, 1
1448, 1
1449, 1
1450, 1
1453, 1
1454, 1
1455, 1
1456, 4
1457, 2
1458, 1
1459, 2
1460, 3
1461, 2
1462, 1
1465, 1
1466, 1
1467, 1
1469, 1
1470, 1
1471, 1
1472, 1
1475, 6
1476, 1
1477, 1
1478, 3
1479, 2
1481, 1
1485, 1
1486, 1
1487, 2
1489, 1
1493, 1
1494, 2
1495, 2
1496, 3
1497, 2
1499, 1
1500, 2
1501, 3
1502, 1
1503, 1
1504, 3
1506, 1
1507, 1
1508, 4
1509, 2
1510, 2
1512, 1
1513, 1
1515, 1
1520, 1
1521, 1
1522, 1
1523, 1
1524, 3
1525, 1
1527, 2
1528, 2
1529, 1
1532, 1
1533, 1
1534, 2
1535, 1
1536, 4
1537, 3
1539, 1
1540, 1
1543, 1
1545, 2
1546, 2
1547, 1
1549, 3
1550, 1
1552, 1
1554, 1
1556, 2
1559, 1
1560, 1
1561, 2
1562, 1
1563, 1
1564, 1
1565, 1
1566, 1
1568, 2
1570, 1
1572, 2
1578, 1
1581, 1
1582, 1
1583, 2
1585, 3
1586, 2
1587, 1
1588, 3
1589, 1
1591, 1
1592, 1
1593, 2
1595, 2
1596, 2
1597, 1
1598, 1
1599, 1
1600, 1
1601, 1
1602, 2
1603, 1
1604, 2
1605, 2
1606, 3
1607, 1
1608, 2
1609, 1
1610, 1
1612, 1
1613, 2
1615, 1
1616, 1
1617, 2
1618, 3
1622, 1
1623, 1
1625, 3
1626, 1
1627, 2
1628, 2
1629, 2
1630, 1
1631, 1
1634, 1
1635, 1
1636, 3
1637, 2
1639, 1
1643, 1
1645, 4
1646, 1
1650, 1
1651, 1
1652, 1
1656, 1
1661, 1
1663, 2
1665, 1
1668, 1
1671, 1
1673, 1
1674, 1
1675, 2
1676, 1
1680, 1
1682, 1
1684, 1
1685, 4
1686, 3
1687, 1
1688, 1
1689, 1
1690, 1
1691, 1
1693, 1
1696, 1
1697, 1
1699, 1
1700, 2
1701, 1
1703, 1
1705, 1
1706, 2
1707, 4
1712, 1
1714, 3
1717, 1
1720, 1
1721, 1
1722, 2
1723, 1
1724, 3
1725, 1
1727, 1
1728, 1
1730, 1
1732, 1
1733, 1
1734, 2
1735, 1
1736, 1
1738, 1
1743, 1
1747, 2
1749, 1
1750, 1
1751, 1
1755, 1
1757, 1
1758, 1
1759, 2
1764, 1
1765, 1
1766, 2
1767, 1
1768, 1
1770, 1
1774, 1
1775, 2
1776, 2
1779, 1
1780, 2
1782, 1
1783, 1
1784, 2
1786, 2
1787, 3
1788, 2
1790, 2
1791, 2
1792, 1
1793, 2
1795, 1
1796, 1
1797, 2
1800, 2
1802, 1
1804, 2
1807, 1
1809, 1
1812, 3
1814, 1
1816, 1
1817, 1
1820, 1
1822, 2
1824, 1
1826, 1
1829, 1
1830, 1
1831, 1
1832, 1
1833, 2
1834, 2
1835, 2
1836, 1
1838, 3
1840, 1
1846, 2
1847, 1
1851, 1
1852, 1
1855, 2
1856, 1
1858, 1
1859, 1
1860, 1
1862, 2
1864, 1
1867, 1
1868, 1
1871, 2
1872, 2
1873, 1
1874, 2
1878, 2
1883, 2
1885, 1
1886, 1
1888, 1
1889, 1
1890, 1
1892, 1
1893, 1
1895, 1
1896, 1
1899, 1
1900, 1
1901, 1
1902, 1
1904, 1
1905, 1
1906, 1
1907, 2
1908, 1
1910, 2
1911, 1
1912, 1
1914, 2
1917, 1
1921, 2
1922, 3
1923, 1
1925, 2
1927, 1
1932, 2
1933, 1
1936, 1
1937, 3
1938, 1
1942, 1
1944, 1
1945, 1
1946, 1
1952, 1
1953, 1
1957, 1
1961, 1
1963, 1
1964, 1
1965, 1
1970, 1
1973, 2
1975, 1
1976, 3
1982, 1
1984, 2
1985, 2
1986, 2
1993, 1
1994, 1
1998, 1
1999, 2
2001, 1
2002, 1
2003, 1
2006, 1
2011, 1
2013, 1
2019, 1
2022, 2
2026, 1
2027, 1
2028, 1
2030, 1
2031, 1
2032, 1
2035, 1
2040, 1
2044, 1
2049, 2
2051, 1
2052, 1
2054, 1
2057, 1
2062, 2
2071, 1
2078, 1
2081, 1
2091, 1
2094, 1
2097, 1
2098, 2
2100, 1
2101, 1
2102, 2
2106, 1
2111, 1
2122, 1
2124, 2
2128, 1
2133, 1
2142, 1
2144, 1
2150, 1
2155, 2
2159, 1
2161, 2
2166, 1
2168, 4
2169, 1
2170, 1
2176, 1
2193, 1
2195, 1
2196, 1
2204, 1
2205, 1
2229, 3
2237, 1
2244, 1
2265, 1
2268, 2
2271, 1
2280, 1
2283, 1
2284, 1
2297, 1
2310, 1
2312, 1
2313, 1
2315, 1
2322, 1
2358, 1
2359, 1
2362, 1
2378, 1
2391, 1
Rows returned: 1060

-- Throughput in time (per millisecond)
-- export timeline-throughput-commit.csv
--
SELECT (ts - (SELECT min(ts) FROM request WHERE event = 'REQ_FINISHED'))/1000 as msec, count()
FROM request
WHERE event = 'REQ_FINISHED'
GROUP BY msec
-- (msec, count[req])
Query time: 0.002 seconds
0, 1
2, 1
3, 1
5, 1
7, 1
11, 1
19, 1
21, 1
26, 1
30, 1
37, 1
40, 1
44, 1
46, 1
53, 1
58, 1
60, 1
62, 1
70, 1
72, 1
78, 1
80, 1
81, 1
88, 1
90, 1
104, 1
106, 1
108, 1
109, 1
111, 1
112, 1
114, 1
115, 1
116, 1
118, 1
119, 1
125, 1
126, 1
137, 1
138, 1
141, 1
142, 1
237, 1
240, 1
241, 2
243, 1
252, 1
257, 1
261, 1
274, 1
276, 1
277, 1
278, 1
280, 2
283, 1
284, 1
285, 1
287, 1
300, 1
303, 1
305, 1
306, 1
310, 1
311, 1
313, 1
317, 1
318, 1
319, 1
679, 1
680, 1
683, 1
686, 1
688, 1
689, 1
690, 1
691, 1
692, 1
705, 1
707, 1
710, 1
712, 1
714, 1
715, 1
716, 1
741, 1
743, 1
801, 1
803, 1
811, 1
813, 1
825, 1
826, 1
827, 1
828, 1
829, 1
1081, 1
1083, 1
1084, 1
1085, 1
1086, 1
1087, 1
1090, 1
1091, 2
1119, 1
1120, 1
1130, 1
1133, 1
1137, 1
1138, 1
1158, 1
1162, 1
2010, 1
2011, 1
2014, 1
2017, 1
2019, 1
2021, 1
2022, 1
2023, 1
2033, 1
2034, 1
2035, 1
2036, 1
2038, 1
2051, 1
2052, 1
2054, 1
2055, 1
2139, 1
2141, 1
2143, 1
2144, 1
2145, 1
2163, 1
2165, 1
2176, 1
2178, 1
2182, 1
2188, 1
2193, 2
2195, 2
2197, 1
2198, 1
2199, 1
2228, 1
2231, 1
2234, 1
2238, 2
2240, 1
2254, 1
2272, 1
2280, 1
2282, 1
2570, 1
2572, 2
2574, 1
2577, 1
2583, 1
2586, 1
2627, 1
2629, 1
2631, 1
2644, 2
2646, 1
2661, 1
2666, 1
2673, 1
2678, 1
2679, 1
2681, 1
2682, 1
2683, 1
2688, 1
2692, 1
2701, 1
2704, 1
2705, 1
2707, 1
2710, 1
3026, 1
3027, 1
3030, 1
3034, 1
3039, 1
3040, 1
3046, 1
3048, 1
3049, 1
3050, 1
3060, 1
3070, 1
3072, 1
3078, 1
3082, 2
3084, 1
3090, 1
3097, 1
3098, 1
3109, 1
3110, 1
3111, 1
3112, 1
4094, 1
4096, 1
4098, 1
4099, 2
4103, 1
4109, 1
4111, 1
4121, 1
4129, 1
4131, 1
4134, 1
4136, 1
4140, 1
4145, 1
4148, 1
4154, 1
4159, 2
4166, 1
4179, 1
4182, 1
4185, 1
4188, 1
4303, 1
4304, 1
4307, 1
4308, 1
4309, 1
4321, 1
4323, 1
4325, 1
4327, 1
4350, 1
4372, 2
4374, 1
4377, 1
4387, 1
4389, 1
4390, 1
4392, 1
4393, 1
4405, 2
4407, 1
4409, 1
4410, 1
4742, 1
4744, 1
4745, 1
4764, 1
4766, 1
4767, 1
4768, 1
4769, 1
4770, 1
4771, 1
4773, 1
4774, 1
4776, 1
4797, 1
4804, 1
4807, 1
4808, 1
4817, 1
4822, 1
4845, 1
4846, 1
4848, 1
4849, 1
4850, 1
4884, 1
5116, 1
5121, 1
5122, 1
5131, 1
5156, 1
5158, 1
5159, 1
5162, 1
5165, 1
5177, 1
5178, 1
5179, 1
5187, 1
5188, 1
5190, 1
5191, 1
5201, 1
5204, 1
5207, 1
6085, 1
6094, 1
6095, 1
6098, 1
6099, 1
6102, 1
6104, 1
6105, 1
6106, 1
6116, 1
6117, 1
6119, 1
6120, 1
6121, 1
6123, 1
6124, 1
6128, 1
6130, 1
6131, 1
6235, 1
6237, 1
6239, 1
6241, 1
6242, 1
6244, 1
6268, 1
6270, 1
6289, 1
6291, 1
6293, 1
6296, 1
6300, 1
6314, 1
6315, 1
6320, 2
6325, 1
6329, 1
6334, 1
6337, 1
6341, 1
6342, 1
6344, 1
6348, 1
6353, 1
6364, 1
6368, 1
6693, 1
6694, 1
6695, 1
6708, 1
6710, 1
6713, 1
6718, 1
6722, 1
6728, 2
6732, 1
6733, 1
6735, 1
6745, 1
6764, 1
6768, 1
6769, 1
6770, 1
6772, 2
6774, 1
6775, 1
6777, 1
6779, 1
6780, 1
6781, 1
6785, 1
7051, 1
7052, 1
7053, 1
7055, 1
7087, 1
7090, 1
7093, 1
7094, 1
7098, 1
7100, 1
7102, 1
7116, 1
7127, 1
7129, 1
7131, 1
7132, 1
7137, 1
7141, 1
7145, 1
7148, 1
8114, 1
8115, 1
8116, 1
8118, 1
8119, 1
8134, 1
8136, 1
8149, 1
8151, 1
8152, 1
8154, 1
8157, 1
8158, 1
8159, 1
8192, 1
8193, 1
8195, 1
8201, 1
8203, 1
8204, 1
8277, 1
8298, 1
8300, 1
8301, 1
8302, 1
8303, 1
8305, 2
8314, 1
8315, 1
8333, 1
8335, 1
8341, 1
8344, 1
8345, 1
8346, 1
8347, 1
8349, 1
8350, 1
8351, 1
8353, 1
8355, 1
8375, 2
8378, 1
8379, 1
8388, 1
8389, 1
8391, 1
8394, 1
8699, 1
8700, 1
8703, 1
8706, 1
8708, 1
8710, 1
8718, 1
8720, 1
8723, 1
8725, 1
8726, 1
8728, 1
8734, 1
8735, 1
8737, 1
8745, 1
8747, 1
8749, 1
8761, 1
8762, 1
8765, 1
8766, 1
8768, 1
8775, 1
8786, 1
8799, 1
8800, 1
8806, 1
8807, 1
8808, 1
9134, 1
9137, 1
9139, 1
9145, 1
9146, 1
9156, 1
9158, 2
9159, 1
9161, 1
9163, 1
9165, 1
9167, 1
9170, 1
9172, 2
9174, 1
9175, 1
9180, 1
9182, 1
9184, 1
9186, 2
10101, 1
10103, 1
10105, 2
10125, 1
10133, 1
10134, 1
10136, 1
10141, 1
10146, 2
10155, 2
10160, 1
10162, 1
10163, 1
10165, 1
10166, 1
10168, 2
10169, 1
10171, 1
10172, 1
10244, 1
10246, 1
10248, 2
10250, 2
10254, 1
10258, 1
10260, 1
10269, 1
10271, 1
10277, 1
10278, 1
10279, 1
10282, 1
10284, 1
10288, 1
10298, 1
10321, 1
10322, 1
10325, 2
10338, 1
10339, 1
10342, 1
10345, 1
10374, 1
10376, 1
10726, 1
10731, 1
10733, 1
10735, 1
10743, 1
10745, 2
10747, 2
10751, 1
10754, 1
10756, 1
10758, 1
10759, 1
10760, 1
10761, 1
10762, 1
10763, 1
10764, 1
10765, 1
10767, 1
10772, 1
10774, 1
10776, 2
10785, 1
10794, 1
10796, 1
11106, 1
11107, 1
11109, 1
11111, 1
11114, 1
11115, 1
11117, 1
11118, 1
11120, 1
11123, 1
11127, 1
11130, 1
11134, 1
11135, 1
11141, 1
11144, 1
11152, 1
11163, 1
11165, 1
11166, 1
12161, 1
12171, 1
12175, 1
12180, 1
12187, 1
12193, 1
12195, 1
12202, 1
12204, 1
12205, 1
12206, 1
12207, 1
12209, 1
12210, 1
12217, 1
12231, 1
12234, 1
12236, 1
12238, 1
12246, 1
12364, 1
12370, 1
12378, 1
12393, 1
12394, 1
12395, 1
12397, 1
12398, 1
12400, 1
12407, 1
12437, 2
12438, 1
12452, 1
12456, 1
12479, 1
12480, 1
12492, 1
12493, 1
12501, 1
12502, 1
12512, 1
12514, 1
12515, 1
12822, 1
12823, 1
12825, 1
12827, 1
12829, 1
12831, 1
12836, 2
12840, 1
12872, 1
12874, 1
12881, 1
12883, 1
12884, 2
12894, 2
12896, 1
12897, 1
12899, 1
12944, 1
12946, 1
12947, 1
12948, 1
12950, 1
13138, 1
13142, 1
13143, 1
13144, 1
13163, 1
13167, 1
13168, 1
13175, 1
13178, 1
13180, 1
13181, 1
13190, 1
13194, 1
13195, 1
13196, 1
13199, 1
13200, 1
13203, 1
13207, 1
14206, 1
14208, 1
14209, 1
14211, 1
14213, 1
14215, 1
14217, 1
14218, 1
14220, 1
14222, 1
14254, 1
14256, 1
14257, 1
14264, 1
14266, 1
14267, 1
14269, 1
14271, 1
14372, 1
14381, 1
14387, 1
14394, 1
14395, 1
14399, 1
14401, 1
14403, 1
14405, 1
14407, 1
14427, 1
14431, 1
14432, 1
14434, 1
14435, 1
14439, 1
14441, 1
14442, 1
14443, 1
14447, 1
14448, 1
14460, 1
14467, 1
14474, 1
14475, 1
14483, 1
14487, 1
14489, 1
14491, 1
14494, 1
14496, 1
14497, 1
14499, 1
14501, 1
14503, 2
14839, 1
14844, 1
14845, 1
14846, 1
14848, 2
14850, 1
14852, 1
14853, 1
14854, 1
14856, 1
14857, 1
14862, 1
14884, 1
14887, 1
14897, 1
14902, 1
14918, 1
14923, 1
14926, 1
14945, 1
14972, 1
14973, 1
14974, 1
14976, 1
14977, 1
14981, 1
14985, 1
15000, 1
15001, 1
15003, 1
15006, 1
15021, 1
15022, 1
15044, 1
15050, 1
15061, 1
15379, 1
15384, 1
15385, 1
15386, 1
15394, 1
15395, 1
15397, 1
15398, 1
15399, 1
15401, 1
15405, 1
15407, 1
15412, 1
15413, 1
15414, 1
15416, 1
15425, 1
15428, 1
16076, 1
16078, 1
16079, 1
16080, 1
16082, 1
16083, 1
16088, 1
16089, 1
16092, 1
16113, 1
16114, 1
16116, 1
16124, 1
16126, 1
16128, 1
16130, 1
16131, 1
16137, 1
16139, 1
16215, 1
16220, 1
16227, 2
16229, 1
16230, 1
16231, 1
16233, 1
16237, 1
16242, 1
16245, 1
16246, 2
16248, 1
16259, 1
16260, 1
16283, 1
16293, 1
16294, 1
16295, 1
16296, 1
16297, 1
16299, 1
16307, 1
16551, 1
16554, 1
16556, 1
16564, 1
16566, 2
16568, 1
16569, 1
16571, 1
16573, 1
16574, 1
16575, 1
16576, 1
16577, 1
16578, 1
16579, 1
16580, 1
16582, 1
16583, 1
16605, 1
16618, 1
16620, 1
16621, 1
17084, 1
17086, 1
17088, 1
17093, 1
17111, 1
17116, 1
17118, 1
17130, 1
17135, 1
17136, 1
17138, 1
17139, 1
17145, 1
17146, 1
17147, 1
17157, 1
17158, 1
17160, 1
17164, 1
17167, 1
17171, 1
17172, 1
17174, 1
18170, 1
18172, 1
18203, 1
18204, 1
18207, 1
18209, 1
18210, 1
18212, 1
18213, 1
18220, 1
18225, 1
18227, 1
18234, 1
18241, 1
18243, 1
18244, 1
18250, 2
18252, 2
18254, 1
18264, 1
18267, 1
18360, 1
18365, 1
18366, 2
18368, 1
18369, 1
18370, 1
18373, 1
18388, 1
18393, 1
18397, 2
18418, 1
18421, 1
18430, 1
18433, 1
18435, 1
18438, 1
18439, 1
18440, 1
18441, 1
18442, 1
18443, 1
18445, 1
18447, 1
18449, 1
18452, 1
18685, 1
18686, 1
18688, 1
18690, 1
18691, 1
18694, 1
18700, 1
18714, 2
18715, 1
18717, 1
18719, 1
18727, 1
18728, 1
18733, 1
18735, 2
18737, 1
18739, 1
18742, 1
18743, 1
18745, 1
18746, 1
18747, 1
18766, 1
18774, 1
18776, 1
19134, 1
19135, 1
19137, 1
19140, 1
19142, 1
19143, 2
19144, 1
19152, 1
19164, 1
19168, 1
19170, 1
19171, 1
19172, 1
19178, 1
19180, 1
19186, 1
19187, 1
19188, 1
19189, 1
19190, 1
19191, 2
20142, 1
20143, 2
20145, 1
20149, 1
20150, 1
20152, 1
20166, 1
20168, 2
20169, 1
20170, 1
20172, 1
20181, 1
20183, 1
20184, 1
20186, 1
20189, 2
20191, 1
20195, 1
20205, 1
20206, 1
20208, 1
20301, 1
20303, 2
20304, 1
20305, 1
20313, 1
20316, 1
20329, 1
20331, 1
20332, 1
20346, 1
20350, 1
20353, 1
20357, 2
20364, 1
20369, 1
20386, 1
20388, 1
20390, 2
20392, 1
20393, 1
20404, 1
20407, 1
20410, 1
20412, 1
20413, 1
20415, 1
20721, 1
20724, 1
20734, 1
20735, 1
20744, 1
20745, 1
20746, 1
20747, 1
20749, 1
20752, 1
20754, 1
20759, 1
20761, 1
20762, 1
20763, 1
20768, 1
20769, 1
20771, 1
20777, 1
20779, 1
20787, 1
20788, 1
20789, 1
20790, 1
20792, 1
20798, 1
20801, 1
20802, 1
20805, 1
21152, 1
21154, 1
21155, 1
21156, 1
21160, 1
21161, 1
21162, 1
21177, 1
21179, 1
21183, 1
21188, 1
21192, 1
21193, 1
21200, 1
21201, 1
21202, 1
21204, 1
21223, 1
21228, 1
21229, 1
21230, 1
21237, 2
21242, 1
21244, 1
22251, 1
22262, 1
22264, 1
22265, 1
22272, 1
22273, 1
22274, 2
22276, 1
22279, 1
22281, 1
22284, 1
22286, 1
22288, 2
22290, 1
22292, 1
22294, 1
22297, 1
22304, 1
22305, 1
22317, 1
22319, 1
22320, 1
22394, 1
22403, 1
22408, 1
22411, 1
22412, 1
22413, 1
22415, 1
22416, 1
22418, 1
22419, 1
22423, 2
22426, 1
22440, 1
22453, 1
22456, 1
22457, 1
22459, 2
22472, 1
22474, 1
22475, 1
22477, 1
22481, 1
22482, 1
22483, 1
22494, 1
22495, 1
22512, 1
22523, 1
22781, 1
22782, 1
22783, 1
22784, 1
22785, 1
22786, 1
22788, 1
22790, 1
22802, 1
22803, 1
22805, 1
22806, 1
22815, 1
22816, 1
22820, 1
22821, 1
22822, 1
22825, 1
22827, 1
22828, 1
22837, 1
22839, 1
22841, 1
22845, 1
22846, 1
22848, 1
22852, 1
22860, 1
22863, 1
22868, 1
22872, 1
23214, 1
23215, 2
23217, 1
23218, 1
23219, 1
23221, 1
23222, 1
23223, 2
23225, 1
23235, 1
23236, 1
23238, 1
23245, 1
23256, 1
23258, 1
23261, 1
23262, 1
23265, 1
23278, 1
23280, 1
23281, 1
23286, 1
24383, 1
24386, 1
24393, 1
24395, 2
24397, 1
24403, 1
24404, 1
24410, 1
24413, 1
24427, 1
24428, 1
24429, 1
24446, 1
24447, 1
24454, 1
24456, 1
24462, 2
24467, 1
24469, 1
24473, 1
24477, 1
24478, 1
24558, 1
24565, 1
24567, 1
24569, 1
24571, 1
24572, 1
24590, 1
24591, 1
24592, 1
24593, 1
24628, 1
24629, 1
24635, 1
24637, 1
24638, 1
24642, 1
24653, 1
24655, 1
24657, 1
24659, 1
24660, 1
24672, 1
24674, 1
24675, 1
24676, 1
24678, 1
24679, 1
24686, 1
24688, 1
24696, 1
24697, 1
24699, 1
24701, 1
24707, 1
24711, 1
24720, 1
24722, 2
24723, 1
24726, 1
24729, 1
24732, 1
25169, 1
25170, 1
25171, 1
25176, 1
25177, 1
25178, 1
25180, 1
25194, 1
25195, 1
25196, 1
25197, 1
25203, 1
25204, 1
25205, 1
25206, 1
25208, 1
25209, 1
25210, 1
25212, 1
25213, 1
25214, 1
25218, 1
25220, 1
25221, 1
25226, 1
25227, 1
25228, 1
25229, 1
25230, 1
25231, 1
25232, 1
25233, 1
25234, 1
25253, 1
25256, 1
25278, 1
25281, 1
25282, 2
25283, 1
25285, 2
25554, 1
25556, 1
25557, 1
25560, 1
25563, 1
25564, 1
25566, 2
25571, 1
25573, 1
25575, 1
25578, 1
25582, 1
25587, 1
25588, 1
25589, 1
25590, 1
25591, 1
25609, 1
25610, 1
25611, 1
25612, 1
25613, 1
25620, 1
25621, 1
26186, 1
26187, 1
26198, 1
26199, 1
26203, 1
26204, 1
26212, 1
26213, 1
26216, 1
26218, 2
26219, 1
26231, 1
26233, 1
26234, 1
26235, 1
26236, 2
26237, 2
26238, 1
26240, 1
26251, 1
26366, 1
26369, 1
26374, 1
26388, 1
26391, 1
26394, 1
26403, 1
26405, 1
26406, 1
26411, 1
26420, 2
26421, 1
26422, 1
26428, 1
26430, 1
26432, 1
26434, 2
26441, 1
26442, 1
26446, 1
26447, 1
26448, 1
26751, 1
26752, 1
26764, 1
26784, 1
26786, 1
26787, 1
26790, 2
26794, 1
26796, 1
26798, 1
26799, 1
26800, 1
26802, 1
26803, 1
26804, 1
26810, 1
26812, 1
26813, 1
26814, 1
26816, 1
26817, 1
26829, 1
26830, 2
27241, 1
27246, 1
27248, 1
27251, 1
27252, 1
27253, 1
27254, 2
27256, 2
27258, 1
27260, 1
27262, 1
27264, 1
27265, 1
27270, 1
27274, 1
27275, 1
27279, 1
27280, 1
27282, 1
27283, 1
27285, 1
27287, 1
27290, 2
27292, 1
27293, 1
27295, 1
27296, 1
28408, 1
28409, 1
28410, 1
28415, 1
28416, 1
28417, 1
28418, 1
28419, 1
28420, 1
28421, 1
28422, 1
28423, 1
28429, 1
28437, 1
28438, 1
28439, 1
28441, 1
28442, 2
28443, 1
28445, 1
28456, 1
28468, 1
28473, 1
28474, 1
28475, 1
28476, 1
28477, 1
28479, 1
28480, 1
28499, 1
28519, 1
28520, 1
28600, 1
28628, 1
28629, 1
28635, 1
28638, 1
28639, 1
28641, 1
28642, 1
28643, 1
28657, 1
28658, 1
28659, 1
28660, 1
28661, 1
28662, 1
28663, 1
28683, 1
28685, 2
28686, 1
28688, 1
28693, 1
28694, 1
28695, 1
28696, 1
28697, 1
28698, 1
28699, 1
28707, 1
28709, 1
28711, 1
28712, 1
28714, 1
28715, 1
28717, 1
28718, 2
28720, 1
28723, 1
28724, 2
28725, 1
28726, 1
28729, 1
28731, 1
28732, 1
28737, 1
28738, 1
28739, 1
28761, 1
28762, 1
28763, 1
28764, 1
28765, 1
28766, 1
28767, 1
28769, 1
28770, 1
29133, 1
29134, 1
29135, 1
29136, 1
29137, 1
29139, 1
29140, 2
29141, 1
29142, 1
29143, 1
29144, 1
29145, 1
29146, 1
29147, 1
29152, 1
29153, 1
29154, 1
29155, 1
29158, 1
29160, 1
29161, 1
29162, 1
29163, 2
29165, 1
29166, 1
29167, 1
29168, 1
29169, 1
29170, 1
29172, 1
29173, 1
29174, 1
29175, 1
29177, 1
29179, 1
29181, 1
29182, 1
29184, 1
29186, 2
29191, 1
29197, 1
29198, 1
29199, 1
29200, 1
29222, 1
29226, 1
29241, 1
29243, 1
29246, 1
29247, 1
29253, 1
29254, 1
Rows returned: 1498

-- Throughput in time (per millisecond), in order
-- export timeline-throughput-deliver.csv
--
SELECT (ts - (SELECT min(ts) FROM request WHERE event = 'REQ_DELIVERED'))/1000 as msec, count()
FROM request
WHERE event = 'REQ_DELIVERED'
GROUP BY msec
-- (msec, count[req])
Query time: 0.001 seconds
0, 1
2644, 1
2645, 3
4807, 1
8708, 2
8709, 2
Rows returned: 6

-- Batch size histogram
-- export batch-sizes.csv
--
SELECT val, count()
FROM protocol
WHERE event = 'PROPOSE'
GROUP BY val
-- (batch-size[req], num-batches)
Query time: 0.000 seconds
0, 16
8, 1
22, 1
83, 1
87, 2
93, 3
94, 2
95, 3
96, 1
101, 1
102, 4
103, 2
105, 2
113, 1
114, 3
115, 2
116, 2
117, 2
118, 2
119, 3
120, 3
121, 3
122, 4
123, 4
124, 3
128, 1
134, 1
135, 1
136, 5
137, 2
138, 2
139, 3
140, 1
141, 2
142, 1
145, 1
148, 1
149, 2
150, 2
153, 1
155, 1
164, 1
178, 1
180, 1
181, 1
208, 1
212, 2
215, 1
224, 1
228, 1
229, 1
233, 1
246, 2
250, 1
255, 2
258, 1
265, 1
276, 1
277, 1
292, 1
296, 1
323, 1
430, 1
Rows returned: 63

-- Batch size in time (per millisecond), all peers
-- export timeline-batch-size.csv
--
SELECT (ts - (SELECT min(ts) FROM protocol WHERE event = 'PROPOSE'))/1000 as msec, avg(val)
FROM protocol
WHERE event = 'PROPOSE'
GROUP BY msec
-- (msec, avg[req])
Query time: 0.000 seconds
0, 0.0
4, 0.0
6, 0.0
987, 0.0
1001, 0.0
1005, 0.0
1011, 0.0
2052, 105.0
2138, 104.0
3065, 233.0
3096, 139.0
3102, 136.0
3103, 135.0
4080, 87.0
4085, 83.0
4133, 87.0
5081, 228.0
5108, 141.0
5158, 139.0
5219, 138.0
6092, 122.0
6166, 120.0
6196, 122.0
7105, 123.0
7107, 122.0
7143, 121.0
7246, 246.0
8117, 95.0
8123, 94.0
8145, 95.0
9127, 136.0
9177, 229.0
9179, 137.0
9230, 136.0
10155, 102.0
10161, 102.0
10166, 103.0
11180, 148.0
11198, 202.5
11250, 149.0
12158, 113.0
12222, 116.0
12229, 115.0
13172, 140.0
13217, 250.0
13250, 138.0
13273, 139.0
14208, 102.0
14241, 102.0
14264, 101.0
15191, 224.0
15230, 123.0
15231, 122.0
15313, 120.0
16214, 93.0
16246, 95.0
16273, 93.0
17242, 265.0
17254, 178.0
17314, 180.0
17318, 181.0
18261, 94.0
18279, 93.0
18380, 96.0
19189, 215.0
19261, 117.0
19279, 119.0
19409, 118.0
20282, 115.0
20285, 114.0
20376, 114.0
21231, 246.0
21344, 136.0
21356, 136.0
21358, 134.0
22324, 117.0
22330, 116.0
22369, 118.0
23240, 255.0
23369, 141.0
23375, 142.0
23428, 145.0
24342, 124.0
24346, 128.0
24428, 119.0
25279, 276.0
25393, 153.0
25419, 150.0
25434, 155.0
26362, 124.0
26405, 119.0
26467, 120.0
27371, 323.0
27399, 208.0
27444, 212.0
27623, 212.0
28371, 121.0
28439, 121.0
28483, 114.0
29322, 258.0
29403, 123.0
29513, 123.0
29525, 124.0
30387, 137.0
30476, 149.0
30481, 164.0
31378, 430.0
31518, 296.0
31575, 277.0
31598, 292.0
32392, 8.0
32463, 0.0
32470, 0.0
33291, 22.0
33392, 0.0
33466, 0.0
33472, 0.0
34394, 0.0
34468, 0.0
34476, 0.0
35283, 0.0
Rows returned: 121

-- Proposals in time (per millisecond), all peers
-- export timeline-propose.csv
--
SELECT (ts - (SELECT min(ts) FROM protocol WHERE event = 'PROPOSE'))/1000 as msec, count()
FROM protocol
WHERE event = 'PROPOSE'
GROUP BY msec
-- (msec, avg[req])
Query time: 0.000 seconds
0, 1
4, 1
6, 1
987, 1
1001, 1
1005, 1
1011, 1
2052, 1
2138, 2
3065, 1
3096, 1
3102, 1
3103, 1
4080, 1
4085, 1
4133, 1
5081, 1
5108, 1
5158, 1
5219, 1
6092, 1
6166, 1
6196, 1
7105, 1
7107, 1
7143, 1
7246, 1
8117, 1
8123, 1
8145, 1
9127, 1
9177, 1
9179, 1
9230, 1
10155, 1
10161, 1
10166, 1
11180, 1
11198, 2
11250, 1
12158, 1
12222, 1
12229, 1
13172, 1
13217, 1
13250, 1
13273, 1
14208, 1
14241, 1
14264, 1
15191, 1
15230, 1
15231, 1
15313, 1
16214, 1
16246, 1
16273, 1
17242, 1
17254, 1
17314, 1
17318, 1
18261, 1
18279, 1
18380, 1
19189, 1
19261, 1
19279, 1
19409, 1
20282, 1
20285, 1
20376, 1
21231, 1
21344, 1
21356, 1
21358, 1
22324, 1
22330, 1
22369, 1
23240, 1
23369, 1
23375, 1
23428, 1
24342, 1
24346, 1
24428, 1
25279, 1
25393, 1
25419, 1
25434, 1
26362, 1
26405, 1
26467, 1
27371, 1
27399, 1
27444, 1
27623, 1
28371, 1
28439, 1
28483, 1
29322, 1
29403, 1
29513, 1
29525, 1
30387, 1
30476, 1
30481, 1
31378, 1
31518, 1
31575, 1
31598, 1
32392, 1
32463, 1
32470, 1
33291, 1
33392, 1
33466, 1
33472, 1
34394, 1
34468, 1
34476, 1
35283, 1
Rows returned: 121

-- Proposals in time (per millisecond), all peers
-- export timeline-propose-peer-0.csv
--
SELECT (ts - (SELECT min(ts) FROM protocol WHERE event = 'PROPOSE'))/1000 as msec, count()
FROM protocol
WHERE event = 'PROPOSE' AND nodeId = 0
GROUP BY msec
-- (msec, avg[req])
Query time: 0.000 seconds
0, 1
1001, 1
2138, 1
3096, 1
4133, 1
5219, 1
6196, 1
7143, 1
8123, 1
9179, 1
10161, 1
11198, 1
12229, 1
13273, 1
14208, 1
15313, 1
16246, 1
17254, 1
18279, 1
19279, 1
20282, 1
21358, 1
22330, 1
23375, 1
24346, 1
25419, 1
26405, 1
27444, 1
28439, 1
29513, 1
30476, 1
31598, 1
32463, 1
33466, 1
34468, 1
Rows returned: 35

-- Batch size in time (per millisecond), peer 0
-- export timeline-batch-size-peer-0.csv
--
SELECT (ts - (SELECT min(ts) FROM protocol WHERE event = 'PROPOSE'))/1000 as msec, avg(val)
FROM protocol
WHERE event = 'PROPOSE' AND nodeId = 0
GROUP BY msec
-- (msec, avg[req])
Query time: 0.000 seconds
0, 0.0
1001, 0.0
2138, 103.0
3096, 139.0
4133, 87.0
5219, 138.0
6196, 122.0
7143, 121.0
8123, 94.0
9179, 137.0
10161, 102.0
11198, 150.0
12229, 115.0
13273, 139.0
14208, 102.0
15313, 120.0
16246, 95.0
17254, 178.0
18279, 93.0
19279, 119.0
20282, 115.0
21358, 134.0
22330, 116.0
23375, 142.0
24346, 128.0
25419, 150.0
26405, 119.0
27444, 212.0
28439, 121.0
29513, 123.0
30476, 149.0
31598, 292.0
32463, 0.0
33466, 0.0
34468, 0.0
Rows returned: 35

-- Client slack over time, all clients
-- export client-slack.csv
SELECT (ts - (SELECT min(ts) FROM request WHERE event = 'CLIENT_SLACK'))/1000 as msec, sum(latency)/1000
FROM request
WHERE event = 'CLIENT_SLACK'
GROUP BY msec
-- (msec, slack[ms])
Query time: 0.002 seconds
0, 0
17, -15
67, -62
115, -108
129, -119
141, -129
155, -141
169, -152
184, -164
198, -176
210, -185
221, -194
234, -205
250, -218
266, -232
274, -238
283, -244
296, -254
312, -269
330, -283
340, -291
366, -315
380, -327
390, -334
400, -341
405, -344
415, -352
425, -359
434, -366
442, -371
448, -375
458, -382
464, -386
477, -396
491, -408
500, -415
542, -454
547, -457
568, -475
590, -495
609, -511
622, -522
632, -530
670, -565
685, -578
736, -626
755, -643
789, -674
843, -726
854, -734
881, -759
901, -776
913, -786
925, -796
942, -811
962, -828
980, -844
1010, -871
1021, -879
1034, -890
1061, -915
1073, -924
1091, -940
1127, -973
1150, -994
1167, -1008
1182, -1021
1196, -1033
1242, -1076
1260, -1092
1274, -1103
1292, -1119
1309, -1134
1329, -1151
1353, -1172
1366, -1183
1379, -1194
1387, -1199
1401, -1211
1418, -1225
1429, -1234
1441, -1243
1447, -1247
1460, -1257
1475, -1270
1485, -1277
1514, -1304
1520, -1308
1526, -1311
1539, -1322
1549, -1329
1576, -1354
1592, -1368
1604, -1377
1637, -1408
1643, -1412
1658, -1424
1674, -1438
1699, -1460
1816, -1575
1845, -1601
1887, -1641
1917, -1668
1940, -1688
1973, -1720
2003, -1747
2014, -1755
2027, -1766
2035, -1772
2102, -1836
2109, -1840
2140, -1869
2154, -1880
2172, -1896
2186, -1908
2201, -1921
2211, -1928
2234, -1949
2256, -1968
2269, -1979
2304, -2012
2322, -2027
2354, -2057
2373, -2073
2390, -2087
2420, -2115
2432, -2125
2455, -2145
2550, -2238
2598, -2284
2609, -2292
2616, -2296
2669, -2347
2694, -2369
2702, -2375
2767, -2438
2820, -2488
2833, -2498
2839, -2503
2849, -2510
2868, -2526
2883, -2539
2892, -2546
2899, -2551
2930, -2578
3034, -2680
3057, -2701
3064, -2706
3078, -2717
3098, -2734
3107, -2741
3144, -2776
3166, -2795
3182, -2809
3192, -2817
3205, -2827
3218, -2837
3224, -2841
3238, -2852
3246, -2858
3265, -2874
3278, -2885
3292, -2897
3317, -2920
3330, -2930
3359, -2956
3369, -2964
3384, -2976
3400, -2990
3410, -2997
3415, -3001
3426, -3008
3434, -3014
3445, -3023
3459, -3035
3486, -3059
3500, -3070
3514, -3082
3536, -3101
3554, -3117
3573, -3134
3594, -3152
3610, -3166
3626, -3179
3634, -3185
3661, -3210
3674, -3220
3679, -3223
3712, -3253
3732, -3271
3755, -3291
3760, -3294
3778, -3310
3784, -3313
3792, -3319
3806, -3331
3850, -3372
3872, -3391
3879, -3396
3887, -3402
3910, -3422
3936, -3445
3986, -3493
4005, -3510
4037, -3540
4058, -3558
4066, -3563
4074, -3569
4083, -3576
4092, -3582
4107, -3594
4123, -3608
4134, -3617
4153, -3634
4166, -3644
4198, -3673
4207, -3680
4233, -3704
4268, -3736
4280, -3745
4303, -3766
4348, -3808
4360, -3817
4395, -3851
4409, -3863
4445, -3896
4513, -3962
4523, -3969
4551, -3994
4556, -3998
4569, -4007
4599, -4036
4626, -4060
4648, -4079
4667, -4096
4689, -4115
4729, -4153
4777, -4198
4826, -4245
4832, -4248
4861, -4275
4866, -4278
4999, -4408
5022, -4429
5026, -4431
5036, -4438
5047, -4446
5059, -4457
5066, -4461
5081, -4474
5101, -4491
5147, -4535
5159, -4544
5177, -4560
5191, -4571
5202, -4580
5210, -4586
5222, -4595
5243, -4613
5260, -4628
5280, -4645
5294, -4657
5312, -4673
5330, -4688
5349, -4705
5360, -4714
5374, -4725
5385, -4733
5401, -4747
5419, -4763
5431, -4772
5447, -4786
5455, -4791
5480, -4813
5499, -4830
5513, -4842
5531, -4858
5551, -4875
5563, -4885
5571, -4890
5592, -4909
5603, -4918
5634, -4946
5666, -4975
5741, -5048
5836, -5141
5844, -5146
5904, -5203
5941, -5238
5955, -5250
5970, -5262
5993, -5283
6004, -5292
6025, -5310
6038, -5321
6078, -5358
6087, -5365
6117, -5392
6139, -5412
6156, -5426
6165, -5433
6186, -5452
6226, -5489
6242, -5503
6274, -5532
6293, -5549
6312, -5565
6319, -5570
6324, -5572
6330, -5576
6345, -5588
6373, -5614
6401, -5640
6446, -5682
6482, -5716
6489, -5720
6502, -5731
6518, -5744
6545, -5769
6629, -5851
6635, -5855
6671, -5888
6721, -5935
6765, -5977
6774, -5984
6785, -5992
6792, -5997
6798, -6000
6846, -6046
6864, -6061
6875, -6070
6933, -6125
6943, -6133
6965, -6153
7045, -6230
7068, -6251
7094, -6274
7099, -6277
7105, -6280
7129, -6301
7145, -6316
7156, -6324
7169, -6335
7192, -6355
7200, -6361
7212, -6370
7227, -6383
7243, -6396
7256, -6407
7271, -6419
7277, -6423
7282, -6426
7287, -6428
7298, -6437
7345, -6481
7350, -6483
7384, -6515
7408, -6537
7425, -6552
7436, -6560
7444, -6565
7456, -6575
7467, -6584
7479, -6593
7499, -6610
7515, -6625
7533, -6640
7585, -6690
7594, -6696
7601, -6701
7634, -6731
7645, -6739
7654, -6746
7669, -6759
7686, -6773
7694, -6779
7709, -6792
7763, -6843
7845, -6923
7864, -6939
7920, -6993
7952, -7022
7975, -7043
7996, -7062
8027, -7090
8036, -7097
8095, -7153
8120, -7175
8142, -7196
8156, -7207
8163, -7212
8169, -7215
8181, -7224
8195, -7236
8222, -7261
8234, -7271
8240, -7274
8246, -7277
8262, -7291
8269, -7295
8275, -7299
8285, -7307
8301, -7320
8318, -7335
8350, -7364
8355, -7367
8362, -7372
8395, -7402
8400, -7405
8419, -7421
8450, -7450
8466, -7463
8490, -7485
8498, -7490
8525, -7515
8608, -7595
8676, -7661
8701, -7684
8729, -7709
8783, -7761
8811, -7787
8893, -7866
8910, -7880
8958, -7925
9009, -7975
9063, -8026
9071, -8031
9087, -8045
9105, -8061
9111, -8064
9116, -8067
9122, -8071
9129, -8075
9137, -8080
9149, -8090
9159, -8098
9174, -8110
9186, -8120
9197, -8128
9209, -8138
9224, -8151
9239, -8163
9254, -8176
9271, -8191
9284, -8201
9299, -8213
9315, -8227
9336, -8245
9351, -8257
9368, -8272
9381, -8283
9394, -8294
9405, -8302
9412, -8307
9419, -8311
9432, -8322
9438, -8325
9443, -8328
9455, -8337
9460, -8340
9467, -8345
9493, -8368
9504, -8377
9517, -8387
9529, -8397
9547, -8413
9563, -8426
9578, -8438
9589, -8448
9601, -8457
9614, -8467
9629, -8479
9643, -8491
9657, -8503
9670, -8513
9693, -8534
9703, -8542
9758, -8595
9792, -8626
9807, -8638
9820, -8648
9887, -8714
9892, -8716
9910, -8731
9924, -8743
9957, -8773
9982, -8797
10019, -8831
10041, -8851
10047, -8853
10053, -8857
10071, -8873
10120, -8920
10133, -8930
10139, -8934
10179, -8971
10188, -8978
10204, -8992
10231, -9016
10255, -9037
10277, -9057
10300, -9077
10325, -9100
10332, -9105
10353, -9123
10379, -9147
10413, -9178
10420, -9183
10441, -9201
10451, -9209
10465, -9220
10475, -9228
10502, -9252
10537, -9285
10610, -9356
10655, -9398
10665, -9406
10687, -9426
10714, -9450
10719, -9453
10736, -9467
10751, -9479
10757, -9483
10773, -9497
10843, -9564
10924, -9643
10947, -9663
11020, -9734
11080, -9792
11100, -9809
11109, -9816
11115, -9819
11139, -9841
11150, -9849
11160, -9857
11176, -9871
11191, -9883
11210, -9900
11226, -9914
11239, -9924
11244, -9926
11268, -9948
11280, -9957
11292, -9967
11301, -9974
11308, -9978
11315, -9983
11321, -9986
11326, -9989
11344, -10004
11352, -10010
11360, -10016
11368, -10021
11375, -10026
11381, -10029
11397, -10042
11412, -10055
11424, -10065
11460, -10098
11475, -10111
11486, -10120
11504, -10135
11519, -10148
11531, -10157
11542, -10166
11557, -10178
11571, -10190
11584, -10200
11596, -10210
11605, -10217
11618, -10228
11624, -10231
11661, -10266
11667, -10268
11686, -10286
11712, -10309
11730, -10324
11754, -10346
11785, -10375
11847, -10434
11894, -10479
11948, -10530
11962, -10542
11973, -10551
11990, -10565
12020, -10592
12032, -10602
12048, -10616
12072, -10637
12088, -10651
12129, -10689
12155, -10713
12162, -10717
12196, -10749
12217, -10768
12234, -10782
12248, -10794
12266, -10810
12276, -10817
12295, -10833
12309, -10845
12329, -10862
12338, -10869
12350, -10878
12366, -10892
12379, -10903
12410, -10931
12434, -10953
12447, -10963
12455, -10969
12480, -10992
12549, -11058
12575, -11082
12584, -11088
12627, -11128
12656, -11155
12682, -11179
12715, -11210
12765, -11257
12787, -11277
12823, -11310
12956, -11441
12965, -11447
13002, -11482
13050, -11528
13056, -11531
13072, -11545
13101, -11571
13132, -11599
13145, -11611
13153, -11616
13166, -11627
13174, -11632
13188, -11644
13219, -11672
13229, -11680
13246, -11694
13254, -11700
13283, -11726
13293, -11734
13299, -11737
13319, -11755
13339, -11773
13357, -11788
13375, -11803
13391, -11817
13404, -11828
13424, -11845
13433, -11851
13456, -11872
13461, -11875
13480, -11891
13492, -11901
13529, -11935
13561, -11965
13580, -11982
13594, -11994
13613, -12010
13630, -12025
13640, -12032
13661, -12051
13682, -12069
13689, -12074
13700, -12083
13714, -12094
13722, -12100
13757, -12132
13778, -12150
13889, -12259
13942, -12309
13951, -12316
13956, -12319
13962, -12323
14003, -12361
14038, -12393
14044, -12397
14121, -12472
14141, -12490
14153, -12499
14231, -12574
14236, -12577
14241, -12580
14250, -12586
14316, -12649
14331, -12662
14363, -12692
14392, -12718
14401, -12725
14422, -12744
14437, -12756
14482, -12798
14514, -12828
14522, -12834
14528, -12837
14544, -12850
14584, -12888
14603, -12905
14610, -12909
14617, -12913
14647, -12942
14664, -12956
14702, -12991
14765, -13052
14776, -13061
14793, -13075
14801, -13081
14832, -13109
14872, -13147
14880, -13152
14885, -13155
14922, -13190
14931, -13196
14938, -13201
14953, -13214
14974, -13232
14999, -13254
15010, -13263
15039, -13289
15066, -13314
15071, -13316
15101, -13344
15113, -13354
15136, -13374
15145, -13381
15162, -13396
15184, -13415
15196, -13424
15203, -13429
15209, -13433
15223, -13444
15235, -13454
15253, -13469
15282, -13496
15297, -13508
15312, -13521
15324, -13531
15339, -13543
15349, -13551
15362, -13561
15377, -13574
15391, -13586
15399, -13591
15404, -13594
15426, -13613
15436, -13620
15441, -13623
15446, -13626
15452, -13630
15459, -13634
15464, -13636
15478, -13648
15496, -13664
15513, -13678
15528, -13690
15538, -13698
15549, -13707
15564, -13719
15581, -13734
15593, -13744
15604, -13752
15615, -13761
15623, -13766
15631, -13772
15650, -13788
15663, -13798
15677, -13811
15688, -13819
15702, -13830
15714, -13840
15725, -13849
15731, -13853
15742, -13861
15765, -13882
15771, -13885
15778, -13889
15783, -13892
15804, -13911
15841, -13945
15908, -14009
15983, -14082
16011, -14108
16090, -14185
16133, -14225
16203, -14293
16215, -14302
16235, -14320
16258, -14340
16280, -14360
16302, -14379
16312, -14387
16333, -14406
16341, -14411
16371, -14439
16377, -14442
16390, -14453
16415, -14475
16433, -14491
16464, -14519
16487, -14540
16501, -14551
16536, -14584
16552, -14598
16568, -14612
16578, -14619
16594, -14632
16609, -14645
16664, -14697
16671, -14702
16676, -14705
16707, -14733
16766, -14790
16773, -14794
16784, -14803
16810, -14826
16817, -14830
16868, -14879
16948, -14957
16997, -15004
17039, -15043
17053, -15055
17098, -15097
17115, -15112
17126, -15120
17131, -15123
17151, -15141
17156, -15143
17204, -15188
17210, -15192
17269, -15249
17286, -15263
17291, -15266
17312, -15284
17344, -15314
17368, -15335
17391, -15356
17401, -15363
17411, -15371
17422, -15380
17428, -15383
17434, -15387
17442, -15392
17453, -15401
17464, -15410
17479, -15423
17493, -15433
17511, -15449
17536, -15472
17559, -15492
17570, -15501
17584, -15513
17602, -15528
17617, -15540
17658, -15579
17685, -15603
17696, -15612
17706, -15619
17726, -15637
17739, -15648
17753, -15660
17784, -15688
17818, -15720
17835, -15734
17894, -15790
17937, -15831
17944, -15835
17963, -15852
17968, -15855
18016, -15901
18080, -15962
18086, -15966
18108, -15985
18115, -15990
18136, -16009
18151, -16021
18186, -16053
18202, -16067
18211, -16074
18216, -16076
18227, -16085
18232, -16088
18238, -16090
18243, -16093
18296, -16144
18325, -16171
18379, -16222
18385, -16226
18402, -16240
18422, -16258
18434, -16267
18439, -16270
18518, -16347
18523, -16349
18548, -16371
18563, -16384
18576, -16395
18589, -16406
18618, -16431
18622, -16434
18657, -16466
18662, -16468
18700, -16504
18772, -16573
18784, -16583
18797, -16593
18807, -16601
18828, -16620
18853, -16643
18872, -16659
18904, -16689
18956, -16738
19040, -16819
19053, -16830
19073, -16848
19090, -16862
19103, -16873
19121, -16888
19129, -16894
19144, -16906
19149, -16910
19156, -16913
19165, -16920
19192, -16945
19198, -16948
19210, -16958
19255, -17001
19263, -17006
19272, -17011
19300, -17038
19323, -17058
19349, -17083
19379, -17110
19401, -17130
19423, -17149
19438, -17162
19444, -17165
19458, -17176
19472, -17188
19483, -17197
19500, -17211
19536, -17245
19551, -17258
19582, -17286
19588, -17289
19606, -17306
19626, -17323
19631, -17325
19636, -17328
19645, -17335
19659, -17346
19668, -17352
19678, -17360
19694, -17373
19710, -17387
19720, -17394
19732, -17404
19749, -17419
19767, -17434
19816, -17481
19822, -17484
19832, -17492
19846, -17503
19909, -17564
19919, -17571
19933, -17583
19990, -17638
20051, -17696
20078, -17721
20177, -17818
20186, -17824
20209, -17844
20222, -17855
20231, -17862
20239, -17868
20251, -17877
20277, -17900
20284, -17905
20298, -17917
20304, -17920
20316, -17929
20353, -17964
20360, -17969
20365, -17971
20382, -17986
20420, -18022
20435, -18034
20448, -18045
20462, -18057
20473, -18065
20490, -18080
20514, -18100
20535, -18119
20562, -18144
20587, -18166
20638, -18215
20642, -18217
20671, -18243
20693, -18263
20711, -18279
20717, -18281
20723, -18285
20729, -18289
20743, -18301
20762, -18317
20769, -18322
20820, -18370
20827, -18375
20834, -18379
20864, -18407
20893, -18434
20944, -18482
20984, -18519
21011, -18544
21016, -18547
21070, -18598
21133, -18659
21140, -18663
21169, -18689
21177, -18695
21185, -18702
21197, -18710
21212, -18723
21229, -18738
21239, -18745
21254, -18757
21269, -18770
21288, -18787
21305, -18802
21318, -18812
21326, -18818
21347, -18836
21364, -18851
21369, -18853
21382, -18863
21390, -18869
21401, -18878
21416, -18891
21432, -18905
21455, -18924
21468, -18936
21474, -18939
21486, -18949
21498, -18958
21506, -18964
21540, -18995
21556, -19009
21568, -19018
21598, -19046
21610, -19055
21619, -19062
21639, -19080
21658, -19096
21678, -19113
21714, -19147
21724, -19154
21728, -19157
21745, -19171
21761, -19184
21778, -19199
21796, -19215
21826, -19242
21848, -19262
21870, -19281
21882, -19290
21886, -19292
21911, -19315
21941, -19343
21949, -19348
21957, -19354
22002, -19396
22007, -19398
22044, -19433
22048, -19435
22137, -19522
22180, -19562
22209, -19589
22220, -19597
22250, -19625
22270, -19642
22294, -19663
22300, -19667
22307, -19672
22324, -19687
22339, -19699
22356, -19714
22362, -19717
22380, -19732
22391, -19741
22396, -19744
22401, -19746
22417, -19759
22445, -19785
22481, -19819
22489, -19825
22499, -19832
22511, -19842
22535, -19863
22572, -19898
22602, -19925
22641, -19962
22647, -19966
22663, -19979
22679, -19993
22720, -20031
22730, -20039
22742, -20048
22771, -20074
22784, -20086
22792, -20091
22803, -20099
22818, -20112
22831, -20123
22837, -20126
22851, -20138
22864, -20149
22918, -20200
22923, -20202
23047, -20324
23089, -20363
23103, -20375
23135, -20404
23170, -20438
23175, -20440
23220, -20483
23229, -20489
23241, -20498
23263, -20518
23272, -20524
23286, -20537
23304, -20552
23324, -20569
23346, -20589
23361, -20602
23384, -20622
23398, -20633
23410, -20643
23417, -20648
23427, -20655
23435, -20661
23461, -20684
23486, -20707
23500, -20719
23515, -20731
23521, -20735
23526, -20738
23551, -20759
23564, -20771
23584, -20788
23592, -20793
23616, -20815
23630, -20826
23635, -20829
23646, -20837
23651, -20840
23662, -20849
23676, -20860
23683, -20865
23707, -20887
23713, -20890
23738, -20912
23743, -20915
23748, -20918
23755, -20922
23766, -20930
23772, -20934
23777, -20937
23783, -20940
23794, -20949
23801, -20954
23808, -20958
23825, -20972
23832, -20977
23856, -20999
23882, -21023
23898, -21036
23905, -21040
23925, -21058
23952, -21083
23967, -21095
23996, -21122
24045, -21168
24054, -21175
24063, -21181
24109, -21225
24132, -21245
24169, -21280
24183, -21292
24206, -21312
24213, -21317
24218, -21320
24229, -21327
24235, -21331
24240, -21334
24261, -21352
24266, -21356
24273, -21360
24286, -21370
24297, -21378
24311, -21391
24363, -21440
24388, -21463
24421, -21493
24427, -21497
24470, -21537
24507, -21572
24515, -21577
24523, -21583
24543, -21600
24555, -21610
24563, -21616
24585, -21635
24635, -21682
24689, -21735
24729, -21771
24760, -21801
24774, -21812
24782, -21818
24798, -21831
24827, -21857
24851, -21879
24859, -21884
24866, -21889
24879, -21900
24892, -21911
24907, -21923
24922, -21935
24930, -21941
25023, -22031
25056, -22062
25087, -22091
25092, -22093
25119, -22118
25144, -22140
25149, -22143
25186, -22178
25211, -22200
25230, -22217
25241, -22226
25248, -22230
25257, -22236
25264, -22241
25278, -22252
25284, -22256
25293, -22262
25306, -22273
25313, -22278
25327, -22289
25333, -22292
25339, -22297
25344, -22299
25350, -22302
25363, -22313
25373, -22320
25384, -22329
25393, -22336
25409, -22349
25422, -22360
25436, -22372
25446, -22379
25451, -22382
25456, -22384
25461, -22386
25467, -22390
25472, -22393
25482, -22400
25489, -22405
25502, -22415
25512, -22423
25520, -22429
25531, -22437
25538, -22442
25548, -22449
25570, -22468
25580, -22477
25590, -22484
25612, -22504
25621, -22510
25633, -22519
25638, -22522
25655, -22536
25667, -22546
25676, -22553
25691, -22565
25706, -22578
25718, -22588
25725, -22592
25736, -22600
25742, -22604
25751, -22611
25762, -22619
25769, -22624
25776, -22629
25782, -22632
25787, -22634
25796, -22641
25803, -22645
25820, -22660
25829, -22667
25840, -22675
25849, -22682
25861, -22691
25874, -22702
25887, -22713
25898, -22721
25903, -22723
25909, -22727
25918, -22734
25931, -22745
25941, -22752
25983, -22792
26000, -22806
26013, -22816
26073, -22874
26089, -22887
26134, -22930
26216, -23009
26239, -23031
26266, -23055
26287, -23073
26337, -23121
26347, -23128
26362, -23141
26369, -23146
26379, -23153
26404, -23176
26417, -23186
26436, -23203
26454, -23218
26462, -23224
26493, -23253
26498, -23255
26502, -23257
26513, -23265
26530, -23280
26542, -23290
26564, -23309
26574, -23317
26582, -23322
26587, -23324
26622, -23358
26628, -23361
26653, -23383
26657, -23385
26667, -23392
26688, -23411
26709, -23430
26732, -23450
26740, -23456
26755, -23469
26808, -23519
26823, -23532
26842, -23548
26861, -23564
26870, -23571
26884, -23583
26894, -23590
26911, -23605
26917, -23609
27112, -23801
27120, -23807
27141, -23825
27147, -23829
27212, -23892
27232, -23909
27243, -23917
27257, -23929
27272, -23941
27317, -23984
27340, -24004
27360, -24022
27365, -24025
27382, -24039
27403, -24058
27517, -24170
27525, -24174
27536, -24183
27543, -24188
27583, -24225
27587, -24227
27597, -24235
27608, -24243
27619, -24252
27624, -24254
27628, -24256
27640, -24265
27646, -24269
27660, -24280
27664, -24282
27677, -24292
27684, -24298
27698, -24309
27712, -24320
27726, -24332
27745, -24349
27753, -24354
27762, -24360
27777, -24374
27790, -24383
27802, -24394
27827, -24416
27839, -24426
27853, -24437
27875, -24456
27896, -24475
27901, -24478
27924, -24499
27943, -24515
28038, -24608
28043, -24610
28086, -24651
28091, -24653
28116, -24675
28130, -24687
28142, -24697
28166, -24718
28191, -24741
28254, -24802
28265, -24810
28294, -24836
28324, -24865
28345, -24882
28355, -24890
28360, -24892
28379, -24909
28392, -24920
28397, -24923
28419, -24942
28427, -24947
28436, -24954
28474, -24990
28496, -25009
28504, -25014
28510, -25018
28524, -25030
28550, -25053
28560, -25061
28571, -25070
28576, -25072
28664, -25157
28706, -25198
28721, -25209
28725, -25212
28730, -25214
28734, -25216
28757, -25236
28782, -25259
28791, -25266
28820, -25291
28842, -25312
28885, -25352
28892, -25356
28901, -25363
28906, -25365
28913, -25370
28943, -25398
28948, -25400
28952, -25402
28957, -25404
28961, -25406
28966, -25408
28972, -25412
28979, -25417
28984, -25419
28995, -25427
29005, -25436
29018, -25446
29024, -25450
29030, -25453
29038, -25458
29045, -25463
29050, -25466
29055, -25468
29060, -25471
29066, -25474
29070, -25476
29077, -25480
29083, -25484
29088, -25486
29095, -25491
29100, -25494
29111, -25502
29121, -25509
29129, -25515
29152, -25535
29156, -25538
29160, -25540
29172, -25548
29181, -25555
29187, -25559
29192, -25561
29197, -25564
29202, -25566
29206, -25568
29218, -25578
29229, -25586
29236, -25590
29242, -25595
29254, -25604
29261, -25608
29268, -25613
29273, -25616
29278, -25618
29282, -25620
29287, -25622
29292, -25625
29298, -25629
29303, -25631
29308, -25634
29313, -25635
29317, -25638
29322, -25640
29326, -25642
29331, -25644
29336, -25646
29340, -25648
29345, -25650
29350, -25653
29354, -25655
29359, -25657
29363, -25659
29368, -25661
29372, -25664
29377, -25666
29382, -25668
29387, -25671
29392, -25673
29396, -25675
29400, -25677
29405, -25679
29411, -25682
29415, -25684
29419, -25686
29425, -25689
29429, -25691
29434, -25693
29438, -25695
29443, -25697
29448, -25700
29452, -25702
29457, -25704
29462, -25707
29467, -25710
29471, -25711
29476, -25714
29481, -25716
29488, -25720
29493, -25723
29498, -25726
29558, -25783
29574, -25797
29585, -25805
29599, -25817
29609, -25824
29624, -25838
29635, -25846
29656, -25864
29667, -25873
29692, -25896
29697, -25898
29702, -25901
29717, -25913
29729, -25923
29741, -25932
29753, -25942
29764, -25951
29780, -25963
29808, -25990
29816, -25995
29837, -26013
29859, -26033
29870, -26042
29879, -26048
29883, -26050
29892, -26056
29903, -26065
29929, -26089
29949, -26106
29963, -26118
29977, -26129
29986, -26136
29995, -26142
30000, -26144
30004, -26147
Rows returned: 1582

-- Client slack over time, client 1
-- export client-slack-client-1.csv
SELECT (ts - (SELECT min(ts) FROM request WHERE event = 'CLIENT_SLACK' AND nodeId = -1)) as usec, latency
FROM request
WHERE event = 'CLIENT_SLACK' AND nodeId = -1
-- (usec, slack[us])
Query time: 0.000 seconds
Rows returned: 0

-- Client slack over time, client 2
-- export client-slack-client-2.csv
SELECT (ts - (SELECT min(ts) FROM request WHERE event = 'CLIENT_SLACK' AND nodeId = -2)) as usec, latency
FROM request
WHERE event = 'CLIENT_SLACK' AND nodeId = -2
-- (usec, slack[us])
Query time: 0.000 seconds
Rows returned: 0

-- Message batch size histogram
-- export histogram-msg-batch-size.csv
--
SELECT val, count()
FROM protocol_truncated
WHERE event = 'MSG_BATCH'
GROUP BY val
--(batchsize[req], count[batches])
Query time: 0.000 seconds
Rows returned: 0

-- Message batch sizes over time
-- export timeline-avg-msg-batch.csv
SELECT (ts - (SELECT min(ts) FROM protocol WHERE event = 'MSG_BATCH'))/1000 as msec, avg(val)
from protocol
WHERE event = 'MSG_BATCH'
GROUP BY msec
-- (msec, avgbatch[req])
Query time: 0.000 seconds
0, 1.0
2, 1.0
3, 1.0
4, 1.25
5, 2.5
8, 1.0
11, 7.0
14, 1.0
15, 1.0
976, 1.0
26527, 1.0
26529, 2.0
27575, 4.0
27675, 2.0
27707, 2.0
27731, 2.0
27752, 1.0
28418, 1.0
28467, 1.0
28503, 2.0
28535, 1.0
Rows returned: 21

-- Bandwidths between all pairs of peers.
-- The output of this query is meant for further processing by another scripts that formats the data as a table.
-- export bandwidths-list.csv
SELECT nodeId as sender, seqNr as receiver, val as bandwidth
FROM protocol
WHERE event = 'BANDWIDTH'
-- (sender, receiver, bandwidth[kB/s])
Query time: 0.000 seconds
Rows returned: 0

-- Leaders in epochs.
-- export epoch-leaders.csv
SELECT seqNr as epoch, avg(val) as leaders
FROM protocol
WHERE event = 'NEW_EPOCH'
group by epoch
Query time: 0.000 seconds
0, 4.0
Rows returned: 1

-- View changes, from view 0 to view 1 only.
-- export timeline-view-change-first.csv
SELECT (ts - (SELECT min(ts) FROM protocol WHERE event = 'NEW_EPOCH'))/1000 as msec, count()
from protocol
WHERE event = 'VIEW_CHANGE' AND val = 1
GROUP BY msec
Query time: 0.000 seconds
Rows returned: 0

-- Cascading view changes.
-- export timeline-view-change-cascade.csv
SELECT (ts - (SELECT min(ts) FROM protocol WHERE event = 'NEW_EPOCH'))/1000 as msec, count()
from protocol
WHERE event = 'VIEW_CHANGE' AND val > 1
GROUP BY msec
Query time: 0.000 seconds
Rows returned: 0

-- All view changes.
-- export timeline-view-change-all.csv
SELECT (ts - (SELECT min(ts) FROM protocol WHERE event = 'NEW_EPOCH'))/1000 as msec, count()
from protocol
WHERE event = 'VIEW_CHANGE'
GROUP BY msec
Query time: 0.000 seconds
Rows returned: 0

Total running time: 0.023 seconds
